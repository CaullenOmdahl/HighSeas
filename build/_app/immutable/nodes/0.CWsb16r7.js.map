{"version":3,"mappings":"q3DAAA,qzBAiByB,qBAAAA,GAAAC,EAAK,EAAC,IAAI,SAAa,GAAG,IAO1B,qBAAAA,IAAM,IAAI,SAAS,WAAW,SAAS,IAOvC,qBAAAA,EAAK,EAAC,IAAI,SAAS,WAAW,WAAW,6CA5BlE,CCQO,MAAMC,EAAgBC,GAAwB,CACpD,eAAgB,KAChB,kBAAmB,GACnB,aAAc,GACd,aAAc,KACd,eAAgB,IACjB,CAAC,EAEM,MAAMC,EAA0B,CAStC,aAAc,CARNC,EAAA,yBAAmC,IACnCA,EAAA,oBAAe,IACfA,EAAA,gBAAW,IACXA,EAAA,oBAAgC,IAChCA,EAAA,kBAAa,GACbA,EAAA,kBAAa,GACbA,EAAA,kBAAa,IAInB,KAAK,oBAEP,CAEQ,oBAAqB,CAG5B,SAAS,iBAAiB,UAAW,KAAK,cAAc,KAAK,IAAI,CAAC,EAElE,SAAS,iBAAiB,YAAa,IAAM,CAC5C,KAAK,SAAW,GAChB,KAAK,aAAe,GACpB,KAAK,aACN,CAAC,CACF,CAEQ,cAAcC,EAAsB,CAE3C,GACE,CAAC,UAAW,YAAa,YAAa,aAAc,QAAS,QAAQ,EAAE,SAASA,EAAM,GAAG,GAMvF,EAAAA,EAAM,kBAAkB,kBAAoBA,EAAM,kBAAkB,uBAKpE,CAAC,UAAW,YAAa,YAAa,YAAY,EAAE,SAASA,EAAM,GAAG,IACpE,KAAK,WACT,KAAK,SAAW,GAChB,KAAK,2BAID,KAAK,aAMP,GAAC,KAAK,UAAY,KAAK,kBAAkB,SAAW,IAOxD,QAFAA,EAAM,iBAEEA,EAAM,KACb,IAAK,aACA,KAAK,WACR,KAAK,gBAEL,KAAK,eAEN,MACD,IAAK,YACA,KAAK,WACR,KAAK,eAEL,KAAK,mBAEN,MACD,IAAK,UACA,KAAK,WACR,KAAK,aAEL,KAAK,mBAEN,MACD,IAAK,YACA,KAAK,WACR,KAAK,eAEL,KAAK,eAEN,MACD,IAAK,QACJ,KAAK,yBACL,MACD,IAAK,SACJ,KAAK,aACL,MAGF,KAAK,cACN,CAEQ,0BAA2B,CAIlC,MAAMC,EAAY,SAAS,iBAAiB,kBAAkB,EACxDC,EAAgB,SAAS,cAAc,uBAAuB,EAEhED,EAAU,OAAS,GAAKC,EAC3B,KAAK,sBAEL,KAAK,uBAEP,CAEQ,qBAAsB,CAC7B,KAAK,WAAa,GAClB,KAAK,aAAe,GAGpB,MAAMD,EAAY,SAAS,iBAAiB,kBAAkB,EACxDC,EAAgB,SAAS,cAAc,uBAAuB,EAKpE,GAAIA,EAAe,CAElB,MAAMC,EAAa,MAAM,KACxBD,EAAc,iBAAiB,mBAAmB,GAGnD,KAAK,uBAAuBC,CAAU,CACvC,KAAO,CAEN,IAAIC,EAAiB,EACrBH,EAAU,QAAQ,CAACI,EAAKC,IAAkB,CACzC,MAAMH,EAAa,MAAM,KAAKE,EAAI,iBAAiB,mBAAmB,CAAC,EAEvE,GAAIF,EAAW,OAAS,EAAG,CAC1B,MAAMI,EAAeJ,EAAW,OAAQK,GAAS,KAAK,iBAAiBA,CAAI,CAAC,EAExED,EAAa,OAAS,IAERF,EAAI,cAAc,IAAI,GAAG,aAAsB,GAAAC,IAIhE,KAAK,aAAaF,CAAc,EAAIG,EACpCH,IAEF,CACD,CAAC,CACF,CAGA,GAAI,KAAK,aAAa,OAAS,GAAK,KAAK,aAAa,CAAC,GAAK,KAAK,aAAa,CAAC,EAAE,OAAS,EACzF,KAAK,WAAa,EAClB,KAAK,WAAa,EAElB,KAAK,aAAa,QAAQ,CAACC,EAAKI,IAAU,CAE1C,CAAC,MACK,CAEN,KAAK,WAAa,GAClB,MACD,CAGA,KAAK,kBAAoB,KAAK,aAAa,OAC3C,KAAK,aAAe,CAErB,CAEQ,uBAAuBC,EAAyB,CAEvD,GAAIA,EAAS,SAAW,EAAG,OAE3B,MAAMC,EAAYD,EAAS,CAAC,EAAE,QAAQ,uBAAuB,EAC7D,GAAI,CAACC,EAAW,OAEhB,MAAMC,EAAiBD,EAAU,wBAAwB,MACnDE,EAAYH,EAAS,CAAC,EAAE,wBAAwB,MAChDI,EAAM,GAENC,EAAc,KAAK,OAAOH,EAAiBE,IAAQD,EAAYC,EAAI,EAGzE,KAAK,aAAe,GACpB,QAASE,EAAI,EAAGA,EAAIN,EAAS,OAAQM,GAAKD,EAAa,CACtD,MAAMV,EAAMK,EAAS,MAAMM,EAAGA,EAAID,CAAW,EAAE,OAAQE,GAAO,KAAK,iBAAiBA,CAAE,CAAC,EACnFZ,EAAI,OAAS,GAChB,KAAK,aAAa,KAAKA,CAAG,CAE5B,CACD,CAEQ,uBAAwB,CAC/B,KAAK,WAAa,GAGlB,MAAMa,EAAY,CACjB,uEACA,gFACA,wDACA,+CACA,gDACA,iFAGD,KAAK,kBAAoB,MAAM,KAAK,SAAS,iBAAiBA,EAAU,KAAK,IAAI,CAAC,CAAC,EAAE,OACnFD,GACO,KAAK,iBAAiBA,CAAiB,CAC/C,EAIG,KAAK,eAAiB,IAAM,KAAK,kBAAkB,OAAS,IAC/D,KAAK,aAAe,EAEtB,CAEQ,iBAAiBE,EAA+B,CACvD,MAAMC,EAAOD,EAAQ,wBAIrB,OAFCC,EAAK,MAAQ,GAAKA,EAAK,OAAS,GAAKA,EAAK,IAAM,OAAO,aAAeA,EAAK,OAAS,GAEjE,OAAO,iBAAiBD,CAAO,EAAE,aAAe,QACrE,CAEQ,cAAe,CACtB,GAAI,KAAK,WACR,KAAK,oBACC,CACN,GAAI,KAAK,kBAAkB,SAAW,EAAG,OAEzC,KAAK,cAAgB,KAAK,aAAe,GAAK,KAAK,kBAAkB,OACrE,KAAK,qBACN,CACD,CAEQ,kBAAmB,CAC1B,GAAI,KAAK,WACR,KAAK,mBACC,CACN,GAAI,KAAK,kBAAkB,SAAW,EAAG,OAEzC,KAAK,aACJ,KAAK,cAAgB,EAAI,KAAK,kBAAkB,OAAS,EAAI,KAAK,aAAe,EAClF,KAAK,qBACN,CACD,CAEQ,YAAa,CACpB,GAAI,GAAC,KAAK,YAAc,KAAK,aAAa,SAAW,IAKjD,KAAK,WAAa,EAAG,CACxB,KAAK,aAEL,MAAME,EAAe,KAAK,aAAa,KAAK,UAAU,EAAE,OACxD,GAAIA,EAAe,EAAG,CAErB,MAAMC,EAAe,KAAK,aAAa,KAAK,WAAa,CAAC,EAAE,OACtDC,EAAmB,KAAK,YAAcD,EAAe,GAAK,GAChE,KAAK,WAAa,KAAK,MAAMC,GAAoBF,EAAe,EAAE,GAAK,EACvE,KAAK,WAAa,KAAK,IAAI,EAAG,KAAK,IAAI,KAAK,WAAYA,EAAe,CAAC,CAAC,CAC1E,CACA,KAAK,qBAEL,KAAK,qBACN,CAGD,CAEQ,cAAe,CACtB,GAAI,GAAC,KAAK,YAAc,KAAK,aAAa,SAAW,IAKjD,KAAK,WAAa,KAAK,aAAa,OAAS,EAAG,CACnD,KAAK,aAEL,MAAMA,EAAe,KAAK,aAAa,KAAK,UAAU,EAAE,OACxD,GAAIA,EAAe,EAAG,CAErB,MAAMC,EAAe,KAAK,aAAa,KAAK,WAAa,CAAC,EAAE,OACtDC,EAAmB,KAAK,YAAcD,EAAe,GAAK,GAChE,KAAK,WAAa,KAAK,MAAMC,GAAoBF,EAAe,EAAE,GAAK,EACvE,KAAK,WAAa,KAAK,IAAI,EAAG,KAAK,IAAI,KAAK,WAAYA,EAAe,CAAC,CAAC,CAC1E,CACA,KAAK,qBAEL,KAAK,qBACN,CAGD,CAEQ,cAAe,CACtB,GAAI,GAAC,KAAK,YAAc,KAAK,aAAa,SAAW,GAKrD,IAAI,KAAK,WAAa,EACrB,KAAK,qBAEK,KAAK,WAAa,EAE5B,KAAK,aACL,KAAK,WAAa,KAAK,aAAa,KAAK,UAAU,EAAE,OAAS,MAI9D,QAED,KAAK,qBACL,KAAK,sBACN,CAEQ,eAAgB,CACvB,GAAI,GAAC,KAAK,YAAc,KAAK,aAAa,SAAW,GAKrD,IAAI,KAAK,WAAa,KAAK,aAAa,KAAK,UAAU,EAAE,OAAS,EACjE,KAAK,qBAEK,KAAK,WAAa,KAAK,aAAa,OAAS,EAEvD,KAAK,aACL,KAAK,WAAa,MAIlB,QAED,KAAK,qBACL,KAAK,sBACN,CAEQ,oBAAqB,CAC5B,GAAI,CAAC,KAAK,YAAc,KAAK,aAAa,SAAW,EAAG,OAGxD,IAAIZ,EAAQ,EACZ,QAASe,EAAI,EAAGA,EAAI,KAAK,WAAYA,IACpCf,GAAS,KAAK,aAAae,CAAC,EAAE,OAE/Bf,GAAS,KAAK,WACd,KAAK,aAAeA,CACrB,CAEQ,qBAAsB,CAC7B,MAAMU,EAAU,KAAK,kBAAkB,KAAK,YAAY,EACpDA,IAGFA,EAAQ,aAAa,YAAY,GACjCA,EAAQ,cAAc,IAAI,GAAG,YAG9BA,EAAQ,QAGRA,EAAQ,eAAe,CACtB,SAAU,SACV,MAAO,SACP,OAAQ,SACR,EAIH,CAEQ,wBAAyB,CAChC,MAAMA,EAAU,KAAK,kBAAkB,KAAK,YAAY,EACpDA,GACHA,EAAQ,OAEV,CAEQ,YAAa,CACpB,KAAK,SAAW,GAChB,KAAK,aAAe,GACpB,KAAK,kBAAoB,GAGrB,SAAS,yBAAyB,aACrC,SAAS,cAAc,MAEzB,CAEQ,aAAc,CACrBvB,EAAc,IAAI,CACjB,eAAgB,KAAK,kBAAkB,KAAK,YAAY,GAAK,KAC7D,kBAAmB,KAAK,kBACxB,aAAc,KAAK,aACnB,aAAc,KAAK,WAAa,CAAE,IAAK,KAAK,WAAY,IAAK,KAAK,YAAe,KACjF,eACC,KAAK,YAAc,KAAK,aAAa,OAAS,EAC3C,CACA,KAAM,KAAK,aAAa,OACxB,KAAM,KAAK,IAAI,GAAG,KAAK,aAAa,IAAKS,GAAQA,EAAI,MAAM,CAAC,GAE5D,KACJ,CACF,CAEO,SAAU,CAChB,SAAS,oBAAoB,UAAW,KAAK,aAAa,CAC3D,CACD,CAGO,MAAMoB,GAAqB,IAAI3B,uOCzbtC,yBAIK,IAAA4B,EAA6C,KAEjD,OAAAC,EAAO,IACc/B,EAAc,UAAWgC,GAAU,CAElDF,GACHA,EAAuB,UAAU,OAAO,gBAAgB,EAIrDE,EAAM,iBACTA,EAAM,eAAe,UAAU,IAAI,gBAAgB,EACnDF,EAAyBE,EAAM,eAEjC,CAAC,CAGD,EAEDC,GAAS,IAAO,CAEXH,GACHA,EAAuB,UAAU,OAAO,gBAAgB,CAE1D,CAAC,iBACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8GC7BA,yBAgBK,IAAAI,MAAqB,EAAK,iBAC1BC,MAAsB,EAAK,kBAC3BC,QAAmBC,EAAY,iBAC/BC,QAAiBC,EAAU,eAE/BR,EAAO,IAAO,CACbS,EAA2B,EAC3BC,EAAAP,EAAcQ,GAAc,MAC5BD,EAAAN,EAAeQ,GAAkB,MACjCF,EAAAL,EAAYC,EAAY,MACxBI,EAAAH,EAAUC,EAAU,KACrB,CAAC,QAGKK,EAAgBC,EAAkBC,EAAA,SACjC,MAAAC,EAAO,mCAET,OAAAC,EAAAb,CAAY,KACLY,CAAI,gCAGLA,CAAI,aACf,CAAC,sBAEKE,EAAcJ,EAAkBC,EAAA,QACjCE,EAAAb,CAAY,EACR,wBAGD,uCACP,yKASGA,CAAY,GAAAe,EAAAC,CAAA,yCANLP,CAAgB,2CAAiBV,CAAW,EAAG,KAAO,KAAK,YAC1De,CAAc,wCAH3B,yGC/CA,yBAUK,IAAAf,MAAqB,EAAK,iBAE9BH,EAAO,IAAO,CAEbS,EAA2B,EAC3BC,EAAAP,EAAcQ,GAAc,MAGxBM,EAAAd,CAAW,GACdkB,GAAsB,wCAIM,uBAC9B,CAAC,qJAKMlB,CAAW,GAAAgB,EAAAC,CAAA,wRAJnB","names":["$.strict_equals","$page","keyboardStore","writable","KeyboardNavigationManager","__publicField","event","movieRows","searchResults","movieCards","actualRowIndex","row","originalIndex","visibleCards","card","index","elements","container","containerWidth","cardWidth","gap","cardsPerRow","i","el","selectors","element","rect","newRowLength","oldRowLength","relativePosition","r","keyboardNavigation","previousFocusedElement","onMount","state","onDestroy","isAndroidTV","useTenFootUI","fontSizes","getFontSizes","spacing","getSpacing","initializePlatformDetection","$.set","getIsAndroidTV","shouldUseTenFootUI","containerClasses","$.tag","$.derived","base","$.get","contentClasses","$$render","consequent","initializeTVNavigation"],"ignoreList":[],"sources":["../../../../../../src/lib/components/Header.svelte","../../../../../../src/lib/stores/keyboard.ts","../../../../../../src/lib/components/KeyboardNavigation.svelte","../../../../../../src/lib/components/TVLayout.svelte","../../../../../../src/routes/+layout.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { Search, Settings, User } from 'lucide-svelte';\n\timport { page } from '$app/stores';\n</script>\n\n<header\n\tclass=\"fixed top-0 z-50 w-full bg-gradient-to-b from-black/90 to-transparent backdrop-blur-sm transition-all duration-300\"\n>\n\t<nav class=\"flex items-center justify-between px-4 py-4 sm:px-6 md:px-12 md:py-6\">\n\t\t<div class=\"flex items-center space-x-4 sm:space-x-6 md:space-x-12\">\n\t\t\t<a href=\"/\" class=\"text-xl font-black tracking-tight text-red-600 sm:text-2xl md:text-3xl\"\n\t\t\t\t>HighSeas</a\n\t\t\t>\n\t\t\t<div class=\"hidden space-x-4 sm:space-x-6 md:flex md:space-x-8\">\n\t\t\t\t<a\n\t\t\t\t\thref=\"/\"\n\t\t\t\t\tclass=\"font-medium text-white transition-colors hover:text-gray-300\"\n\t\t\t\t\tclass:text-red-500={$page.url.pathname === '/'}\n\t\t\t\t>\n\t\t\t\t\tHome\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\thref=\"/movies\"\n\t\t\t\t\tclass=\"font-medium text-white transition-colors hover:text-gray-300\"\n\t\t\t\t\tclass:text-red-500={$page.url.pathname.startsWith('/movies')}\n\t\t\t\t>\n\t\t\t\t\tMovies\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\thref=\"/tv-shows\"\n\t\t\t\t\tclass=\"font-medium text-white transition-colors hover:text-gray-300\"\n\t\t\t\t\tclass:text-red-500={$page.url.pathname.startsWith('/tv-shows')}\n\t\t\t\t>\n\t\t\t\t\tTV Shows\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"flex items-center space-x-3 sm:space-x-4 md:space-x-6\">\n\t\t\t<a\n\t\t\t\thref=\"/search\"\n\t\t\t\tclass=\"p-2 text-white transition-colors hover:text-gray-300\"\n\t\t\t\taria-label=\"Search content\"\n\t\t\t>\n\t\t\t\t<Search class=\"h-5 w-5 sm:h-6 sm:w-6\" />\n\t\t\t</a>\n\t\t\t<a\n\t\t\t\thref=\"/settings\"\n\t\t\t\tclass=\"hidden p-2 text-white transition-colors hover:text-gray-300 sm:block\"\n\t\t\t\taria-label=\"Settings\"\n\t\t\t>\n\t\t\t\t<Settings class=\"h-5 w-5 sm:h-6 sm:w-6\" />\n\t\t\t</a>\n\t\t\t<div\n\t\t\t\tclass=\"flex h-7 w-7 cursor-pointer items-center justify-center rounded bg-red-600 transition-colors hover:bg-red-700 sm:h-8 sm:w-8\"\n\t\t\t\trole=\"button\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\taria-label=\"User profile\"\n\t\t\t>\n\t\t\t\t<User class=\"h-4 w-4 text-white sm:h-5 sm:w-5\" />\n\t\t\t</div>\n\t\t</div>\n\t</nav>\n</header>\n","import { writable } from 'svelte/store';\nimport { browser } from '$app/environment';\n\nexport interface KeyboardState {\n\tfocusedElement: HTMLElement | null;\n\tfocusableElements: HTMLElement[];\n\tcurrentIndex: number;\n\tgridPosition: { row: number; col: number } | null;\n\tgridDimensions: { rows: number; cols: number } | null;\n}\n\nexport const keyboardStore = writable<KeyboardState>({\n\tfocusedElement: null,\n\tfocusableElements: [],\n\tcurrentIndex: -1,\n\tgridPosition: null,\n\tgridDimensions: null\n});\n\nexport class KeyboardNavigationManager {\n\tprivate focusableElements: HTMLElement[] = [];\n\tprivate currentIndex = -1;\n\tprivate isActive = false;\n\tprivate gridElements: HTMLElement[][] = [];\n\tprivate currentRow = 0;\n\tprivate currentCol = 0;\n\tprivate isGridMode = false;\n\n\tconstructor() {\n\t\tif (browser) {\n\t\t\tthis.bindKeyboardEvents();\n\t\t}\n\t}\n\n\tprivate bindKeyboardEvents() {\n\t\tif (!browser) return;\n\t\t\n\t\tdocument.addEventListener('keydown', this.handleKeyDown.bind(this));\n\t\t// Reset navigation when mouse is used\n\t\tdocument.addEventListener('mousedown', () => {\n\t\t\tthis.isActive = false;\n\t\t\tthis.currentIndex = -1;\n\t\t\tthis.updateStore();\n\t\t});\n\t}\n\n\tprivate handleKeyDown(event: KeyboardEvent) {\n\t\t// Only handle navigation keys\n\t\tif (\n\t\t\t!['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Enter', 'Escape'].includes(event.key)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Don't interfere with input fields\n\t\tif (event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Activate keyboard navigation on first directional key press\n\t\tif (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\n\t\t\tif (!this.isActive) {\n\t\t\t\tthis.isActive = true;\n\t\t\t\tthis.refreshFocusableElements();\n\t\t\t\tconsole.log('🎮 Keyboard navigation activated');\n\t\t\t\tconsole.log(`Found ${this.focusableElements.length} focusable elements`);\n\t\t\t\tconsole.log(`Grid mode: ${this.isGridMode}`);\n\t\t\t\tif (this.isGridMode) {\n\t\t\t\t\tconsole.log(`Grid dimensions: ${this.gridElements.length} rows`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this.isActive || this.focusableElements.length === 0) {\n\t\t\tconsole.log('❌ Navigation not active or no focusable elements');\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tswitch (event.key) {\n\t\t\tcase 'ArrowRight':\n\t\t\t\tif (this.isGridMode) {\n\t\t\t\t\tthis.navigateRight();\n\t\t\t\t} else {\n\t\t\t\t\tthis.navigateNext();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowLeft':\n\t\t\t\tif (this.isGridMode) {\n\t\t\t\t\tthis.navigateLeft();\n\t\t\t\t} else {\n\t\t\t\t\tthis.navigatePrevious();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowUp':\n\t\t\t\tif (this.isGridMode) {\n\t\t\t\t\tthis.navigateUp();\n\t\t\t\t} else {\n\t\t\t\t\tthis.navigatePrevious();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowDown':\n\t\t\t\tif (this.isGridMode) {\n\t\t\t\t\tthis.navigateDown();\n\t\t\t\t} else {\n\t\t\t\t\tthis.navigateNext();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'Enter':\n\t\t\t\tthis.activateCurrentElement();\n\t\t\t\tbreak;\n\t\t\tcase 'Escape':\n\t\t\t\tthis.deactivate();\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.updateStore();\n\t}\n\n\tprivate refreshFocusableElements() {\n\t\tif (!browser) return;\n\t\t\n\t\t// Check if we should use grid navigation for movie/series content\n\t\tconst movieRows = document.querySelectorAll('[data-movie-row]');\n\t\tconst searchResults = document.querySelector('[data-search-results]');\n\n\t\tif (movieRows.length > 0 || searchResults) {\n\t\t\tthis.setupGridNavigation();\n\t\t} else {\n\t\t\tthis.setupLinearNavigation();\n\t\t}\n\t}\n\n\tprivate setupGridNavigation() {\n\t\tthis.isGridMode = true;\n\t\tthis.gridElements = [];\n\n\t\t// Find movie cards in rows or search results\n\t\tconst movieRows = document.querySelectorAll('[data-movie-row]');\n\t\tconst searchResults = document.querySelector('[data-search-results]');\n\n\t\tconsole.log(`🎬 Found ${movieRows.length} movie rows`);\n\t\tconsole.log(`🔍 Search results container:`, searchResults ? 'found' : 'not found');\n\n\t\tif (searchResults) {\n\t\t\t// Handle search results grid - create a proper grid layout\n\t\t\tconst movieCards = Array.from(\n\t\t\t\tsearchResults.querySelectorAll('[data-movie-card]')\n\t\t\t) as HTMLElement[];\n\t\t\tconsole.log(`🎬 Found ${movieCards.length} movie cards in search results`);\n\t\t\tthis.createGridFromElements(movieCards);\n\t\t} else {\n\t\t\t// Handle movie rows - each row becomes a \"row\" in our grid\n\t\t\tlet actualRowIndex = 0;\n\t\t\tmovieRows.forEach((row, originalIndex) => {\n\t\t\t\tconst movieCards = Array.from(row.querySelectorAll('[data-movie-card]')) as HTMLElement[];\n\t\t\t\tconsole.log(`🎬 Row ${originalIndex}: found ${movieCards.length} movie cards`);\n\t\t\t\tif (movieCards.length > 0) {\n\t\t\t\t\tconst visibleCards = movieCards.filter((card) => this.isElementVisible(card));\n\t\t\t\t\tconsole.log(`👁️ Row ${originalIndex}: ${visibleCards.length} visible cards`);\n\t\t\t\t\tif (visibleCards.length > 0) {\n\t\t\t\t\t\t// Store the row title for debugging\n\t\t\t\t\t\tconst rowTitle = row.querySelector('h2')?.textContent || `Row ${originalIndex}`;\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t`📝 Row ${actualRowIndex}: \"${rowTitle}\" with ${visibleCards.length} cards`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.gridElements[actualRowIndex] = visibleCards;\n\t\t\t\t\t\tactualRowIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Set initial position\n\t\tif (this.gridElements.length > 0 && this.gridElements[0] && this.gridElements[0].length > 0) {\n\t\t\tthis.currentRow = 0;\n\t\t\tthis.currentCol = 0;\n\t\t\tconsole.log(`✅ Grid navigation ready: ${this.gridElements.length} rows`);\n\t\t\tthis.gridElements.forEach((row, index) => {\n\t\t\t\tconsole.log(`   Row ${index}: ${row.length} cards`);\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.log(`❌ No valid grid elements found`);\n\t\t\tthis.isGridMode = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// Flatten for focusableElements array compatibility\n\t\tthis.focusableElements = this.gridElements.flat();\n\t\tthis.currentIndex = 0;\n\t\tconsole.log(`🎯 Total focusable elements: ${this.focusableElements.length}`);\n\t}\n\n\tprivate createGridFromElements(elements: HTMLElement[]) {\n\t\t// Calculate grid dimensions based on container width and card width\n\t\tif (elements.length === 0) return;\n\n\t\tconst container = elements[0].closest('[data-search-results]') as HTMLElement;\n\t\tif (!container) return;\n\n\t\tconst containerWidth = container.getBoundingClientRect().width;\n\t\tconst cardWidth = elements[0].getBoundingClientRect().width;\n\t\tconst gap = 16; // Approximate gap between cards\n\n\t\tconst cardsPerRow = Math.floor((containerWidth + gap) / (cardWidth + gap));\n\n\t\t// Create grid structure\n\t\tthis.gridElements = [];\n\t\tfor (let i = 0; i < elements.length; i += cardsPerRow) {\n\t\t\tconst row = elements.slice(i, i + cardsPerRow).filter((el) => this.isElementVisible(el));\n\t\t\tif (row.length > 0) {\n\t\t\t\tthis.gridElements.push(row);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setupLinearNavigation() {\n\t\tthis.isGridMode = false;\n\n\t\t// Find all focusable elements except pagination and movie cards\n\t\tconst selectors = [\n\t\t\t'button:not([disabled]):not([data-pagination]):not([data-movie-card])',\n\t\t\t'[role=\"button\"]:not([disabled]):not([data-pagination]):not([data-movie-card])',\n\t\t\t'a[href]:not([data-pagination]):not([data-movie-card])',\n\t\t\t'input:not([disabled]):not([data-pagination])',\n\t\t\t'select:not([disabled]):not([data-pagination])',\n\t\t\t'[tabindex]:not([tabindex=\"-1\"]):not([data-pagination]):not([data-movie-card])'\n\t\t];\n\n\t\tthis.focusableElements = Array.from(document.querySelectorAll(selectors.join(', '))).filter(\n\t\t\t(el): el is HTMLElement => {\n\t\t\t\treturn this.isElementVisible(el as HTMLElement);\n\t\t\t}\n\t\t);\n\n\t\t// Start with first element if none selected\n\t\tif (this.currentIndex === -1 && this.focusableElements.length > 0) {\n\t\t\tthis.currentIndex = 0;\n\t\t}\n\t}\n\n\tprivate isElementVisible(element: HTMLElement): boolean {\n\t\tconst rect = element.getBoundingClientRect();\n\t\tconst isVisible =\n\t\t\trect.width > 0 && rect.height > 0 && rect.top < window.innerHeight && rect.bottom > 0;\n\n\t\treturn isVisible && window.getComputedStyle(element).visibility !== 'hidden';\n\t}\n\n\tprivate navigateNext() {\n\t\tif (this.isGridMode) {\n\t\t\tthis.navigateRight();\n\t\t} else {\n\t\t\tif (this.focusableElements.length === 0) return;\n\n\t\t\tthis.currentIndex = (this.currentIndex + 1) % this.focusableElements.length;\n\t\t\tthis.focusCurrentElement();\n\t\t}\n\t}\n\n\tprivate navigatePrevious() {\n\t\tif (this.isGridMode) {\n\t\t\tthis.navigateLeft();\n\t\t} else {\n\t\t\tif (this.focusableElements.length === 0) return;\n\n\t\t\tthis.currentIndex =\n\t\t\t\tthis.currentIndex <= 0 ? this.focusableElements.length - 1 : this.currentIndex - 1;\n\t\t\tthis.focusCurrentElement();\n\t\t}\n\t}\n\n\tprivate navigateUp() {\n\t\tif (!this.isGridMode || this.gridElements.length === 0) {\n\t\t\tconsole.log('❌ Cannot navigate up - not in grid mode or no elements');\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.currentRow > 0) {\n\t\t\tthis.currentRow--;\n\t\t\t// Smart column positioning - try to maintain relative position\n\t\t\tconst newRowLength = this.gridElements[this.currentRow].length;\n\t\t\tif (newRowLength > 0) {\n\t\t\t\t// Try to maintain the same relative position in the row\n\t\t\t\tconst oldRowLength = this.gridElements[this.currentRow + 1].length;\n\t\t\t\tconst relativePosition = this.currentCol / (oldRowLength - 1 || 1);\n\t\t\t\tthis.currentCol = Math.round(relativePosition * (newRowLength - 1)) || 0;\n\t\t\t\tthis.currentCol = Math.max(0, Math.min(this.currentCol, newRowLength - 1));\n\t\t\t}\n\t\t\tthis.updateCurrentIndex();\n\t\t\tconsole.log(`⬆️ Moved up to row ${this.currentRow}, col ${this.currentCol}`);\n\t\t\tthis.focusCurrentElement();\n\t\t} else {\n\t\t\tconsole.log('❌ Already at top row');\n\t\t}\n\t}\n\n\tprivate navigateDown() {\n\t\tif (!this.isGridMode || this.gridElements.length === 0) {\n\t\t\tconsole.log('❌ Cannot navigate down - not in grid mode or no elements');\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.currentRow < this.gridElements.length - 1) {\n\t\t\tthis.currentRow++;\n\t\t\t// Smart column positioning - try to maintain relative position\n\t\t\tconst newRowLength = this.gridElements[this.currentRow].length;\n\t\t\tif (newRowLength > 0) {\n\t\t\t\t// Try to maintain the same relative position in the row\n\t\t\t\tconst oldRowLength = this.gridElements[this.currentRow - 1].length;\n\t\t\t\tconst relativePosition = this.currentCol / (oldRowLength - 1 || 1);\n\t\t\t\tthis.currentCol = Math.round(relativePosition * (newRowLength - 1)) || 0;\n\t\t\t\tthis.currentCol = Math.max(0, Math.min(this.currentCol, newRowLength - 1));\n\t\t\t}\n\t\t\tthis.updateCurrentIndex();\n\t\t\tconsole.log(`⬇️ Moved down to row ${this.currentRow}, col ${this.currentCol}`);\n\t\t\tthis.focusCurrentElement();\n\t\t} else {\n\t\t\tconsole.log('❌ Already at bottom row');\n\t\t}\n\t}\n\n\tprivate navigateLeft() {\n\t\tif (!this.isGridMode || this.gridElements.length === 0) {\n\t\t\tconsole.log('❌ Cannot navigate left - not in grid mode or no elements');\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.currentCol > 0) {\n\t\t\tthis.currentCol--;\n\t\t\tconsole.log(`⬅️ Moved left to row ${this.currentRow}, col ${this.currentCol}`);\n\t\t} else if (this.currentRow > 0) {\n\t\t\t// Wrap to end of previous row\n\t\t\tthis.currentRow--;\n\t\t\tthis.currentCol = this.gridElements[this.currentRow].length - 1;\n\t\t\tconsole.log(`⬅️ Wrapped to previous row ${this.currentRow}, col ${this.currentCol}`);\n\t\t} else {\n\t\t\tconsole.log('❌ Already at leftmost position');\n\t\t\treturn;\n\t\t}\n\t\tthis.updateCurrentIndex();\n\t\tthis.focusCurrentElement();\n\t}\n\n\tprivate navigateRight() {\n\t\tif (!this.isGridMode || this.gridElements.length === 0) {\n\t\t\tconsole.log('❌ Cannot navigate right - not in grid mode or no elements');\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.currentCol < this.gridElements[this.currentRow].length - 1) {\n\t\t\tthis.currentCol++;\n\t\t\tconsole.log(`➡️ Moved right to row ${this.currentRow}, col ${this.currentCol}`);\n\t\t} else if (this.currentRow < this.gridElements.length - 1) {\n\t\t\t// Wrap to start of next row\n\t\t\tthis.currentRow++;\n\t\t\tthis.currentCol = 0;\n\t\t\tconsole.log(`➡️ Wrapped to next row ${this.currentRow}, col ${this.currentCol}`);\n\t\t} else {\n\t\t\tconsole.log('❌ Already at rightmost position');\n\t\t\treturn;\n\t\t}\n\t\tthis.updateCurrentIndex();\n\t\tthis.focusCurrentElement();\n\t}\n\n\tprivate updateCurrentIndex() {\n\t\tif (!this.isGridMode || this.gridElements.length === 0) return;\n\n\t\t// Calculate flat index from row/col position\n\t\tlet index = 0;\n\t\tfor (let r = 0; r < this.currentRow; r++) {\n\t\t\tindex += this.gridElements[r].length;\n\t\t}\n\t\tindex += this.currentCol;\n\t\tthis.currentIndex = index;\n\t}\n\n\tprivate focusCurrentElement() {\n\t\tconst element = this.focusableElements[this.currentIndex];\n\t\tif (element) {\n\t\t\t// Get the movie title for better debugging\n\t\t\tconst movieTitle =\n\t\t\t\telement.getAttribute('aria-label') ||\n\t\t\t\telement.querySelector('h3')?.textContent ||\n\t\t\t\t'Unknown movie';\n\t\t\tconsole.log(`🎯 Focusing: ${movieTitle} (row ${this.currentRow}, col ${this.currentCol})`);\n\t\t\telement.focus();\n\n\t\t\t// Scroll element into view with better positioning\n\t\t\telement.scrollIntoView({\n\t\t\t\tbehavior: 'smooth',\n\t\t\t\tblock: 'center',\n\t\t\t\tinline: 'center'\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.log(`❌ No element to focus at index ${this.currentIndex}`);\n\t\t}\n\t}\n\n\tprivate activateCurrentElement() {\n\t\tconst element = this.focusableElements[this.currentIndex];\n\t\tif (element) {\n\t\t\telement.click();\n\t\t}\n\t}\n\n\tprivate deactivate() {\n\t\tthis.isActive = false;\n\t\tthis.currentIndex = -1;\n\t\tthis.focusableElements = [];\n\n\t\t// Remove focus from current element\n\t\tif (document.activeElement instanceof HTMLElement) {\n\t\t\tdocument.activeElement.blur();\n\t\t}\n\t}\n\n\tprivate updateStore() {\n\t\tkeyboardStore.set({\n\t\t\tfocusedElement: this.focusableElements[this.currentIndex] || null,\n\t\t\tfocusableElements: this.focusableElements,\n\t\t\tcurrentIndex: this.currentIndex,\n\t\t\tgridPosition: this.isGridMode ? { row: this.currentRow, col: this.currentCol } : null,\n\t\t\tgridDimensions:\n\t\t\t\tthis.isGridMode && this.gridElements.length > 0\n\t\t\t\t\t? {\n\t\t\t\t\t\t\trows: this.gridElements.length,\n\t\t\t\t\t\t\tcols: Math.max(...this.gridElements.map((row) => row.length))\n\t\t\t\t\t\t}\n\t\t\t\t\t: null\n\t\t});\n\t}\n\n\tpublic destroy() {\n\t\tdocument.removeEventListener('keydown', this.handleKeyDown);\n\t}\n}\n\n// Global keyboard navigation instance\nexport const keyboardNavigation = new KeyboardNavigationManager();\n","<script lang=\"ts\">\n\timport { onMount, onDestroy } from 'svelte';\n\timport { keyboardStore } from '$lib/stores/keyboard';\n\n\tlet previousFocusedElement: HTMLElement | null = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = keyboardStore.subscribe((state) => {\n\t\t\t// Remove focus class from previous element\n\t\t\tif (previousFocusedElement) {\n\t\t\t\tpreviousFocusedElement.classList.remove('keyboard-focus');\n\t\t\t}\n\n\t\t\t// Add focus class to current element\n\t\t\tif (state.focusedElement) {\n\t\t\t\tstate.focusedElement.classList.add('keyboard-focus');\n\t\t\t\tpreviousFocusedElement = state.focusedElement;\n\t\t\t}\n\t\t});\n\n\t\treturn unsubscribe;\n\t});\n\n\tonDestroy(() => {\n\t\t// Clean up focus class on component destroy\n\t\tif (previousFocusedElement) {\n\t\t\tpreviousFocusedElement.classList.remove('keyboard-focus');\n\t\t}\n\t});\n</script>\n\n<!-- This component doesn't render anything visible -->\n","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { \n\t\tinitializePlatformDetection, \n\t\tgetIsAndroidTV, \n\t\tshouldUseTenFootUI,\n\t\tgetFontSizes,\n\t\tgetSpacing\n\t} from '$lib/utils/tv-detection';\n\n\tinterface Props {\n\t\tchildren?: any;\n\t}\n\n\tlet { children }: Props = $props();\n\n\tlet isAndroidTV = $state(false);\n\tlet useTenFootUI = $state(false);\n\tlet fontSizes = $state(getFontSizes());\n\tlet spacing = $state(getSpacing());\n\n\tonMount(() => {\n\t\tinitializePlatformDetection();\n\t\tisAndroidTV = getIsAndroidTV();\n\t\tuseTenFootUI = shouldUseTenFootUI();\n\t\tfontSizes = getFontSizes();\n\t\tspacing = getSpacing();\n\t});\n\n\t// Dynamic CSS classes based on platform\n\tconst containerClasses = $derived(() => {\n\t\tconst base = 'min-h-screen bg-black text-white';\n\t\t\n\t\tif (useTenFootUI) {\n\t\t\treturn `${base} tv-layout overflow-hidden`;\n\t\t}\n\t\t\n\t\treturn `${base} web-layout`;\n\t});\n\n\tconst contentClasses = $derived(() => {\n\t\tif (useTenFootUI) {\n\t\t\treturn 'tv-content px-16 py-8'; // Extra padding for TV safe areas\n\t\t}\n\t\t\n\t\treturn 'web-content px-4 py-2 sm:px-6 sm:py-4';\n\t});\n</script>\n\n<div class={containerClasses} data-platform={isAndroidTV ? 'tv' : 'web'}>\n\t<div class={contentClasses}>\n\t\t{@render children?.()}\n\t</div>\n</div>\n\n{#if useTenFootUI}\n\t<!-- TV-specific focus indicator styles -->\n\t<style>\n\t\t:global(.tv-layout) {\n\t\t\t/* Ensure content fits in TV safe areas */\n\t\t\tpadding: calc(5vh) calc(5vw);\n\t\t}\n\n\t\t:global(.tv-layout *:focus) {\n\t\t\toutline: 4px solid #dc2626 !important;\n\t\t\toutline-offset: 4px !important;\n\t\t\tborder-radius: 8px;\n\t\t}\n\n\t\t:global(.tv-layout .movie-card:focus) {\n\t\t\ttransform: scale(1.15) !important;\n\t\t\tz-index: 100 !important;\n\t\t\tbox-shadow: 0 25px 50px -12px rgba(220, 38, 38, 0.5) !important;\n\t\t}\n\n\t\t:global(.tv-layout .btn) {\n\t\t\tmin-height: 60px;\n\t\t\tmin-width: 120px;\n\t\t\tfont-size: 1.25rem;\n\t\t\tfont-weight: 600;\n\t\t}\n\n\t\t:global(.tv-layout .btn:focus) {\n\t\t\ttransform: scale(1.1);\n\t\t\tbackground-color: #dc2626 !important;\n\t\t\tcolor: white !important;\n\t\t}\n\n\t\t:global(.tv-layout h1) {\n\t\t\tfont-size: 4rem !important;\n\t\t\tline-height: 1.1 !important;\n\t\t}\n\n\t\t:global(.tv-layout h2) {\n\t\t\tfont-size: 3rem !important;\n\t\t\tline-height: 1.2 !important;\n\t\t}\n\n\t\t:global(.tv-layout h3) {\n\t\t\tfont-size: 2rem !important;\n\t\t\tline-height: 1.3 !important;\n\t\t}\n\n\t\t:global(.tv-layout p) {\n\t\t\tfont-size: 1.5rem !important;\n\t\t\tline-height: 1.4 !important;\n\t\t}\n\n\t\t/* Larger interactive elements for D-pad navigation */\n\t\t:global(.tv-layout button) {\n\t\t\tmin-height: 60px;\n\t\t\tpadding: 1rem 2rem;\n\t\t\tfont-size: 1.25rem;\n\t\t\tborder-radius: 12px;\n\t\t}\n\n\t\t:global(.tv-layout input) {\n\t\t\tmin-height: 60px;\n\t\t\tpadding: 1rem;\n\t\t\tfont-size: 1.25rem;\n\t\t\tborder-radius: 8px;\n\t\t}\n\n\t\t/* Movie grid adjustments for TV */\n\t\t:global(.tv-layout .movie-grid) {\n\t\t\tgap: 2rem;\n\t\t}\n\n\t\t:global(.tv-layout .movie-row) {\n\t\t\tmargin-bottom: 3rem;\n\t\t}\n\n\t\t/* Enhanced focus transitions */\n\t\t:global(.tv-layout *) {\n\t\t\ttransition: all 0.2s ease-out;\n\t\t}\n\t</style>\n{/if}\n\n<style>\n\t.web-layout {\n\t\t/* Default web styles */\n\t}\n\n\t.tv-content {\n\t\t/* TV-specific content styling */\n\t\tbox-sizing: border-box;\n\t}\n\n\t.web-content {\n\t\t/* Web-specific content styling */\n\t}\n</style>","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport '../app.css';\n\timport Header from '$lib/components/Header.svelte';\n\timport KeyboardNavigation from '$lib/components/KeyboardNavigation.svelte';\n\timport TVLayout from '$lib/components/TVLayout.svelte';\n\timport { initializePlatformDetection, getIsAndroidTV } from '$lib/utils/tv-detection';\n\timport { initializeTVNavigation } from '$lib/utils/tv-navigation';\n\n\tlet { children } = $props();\n\tlet isAndroidTV = $state(false);\n\n\tonMount(() => {\n\t\t// Initialize platform detection first\n\t\tinitializePlatformDetection();\n\t\tisAndroidTV = getIsAndroidTV();\n\t\t\n\t\t// Initialize TV navigation if on Android TV\n\t\tif (isAndroidTV) {\n\t\t\tinitializeTVNavigation();\n\t\t}\n\t\t\n\t\t// Initialize keyboard navigation\n\t\timport('$lib/stores/keyboard');\n\t});\n</script>\n\n<TVLayout>\n\t{#snippet children()}\n\t\t{#if !isAndroidTV}\n\t\t\t<Header />\n\t\t{/if}\n\t\t<KeyboardNavigation />\n\t\t<main>\n\t\t\t{@render children()}\n\t\t</main>\n\t{/snippet}\n</TVLayout>\n"],"file":"_app/immutable/nodes/0.CWsb16r7.js"}
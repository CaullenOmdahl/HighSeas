{"version":3,"file":"10.CMXrxPxX.js","sources":["../../../../../../src/lib/services/streamProxy.ts","../../../../../../src/lib/components/BufferedPlayer.svelte","../../../../../../src/lib/components/StreamSelector.svelte","../../../../../../src/routes/watch/[id]/+page.svelte"],"sourcesContent":["export interface ProxiedStream {\n\toriginalUrl: string;\n\tproxyUrl: string;\n\ttitle?: string;\n\tdescription?: string;\n}\n\nexport class StreamProxyService {\n\tprivate baseUrl: string;\n\n\tconstructor() {\n\t\t// Get the current origin for API calls\n\t\tthis.baseUrl = typeof window !== 'undefined' ? window.location.origin : 'http://localhost:5173'; // Default for SSR\n\t}\n\n\t/**\n\t * Create a proxied stream URL that routes through our server\n\t */\n\tcreateProxyUrl(originalUrl: string): string {\n\t\tconst proxyUrl = new URL('/api/proxy', this.baseUrl);\n\t\tproxyUrl.searchParams.set('url', originalUrl);\n\n\t\tconsole.log(`🔄 Creating proxy URL:`);\n\t\tconsole.log(`   Original: ${originalUrl}`);\n\t\tconsole.log(`   Proxied:  ${proxyUrl.toString()}`);\n\n\t\treturn proxyUrl.toString();\n\t}\n\n\t/**\n\t * Convert Stremio stream to proxied stream\n\t */\n\tproxyStream(stream: any): ProxiedStream {\n\t\treturn {\n\t\t\toriginalUrl: stream.url,\n\t\t\tproxyUrl: this.createProxyUrl(stream.url),\n\t\t\ttitle: stream.title || stream.name,\n\t\t\tdescription: stream.description\n\t\t};\n\t}\n\n\t/**\n\t * Convert array of Stremio streams to proxied streams\n\t */\n\tproxyStreams(streams: any[]): ProxiedStream[] {\n\t\treturn streams.map((stream) => this.proxyStream(stream));\n\t}\n\n\t/**\n\t * Test if a stream URL should be proxied\n\t */\n\tshouldProxy(url: string): boolean {\n\t\ttry {\n\t\t\tconst urlObj = new URL(url);\n\n\t\t\t// Proxy RealDebrid and other premium services\n\t\t\tconst proxyDomains = [\n\t\t\t\t'real-debrid.com'\n\t\t\t\t// Add other premium service domains that need IP masking\n\t\t\t];\n\n\t\t\treturn proxyDomains.some(\n\t\t\t\t(domain) => urlObj.hostname.includes(domain) || urlObj.hostname.endsWith(domain)\n\t\t\t);\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Get stream with optional proxying\n\t */\n\tprocessStreamUrl(originalUrl: string, forceProxy: boolean = true): string {\n\t\tif (forceProxy || this.shouldProxy(originalUrl)) {\n\t\t\treturn this.createProxyUrl(originalUrl);\n\t\t}\n\t\treturn originalUrl;\n\t}\n}\n\n// Global service instance\nexport const streamProxyService = new StreamProxyService();\n","<script lang=\"ts\">\n\timport { onMount, onDestroy } from 'svelte';\n\timport { streamProxyService } from '$lib/services/streamProxy';\n\timport { StreamingError, ErrorCategory, ErrorSeverity } from '$lib/types/errors';\n\timport { logger } from '$lib/utils/logger';\n\timport type { PlayerState, BufferInfo } from '$lib/types/api';\n\n\tinterface Props {\n\t\tsrc: string;\n\t\tposter?: string;\n\t\ttitle?: string;\n\t\tonError?: (error: StreamingError) => void;\n\t\tonLoad?: () => void;\n\t\tonBufferUpdate?: (bufferInfo: BufferInfo) => void;\n\t}\n\n\tlet { src, poster, title, onError, onLoad, onBufferUpdate }: Props = $props();\n\tlet videoElement: HTMLVideoElement;\n\tlet bufferProgress = $state(0);\n\tlet loadProgress = $state(0);\n\tlet isBuffering = $state(true);\n\tlet bufferHealth = $state(0);\n\tlet playerState = $state<PlayerState>({\n\t\tplaying: false,\n\t\tbuffering: true,\n\t\tmuted: false,\n\t\tvolume: 1,\n\t\tcurrentTime: 0,\n\t\tduration: 0,\n\t\tplaybackRate: 1,\n\t\tbuffered: null,\n\t\tseekable: null,\n\t\terror: null,\n\t\tnetworkState: 0,\n\t\treadyState: 0\n\t});\n\n\t// Process the stream URL through our proxy\n\tconst proxiedSrc = $derived(streamProxyService.processStreamUrl(src, true));\n\n\tlet bufferMonitorInterval: ReturnType<typeof setInterval> | null = null;\n\tlet loadTimeout: ReturnType<typeof setTimeout> | null = null;\n\tlet retryCount = 0;\n\tconst maxRetries = 3;\n\tconst loadTimeoutMs = 30000; // 30 seconds\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tif (!videoElement) {\n\t\t\t\tthrow StreamingError.createPlayerError('Video element not available');\n\t\t\t}\n\n\t\t\tlogger.player('info', `Initializing buffering player for: ${title}`, {\n\t\t\t\tsrc: proxiedSrc,\n\t\t\t\tposter,\n\t\t\t\tuserAgent: navigator.userAgent\n\t\t\t});\n\n\t\t\tawait initializePlayer();\n\t\t} catch (error) {\n\t\t\thandleStreamingError(error);\n\t\t}\n\t});\n\n\tonDestroy(() => {\n\t\tcleanup();\n\t});\n\n\tasync function initializePlayer(): Promise<void> {\n\t\ttry {\n\t\t\t// Set load timeout\n\t\t\tloadTimeout = setTimeout(() => {\n\t\t\t\thandleStreamingError(\n\t\t\t\t\tStreamingError.createStreamError(\n\t\t\t\t\t\t`Stream load timeout after ${loadTimeoutMs}ms`,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t{ metadata: { src: proxiedSrc, timeout: loadTimeoutMs } }\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}, loadTimeoutMs);\n\n\t\t\t// Initialize video element\n\t\t\tvideoElement.src = proxiedSrc;\n\t\t\tvideoElement.preload = 'auto';\n\t\t\tvideoElement.crossOrigin = 'anonymous';\n\n\t\t\t// Set up event listeners\n\t\t\tsetupEventListeners();\n\n\t\t\t// Set up buffering monitoring\n\t\t\tsetupBufferMonitoring();\n\n\t\t\t// Start loading\n\t\t\tvideoElement.load();\n\t\t} catch (error) {\n\t\t\tthrow StreamingError.createPlayerError(\n\t\t\t\t'Failed to initialize player',\n\t\t\t\terror instanceof Error ? error : new Error(String(error))\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction setupEventListeners(): void {\n\t\tconst events = [\n\t\t\t{ name: 'loadstart', handler: handleLoadStart },\n\t\t\t{ name: 'loadedmetadata', handler: handleLoadedMetadata },\n\t\t\t{ name: 'loadeddata', handler: handleLoadedData },\n\t\t\t{ name: 'canplay', handler: handleCanPlay },\n\t\t\t{ name: 'canplaythrough', handler: handleCanPlayThrough },\n\t\t\t{ name: 'progress', handler: handleProgress },\n\t\t\t{ name: 'waiting', handler: handleWaiting },\n\t\t\t{ name: 'playing', handler: handlePlaying },\n\t\t\t{ name: 'pause', handler: handlePause },\n\t\t\t{ name: 'timeupdate', handler: handleTimeUpdate },\n\t\t\t{ name: 'durationchange', handler: handleDurationChange },\n\t\t\t{ name: 'volumechange', handler: handleVolumeChange },\n\t\t\t{ name: 'ratechange', handler: handleRateChange },\n\t\t\t{ name: 'error', handler: handleError },\n\t\t\t{ name: 'abort', handler: handleAbort },\n\t\t\t{ name: 'stalled', handler: handleStalled },\n\t\t\t{ name: 'suspend', handler: handleSuspend }\n\t\t];\n\n\t\tevents.forEach(({ name, handler }) => {\n\t\t\tvideoElement.addEventListener(name, handler);\n\t\t});\n\t}\n\n\tfunction cleanup(): void {\n\t\tif (loadTimeout) {\n\t\t\tclearTimeout(loadTimeout);\n\t\t\tloadTimeout = null;\n\t\t}\n\n\t\tif (bufferMonitorInterval) {\n\t\t\tclearInterval(bufferMonitorInterval);\n\t\t\tbufferMonitorInterval = null;\n\t\t}\n\n\t\t// Clean up event listeners\n\t\tif (videoElement) {\n\t\t\tconst events = [\n\t\t\t\t'loadstart',\n\t\t\t\t'loadedmetadata',\n\t\t\t\t'loadeddata',\n\t\t\t\t'canplay',\n\t\t\t\t'canplaythrough',\n\t\t\t\t'progress',\n\t\t\t\t'waiting',\n\t\t\t\t'playing',\n\t\t\t\t'pause',\n\t\t\t\t'timeupdate',\n\t\t\t\t'durationchange',\n\t\t\t\t'volumechange',\n\t\t\t\t'ratechange',\n\t\t\t\t'error',\n\t\t\t\t'abort',\n\t\t\t\t'stalled',\n\t\t\t\t'suspend'\n\t\t\t];\n\n\t\t\tevents.forEach((eventName) => {\n\t\t\t\tvideoElement.removeEventListener(eventName, handleLoadStart);\n\t\t\t});\n\t\t}\n\n\t\tlogger.player('debug', 'Player cleanup completed');\n\t}\n\n\tfunction setupBufferMonitoring(): void {\n\t\tbufferMonitorInterval = setInterval(() => {\n\t\t\ttry {\n\t\t\t\tif (videoElement && videoElement.buffered.length > 0) {\n\t\t\t\t\tupdatePlayerState();\n\t\t\t\t\tupdateBufferInfo();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tlogger.player('warn', 'Buffer monitoring error', { error });\n\t\t\t}\n\t\t}, 1000);\n\t}\n\n\tfunction updatePlayerState(): void {\n\t\tif (!videoElement) return;\n\n\t\tplayerState.playing = !videoElement.paused;\n\t\tplayerState.muted = videoElement.muted;\n\t\tplayerState.volume = videoElement.volume;\n\t\tplayerState.currentTime = videoElement.currentTime;\n\t\tplayerState.duration = videoElement.duration || 0;\n\t\tplayerState.playbackRate = videoElement.playbackRate;\n\t\tplayerState.buffered = videoElement.buffered;\n\t\tplayerState.seekable = videoElement.seekable;\n\t\tplayerState.error = videoElement.error;\n\t\tplayerState.networkState = videoElement.networkState;\n\t\tplayerState.readyState = videoElement.readyState;\n\t\tplayerState.buffering = isBuffering;\n\t}\n\n\tfunction updateBufferInfo(): void {\n\t\tif (!videoElement || videoElement.buffered.length === 0) return;\n\n\t\tconst currentTime = videoElement.currentTime;\n\t\tconst duration = videoElement.duration || 0;\n\n\t\t// Calculate buffer progress\n\t\tlet bufferedEnd = 0;\n\t\tlet bufferedStart = 0;\n\n\t\tfor (let i = 0; i < videoElement.buffered.length; i++) {\n\t\t\tconst start = videoElement.buffered.start(i);\n\t\t\tconst end = videoElement.buffered.end(i);\n\n\t\t\tif (currentTime >= start && currentTime <= end) {\n\t\t\t\tbufferedEnd = end;\n\t\t\t\tbufferedStart = start;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tbufferProgress = duration > 0 ? (bufferedEnd / duration) * 100 : 0;\n\n\t\t// Calculate buffer health (how much is buffered ahead)\n\t\tconst bufferAhead = Math.max(0, bufferedEnd - currentTime);\n\t\tconst bufferBehind = Math.max(0, currentTime - bufferedStart);\n\t\tbufferHealth = Math.min(bufferAhead / 30, 1) * 100; // 30 seconds = 100% health\n\n\t\t// Update buffering state based on ready state and buffer health\n\t\tisBuffering = videoElement.readyState < 3 || (bufferHealth < 10 && !videoElement.paused);\n\n\t\t// Calculate total buffered time\n\t\tlet totalBuffered = 0;\n\t\tfor (let i = 0; i < videoElement.buffered.length; i++) {\n\t\t\ttotalBuffered += videoElement.buffered.end(i) - videoElement.buffered.start(i);\n\t\t}\n\n\t\tconst bufferInfo: BufferInfo = {\n\t\t\tbuffered: bufferProgress,\n\t\t\thealth: bufferHealth,\n\t\t\tahead: bufferAhead,\n\t\t\tbehind: bufferBehind,\n\t\t\ttotal: totalBuffered\n\t\t};\n\n\t\tonBufferUpdate?.(bufferInfo);\n\t}\n\n\tfunction handleStreamingError(error: unknown): void {\n\t\tlet streamingError: StreamingError;\n\n\t\tif (error instanceof StreamingError) {\n\t\t\tstreamingError = error;\n\t\t} else if (error instanceof Error) {\n\t\t\tstreamingError = StreamingError.createPlayerError(error.message, error);\n\t\t} else {\n\t\t\tstreamingError = StreamingError.createPlayerError(String(error));\n\t\t}\n\n\t\tlogger.player('error', 'Streaming error occurred', {\n\t\t\terrorId: streamingError.errorId,\n\t\t\tcategory: streamingError.category,\n\t\t\tseverity: streamingError.severity,\n\t\t\tmessage: streamingError.message,\n\t\t\tuserMessage: streamingError.userMessage,\n\t\t\tretryable: streamingError.retryable\n\t\t});\n\n\t\t// Attempt retry if error is retryable\n\t\tif (streamingError.retryable && retryCount < maxRetries) {\n\t\t\tretryCount++;\n\t\t\tlogger.player('info', `Attempting retry ${retryCount}/${maxRetries}`);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tinitializePlayer().catch((retryError) => {\n\t\t\t\t\thandleStreamingError(retryError);\n\t\t\t\t});\n\t\t\t}, 2000 * retryCount); // Exponential backoff\n\t\t\treturn;\n\t\t}\n\n\t\t// Report error to parent component\n\t\tonError?.(streamingError);\n\t}\n\n\t// Event handlers\n\tfunction handleLoadStart(): void {\n\t\tlogger.player('debug', 'Load started');\n\t\tloadProgress = 0;\n\t\tisBuffering = true;\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handleLoadedMetadata(): void {\n\t\tlogger.player('debug', 'Metadata loaded', {\n\t\t\tduration: videoElement.duration,\n\t\t\tvideoWidth: videoElement.videoWidth,\n\t\t\tvideoHeight: videoElement.videoHeight\n\t\t});\n\t\tloadProgress = 25;\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handleLoadedData(): void {\n\t\tlogger.player('debug', 'Data loaded');\n\t\tloadProgress = 50;\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handleCanPlay(): void {\n\t\tlogger.player('debug', 'Can play');\n\t\tloadProgress = 75;\n\t\tisBuffering = false;\n\n\t\t// Clear load timeout on successful load\n\t\tif (loadTimeout) {\n\t\t\tclearTimeout(loadTimeout);\n\t\t\tloadTimeout = null;\n\t\t}\n\n\t\tonLoad?.();\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handleCanPlayThrough(): void {\n\t\tlogger.player('debug', 'Can play through');\n\t\tloadProgress = 100;\n\t\tisBuffering = false;\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handleProgress(): void {\n\t\t// This handles download progress, not playback progress\n\t\tif (videoElement && videoElement.buffered.length > 0) {\n\t\t\tconst buffered = videoElement.buffered.end(videoElement.buffered.length - 1);\n\t\t\tconst duration = videoElement.duration || 0;\n\t\t\tif (duration > 0) {\n\t\t\t\tloadProgress = Math.min((buffered / duration) * 100, 100);\n\t\t\t}\n\t\t}\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handleWaiting(): void {\n\t\tlogger.player('debug', 'Buffering...');\n\t\tisBuffering = true;\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handlePlaying(): void {\n\t\tlogger.player('debug', 'Playing');\n\t\tisBuffering = false;\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handlePause(): void {\n\t\tlogger.player('debug', 'Paused');\n\t\tisBuffering = false;\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handleTimeUpdate(): void {\n\t\t// Throttle state updates to avoid excessive rendering\n\t\tif (Date.now() % 1000 < 100) {\n\t\t\t// Update roughly every second\n\t\t\tupdatePlayerState();\n\t\t}\n\t}\n\n\tfunction handleDurationChange(): void {\n\t\tlogger.player('debug', 'Duration changed', { duration: videoElement.duration });\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handleVolumeChange(): void {\n\t\tlogger.player('debug', 'Volume changed', {\n\t\t\tvolume: videoElement.volume,\n\t\t\tmuted: videoElement.muted\n\t\t});\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handleRateChange(): void {\n\t\tlogger.player('debug', 'Playback rate changed', { rate: videoElement.playbackRate });\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handleError(event: Event): void {\n\t\tconst mediaError = videoElement.error;\n\t\tlet errorMessage = 'Unknown video error';\n\t\tlet errorCategory = ErrorCategory.PLAYER;\n\n\t\tif (mediaError) {\n\t\t\tswitch (mediaError.code) {\n\t\t\t\tcase MediaError.MEDIA_ERR_ABORTED:\n\t\t\t\t\terrorMessage = 'Video loading was aborted';\n\t\t\t\t\tbreak;\n\t\t\t\tcase MediaError.MEDIA_ERR_NETWORK:\n\t\t\t\t\terrorMessage = 'Network error while loading video';\n\t\t\t\t\terrorCategory = ErrorCategory.NETWORK;\n\t\t\t\t\tbreak;\n\t\t\t\tcase MediaError.MEDIA_ERR_DECODE:\n\t\t\t\t\terrorMessage = 'Video decoding error';\n\t\t\t\t\tbreak;\n\t\t\t\tcase MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED:\n\t\t\t\t\terrorMessage = 'Video format not supported';\n\t\t\t\t\terrorCategory = ErrorCategory.STREAM;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\terrorMessage = `Video error (code: ${mediaError.code})`;\n\t\t\t}\n\t\t}\n\n\t\tconst streamingError = new StreamingError({\n\t\t\tcategory: errorCategory,\n\t\t\tseverity: ErrorSeverity.HIGH,\n\t\t\tmessage: errorMessage,\n\t\t\toriginalError: new Error(errorMessage),\n\t\t\tcontext: {\n\t\t\t\tmetadata: {\n\t\t\t\t\tmediaErrorCode: mediaError?.code,\n\t\t\t\t\tmediaErrorMessage: mediaError?.message,\n\t\t\t\t\tvideoSrc: proxiedSrc,\n\t\t\t\t\tnetworkState: videoElement.networkState,\n\t\t\t\t\treadyState: videoElement.readyState\n\t\t\t\t}\n\t\t\t},\n\t\t\trecoverable: true,\n\t\t\tretryable: errorCategory === ErrorCategory.NETWORK || errorCategory === ErrorCategory.STREAM\n\t\t});\n\n\t\thandleStreamingError(streamingError);\n\t}\n\n\tfunction handleAbort(): void {\n\t\tlogger.player('info', 'Video loading aborted');\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handleStalled(): void {\n\t\tlogger.player('warn', 'Video stalled');\n\t\tisBuffering = true;\n\t\tupdatePlayerState();\n\t}\n\n\tfunction handleSuspend(): void {\n\t\tlogger.player('debug', 'Video loading suspended');\n\t\tupdatePlayerState();\n\t}\n</script>\n\n<div class=\"relative w-full bg-black\">\n\t{#if isBuffering && loadProgress < 100}\n\t\t<div class=\"absolute inset-0 z-10 flex items-center justify-center bg-black/80\">\n\t\t\t<div class=\"text-center\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"mb-4 inline-block h-12 w-12 animate-spin rounded-full border-b-2 border-red-600\"\n\t\t\t\t></div>\n\t\t\t\t<div class=\"mb-2 text-lg text-white\">\n\t\t\t\t\t{loadProgress < 25\n\t\t\t\t\t\t? 'Connecting...'\n\t\t\t\t\t\t: loadProgress < 50\n\t\t\t\t\t\t\t? 'Loading metadata...'\n\t\t\t\t\t\t\t: loadProgress < 75\n\t\t\t\t\t\t\t\t? 'Buffering...'\n\t\t\t\t\t\t\t\t: 'Almost ready...'}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mb-2 h-2 w-64 rounded-full bg-gray-700\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"h-2 rounded-full bg-red-600 transition-all duration-300\"\n\t\t\t\t\t\tstyle=\"width: {loadProgress}%\"\n\t\t\t\t\t></div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-sm text-gray-400\">{Math.round(loadProgress)}% loaded</div>\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n\n\t<video\n\t\tbind:this={videoElement}\n\t\tclass=\"h-auto w-full\"\n\t\tcontrols\n\t\t{poster}\n\t\tpreload=\"auto\"\n\t\tcrossorigin=\"anonymous\"\n\t>\n\t\t<track kind=\"captions\" />\n\t\t<p class=\"p-4 text-white\">\n\t\t\tYour browser doesn't support HTML5 video.\n\t\t\t<a href={proxiedSrc} class=\"text-red-500 hover:text-red-400\"> Download the video file </a>.\n\t\t</p>\n\t</video>\n\n\t<!-- Buffer indicator -->\n\t{#if !isBuffering && bufferHealth < 50}\n\t\t<div class=\"absolute right-4 bottom-16 left-4 z-10\">\n\t\t\t<div class=\"rounded bg-black/70 px-3 py-2 text-sm text-white\">\n\t\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t\t<div class=\"flex-shrink-0\">\n\t\t\t\t\t\t<div class=\"h-2 w-2 animate-pulse rounded-full bg-yellow-500\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span>Buffer: {Math.round(bufferHealth)}%</span>\n\t\t\t\t\t<div class=\"h-1 flex-1 rounded-full bg-gray-600\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"h-1 rounded-full bg-yellow-500 transition-all duration-300\"\n\t\t\t\t\t\t\tstyle=\"width: {bufferHealth}%\"\n\t\t\t\t\t\t></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n</div>\n\n<style>\n\tvideo::-webkit-media-controls {\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\n\t}\n\n\tvideo::-webkit-media-controls-panel {\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { Play, Monitor, Wifi, HardDrive, Star, Calendar, Clock } from 'lucide-svelte';\n\timport type { StremioStream, StremioMeta } from '$lib/services/stremio';\n\n\tinterface Props {\n\t\tstreams: StremioStream[];\n\t\tmeta: StremioMeta;\n\t\tonStreamSelect: (stream: StremioStream) => void;\n\t\tonCancel: () => void;\n\t}\n\n\tlet { streams, meta, onStreamSelect, onCancel }: Props = $props();\n\n\t// Enhanced stream parsing to extract provider and quality information\n\tinterface ParsedStream {\n\t\tstream: StremioStream;\n\t\tprovider: string;\n\t\tquality: string;\n\t\tsize: string;\n\t\tseeders?: string;\n\t\ttype: 'torrent' | 'direct' | 'debrid';\n\t\tconfidence: number;\n\t}\n\n\tconst parseStreams = (streams: StremioStream[]): ParsedStream[] => {\n\t\treturn streams.map((stream) => {\n\t\t\tconst title = stream.title || stream.name || '';\n\t\t\tconst description = stream.description || '';\n\t\t\t\n\t\t\t// Extract provider information\n\t\t\tlet provider = 'Unknown';\n\t\t\tlet type: 'torrent' | 'direct' | 'debrid' = 'direct';\n\t\t\t\n\t\t\tif (title.toLowerCase().includes('real-debrid') || title.toLowerCase().includes('rd')) {\n\t\t\t\tprovider = 'Real-Debrid';\n\t\t\t\ttype = 'debrid';\n\t\t\t} else if (title.toLowerCase().includes('torrentio')) {\n\t\t\t\tprovider = 'Torrentio';\n\t\t\t\ttype = 'torrent';\n\t\t\t} else if (title.toLowerCase().includes('torbox')) {\n\t\t\t\tprovider = 'TorBox';\n\t\t\t\ttype = 'debrid';\n\t\t\t} else if (title.toLowerCase().includes('premiumize')) {\n\t\t\t\tprovider = 'Premiumize';\n\t\t\t\ttype = 'debrid';\n\t\t\t} else if (title.toLowerCase().includes('alldebrid')) {\n\t\t\t\tprovider = 'AllDebrid';\n\t\t\t\ttype = 'debrid';\n\t\t\t} else {\n\t\t\t\t// Try to extract from URL or other indicators\n\t\t\t\tconst streamUrl = stream.url.toLowerCase();\n\t\t\t\tif (streamUrl.includes('real-debrid.com')) {\n\t\t\t\t\tprovider = 'Real-Debrid';\n\t\t\t\t\ttype = 'debrid';\n\t\t\t\t} else if (streamUrl.includes('torrentio')) {\n\t\t\t\t\tprovider = 'Torrentio';\n\t\t\t\t\ttype = 'torrent';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Extract quality information\n\t\t\tlet quality = 'Unknown';\n\t\t\tlet confidence = 0;\n\t\t\t\n\t\t\tconst qualityPatterns = [\n\t\t\t\t{ pattern: /2160p|4k/i, quality: '4K (2160p)', confidence: 5 },\n\t\t\t\t{ pattern: /1440p/i, quality: '1440p', confidence: 4 },\n\t\t\t\t{ pattern: /1080p/i, quality: '1080p', confidence: 4 },\n\t\t\t\t{ pattern: /720p/i, quality: '720p', confidence: 3 },\n\t\t\t\t{ pattern: /480p/i, quality: '480p', confidence: 2 },\n\t\t\t\t{ pattern: /360p/i, quality: '360p', confidence: 1 }\n\t\t\t];\n\n\t\t\tfor (const { pattern, quality: q, confidence: c } of qualityPatterns) {\n\t\t\t\tif (pattern.test(title) || pattern.test(description)) {\n\t\t\t\t\tquality = q;\n\t\t\t\t\tconfidence = c;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Extract file size\n\t\t\tlet size = '';\n\t\t\tconst sizeMatch = title.match(/(\\d+(?:\\.\\d+)?)\\s?(GB|MB|TB)/i);\n\t\t\tif (sizeMatch) {\n\t\t\t\tsize = `${sizeMatch[1]} ${sizeMatch[2].toUpperCase()}`;\n\t\t\t}\n\n\t\t\t// Extract seeders for torrents\n\t\t\tlet seeders = undefined;\n\t\t\tconst seedersMatch = title.match(/👤\\s*(\\d+)/);\n\t\t\tif (seedersMatch) {\n\t\t\t\tseeders = seedersMatch[1];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tstream,\n\t\t\t\tprovider,\n\t\t\t\tquality,\n\t\t\t\tsize,\n\t\t\t\tseeders,\n\t\t\t\ttype,\n\t\t\t\tconfidence\n\t\t\t};\n\t\t}).sort((a, b) => {\n\t\t\t// Sort by confidence (quality), then by type preference (debrid > direct > torrent)\n\t\t\tif (a.confidence !== b.confidence) {\n\t\t\t\treturn b.confidence - a.confidence;\n\t\t\t}\n\t\t\tconst typeOrder = { debrid: 3, direct: 2, torrent: 1 };\n\t\t\treturn typeOrder[b.type] - typeOrder[a.type];\n\t\t});\n\t};\n\n\tconst parsedStreams = $derived(parseStreams(streams));\n\tconst groupedStreams = $derived(() => {\n\t\tconst groups: Record<string, ParsedStream[]> = {};\n\t\tparsedStreams.forEach(stream => {\n\t\t\tif (!groups[stream.provider]) {\n\t\t\t\tgroups[stream.provider] = [];\n\t\t\t}\n\t\t\tgroups[stream.provider].push(stream);\n\t\t});\n\t\treturn groups;\n\t});\n\n\tconst getProviderIcon = (type: 'torrent' | 'direct' | 'debrid') => {\n\t\tswitch (type) {\n\t\t\tcase 'debrid': return HardDrive;\n\t\t\tcase 'direct': return Wifi;\n\t\t\tcase 'torrent': return Monitor;\n\t\t\tdefault: return Monitor;\n\t\t}\n\t};\n\n\tconst getQualityColor = (quality: string) => {\n\t\tif (quality.includes('4K')) return 'text-purple-400';\n\t\tif (quality.includes('1080p')) return 'text-blue-400';\n\t\tif (quality.includes('720p')) return 'text-green-400';\n\t\tif (quality.includes('480p')) return 'text-yellow-400';\n\t\treturn 'text-gray-400';\n\t};\n\n\tconst getTypeColor = (type: 'torrent' | 'direct' | 'debrid') => {\n\t\tswitch (type) {\n\t\t\tcase 'debrid': return 'bg-green-600';\n\t\t\tcase 'direct': return 'bg-blue-600';\n\t\t\tcase 'torrent': return 'bg-orange-600';\n\t\t\tdefault: return 'bg-gray-600';\n\t\t}\n\t};\n</script>\n\n<div class=\"min-h-screen bg-black\">\n\t<!-- Header -->\n\t<div class=\"border-b border-gray-800 bg-gray-900/50 px-4 py-6 sm:px-6\">\n\t\t<div class=\"mx-auto max-w-4xl\">\n\t\t\t<div class=\"flex items-start gap-6\">\n\t\t\t\t{#if meta.poster}\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={meta.poster}\n\t\t\t\t\t\talt={meta.name}\n\t\t\t\t\t\tclass=\"h-32 w-24 flex-shrink-0 rounded-lg object-cover sm:h-40 sm:w-28\"\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t<h1 class=\"mb-2 text-xl font-bold text-white sm:text-2xl md:text-3xl\">{meta.name}</h1>\n\t\t\t\t\t<div class=\"mb-3 flex flex-wrap items-center gap-3 text-sm text-gray-400\">\n\t\t\t\t\t\t{#if meta.year}\n\t\t\t\t\t\t\t<div class=\"flex items-center gap-1\">\n\t\t\t\t\t\t\t\t<Calendar class=\"h-4 w-4\" />\n\t\t\t\t\t\t\t\t<span>{meta.year}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#if meta.runtime}\n\t\t\t\t\t\t\t<div class=\"flex items-center gap-1\">\n\t\t\t\t\t\t\t\t<Clock class=\"h-4 w-4\" />\n\t\t\t\t\t\t\t\t<span>{meta.runtime}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#if meta.imdbRating}\n\t\t\t\t\t\t\t<div class=\"flex items-center gap-1\">\n\t\t\t\t\t\t\t\t<Star class=\"h-4 w-4 text-yellow-400\" />\n\t\t\t\t\t\t\t\t<span>{meta.imdbRating}/10</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t{#if meta.description}\n\t\t\t\t\t\t<p class=\"text-sm leading-relaxed text-gray-300 sm:text-base\">\n\t\t\t\t\t\t\t{meta.description.length > 200 ? meta.description.slice(0, 200) + '...' : meta.description}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<!-- Stream Selection -->\n\t<div class=\"mx-auto max-w-4xl px-4 py-8 sm:px-6\">\n\t\t<div class=\"mb-6\">\n\t\t\t<h2 class=\"mb-2 text-xl font-bold text-white\">Choose Stream Quality</h2>\n\t\t\t<p class=\"text-sm text-gray-400\">\n\t\t\t\tSelect your preferred streaming source and quality. Higher quality streams may take longer to load.\n\t\t\t</p>\n\t\t</div>\n\n\t\t{#if parsedStreams.length === 0}\n\t\t\t<div class=\"rounded-lg border border-gray-700 bg-gray-800/50 p-8 text-center\">\n\t\t\t\t<div class=\"mb-4 text-4xl opacity-50\">🚫</div>\n\t\t\t\t<h3 class=\"mb-2 text-lg font-semibold text-white\">No Streams Available</h3>\n\t\t\t\t<p class=\"text-sm text-gray-400\">No streaming sources found for this content.</p>\n\t\t\t</div>\n\t\t{:else}\n\t\t\t<!-- Provider Groups -->\n\t\t\t<div class=\"space-y-6\">\n\t\t\t\t{#each Object.entries(groupedStreams) as [providerName, providerStreams]}\n\t\t\t\t\t{@const Icon = getProviderIcon(providerStreams[0].type)}\n\t\t\t\t\t<div class=\"rounded-lg border border-gray-700 bg-gray-800/30 p-4\">\n\t\t\t\t\t\t<h3 class=\"mb-4 flex items-center gap-2 text-lg font-semibold text-white\">\n\t\t\t\t\t\t\t<Icon class=\"h-5 w-5\" />\n\t\t\t\t\t\t\t{providerName}\n\t\t\t\t\t\t\t<span class=\"{getTypeColor(providerStreams[0].type)} rounded-full px-2 py-1 text-xs font-medium text-white\">\n\t\t\t\t\t\t\t\t{providerStreams[0].type.toUpperCase()}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<div class=\"grid gap-3 sm:grid-cols-2 lg:grid-cols-3\">\n\t\t\t\t\t\t\t{#each providerStreams as parsed}\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass=\"group rounded-lg border border-gray-600 bg-gray-700/50 p-4 text-left transition-all hover:border-red-500 hover:bg-gray-700 focus:border-red-500 focus:outline-none focus:ring-2 focus:ring-red-500\"\n\t\t\t\t\t\t\t\t\tonclick={() => onStreamSelect(parsed.stream)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div class=\"mb-2 flex items-center justify-between\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"{getQualityColor(parsed.quality)} text-sm font-semibold\">\n\t\t\t\t\t\t\t\t\t\t\t{parsed.quality}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<Play class=\"h-4 w-4 text-gray-400 opacity-0 transition-opacity group-hover:opacity-100\" />\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t{#if parsed.size}\n\t\t\t\t\t\t\t\t\t\t<div class=\"mb-2 text-xs text-gray-400\">\n\t\t\t\t\t\t\t\t\t\t\tSize: {parsed.size}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t\t\t{#if parsed.seeders}\n\t\t\t\t\t\t\t\t\t\t<div class=\"mb-2 flex items-center gap-1 text-xs text-gray-400\">\n\t\t\t\t\t\t\t\t\t\t\t<span>👤</span>\n\t\t\t\t\t\t\t\t\t\t\t<span>{parsed.seeders} seeders</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t\t\t<div class=\"text-xs text-gray-500\">\n\t\t\t\t\t\t\t\t\t\t{parsed.stream.title || parsed.stream.name || 'Stream'}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t{/if}\n\n\t\t<!-- Actions -->\n\t\t<div class=\"mt-8 flex justify-center gap-4\">\n\t\t\t<button\n\t\t\t\tclass=\"rounded-lg bg-gray-600 px-6 py-3 font-medium text-white transition-colors hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-500\"\n\t\t\t\tonclick={onCancel}\n\t\t\t>\n\t\t\t\tCancel\n\t\t\t</button>\n\t\t</div>\n\n\t\t<!-- Stream Count Info -->\n\t\t<div class=\"mt-6 text-center\">\n\t\t\t<p class=\"text-xs text-gray-500\">\n\t\t\t\tFound {streams.length} stream{streams.length === 1 ? '' : 's'} from {Object.keys(groupedStreams).length} provider{Object.keys(groupedStreams).length === 1 ? '' : 's'}\n\t\t\t</p>\n\t\t</div>\n\t</div>\n</div>","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { page } from '$app/stores';\n\timport { goto } from '$app/navigation';\n\timport BufferedPlayer from '$lib/components/BufferedPlayer.svelte';\n\timport StreamSelector from '$lib/components/StreamSelector.svelte';\n\timport { streamProxyService } from '$lib/services/streamProxy';\n\timport { stremioService } from '$lib/services/stremio';\n\timport type { StremioMeta, StremioStream } from '$lib/services/stremio';\n\n\tlet meta = $state<StremioMeta | null>(null);\n\tlet streams = $state<StremioStream[]>([]);\n\tlet selectedStream = $state<StremioStream | null>(null);\n\tlet loading = $state(true);\n\tlet error = $state<string | null>(null);\n\tlet showStreamSelector = $state(false);\n\n\tconst id = $derived($page.params.id);\n\n\tonMount(async () => {\n\t\tconsole.log('🎬 Watch page loading with ID:', id);\n\t\tconsole.log('🔍 Raw page params:', $page.params);\n\t\tconsole.log('🌐 Full URL:', $page.url.href);\n\n\t\tif (!id) {\n\t\t\tconsole.log('❌ No ID provided');\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait stremioService.initialize();\n\n\t\t\t// Determine content type based on ID format\n\t\t\tlet type = 'movie';\n\t\t\tlet actualId = id;\n\n\t\t\t// If ID contains episode info, it's likely a series episode\n\t\t\tif (id.includes(':')) {\n\t\t\t\ttype = 'series';\n\t\t\t\tactualId = id.split(':')[0]; // Get series ID part\n\t\t\t} else if (id.startsWith('tt')) {\n\t\t\t\t// IMDB ID - determine type by fetching meta first\n\t\t\t\tconst movieMeta = await stremioService.getMeta('movie', id);\n\t\t\t\tconst seriesMeta = await stremioService.getMeta('series', id);\n\n\t\t\t\tif (seriesMeta) {\n\t\t\t\t\ttype = 'series';\n\t\t\t\t\tmeta = seriesMeta;\n\t\t\t\t} else if (movieMeta) {\n\t\t\t\t\ttype = 'movie';\n\t\t\t\t\tmeta = movieMeta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fetch metadata if not already loaded\n\t\t\tif (!meta) {\n\t\t\t\tmeta = await stremioService.getMeta(type, actualId);\n\t\t\t}\n\n\t\t\t// Fetch streams\n\t\t\tif (meta) {\n\t\t\t\tstreams = await stremioService.getStreams(type, id);\n\n\t\t\t\tconsole.log(`Found ${streams.length} streams for ${meta.name}`);\n\t\t\t\tstreams.forEach((stream, i) => {\n\t\t\t\t\tconsole.log(`Stream ${i + 1}:`, stream.title || stream.name, stream.url);\n\t\t\t\t});\n\n\t\t\t\tif (streams.length > 0) {\n\t\t\t\t\t// Show stream selector instead of auto-selecting\n\t\t\t\t\tshowStreamSelector = true;\n\t\t\t\t\tconsole.log(`✅ Found ${streams.length} streams, showing selector`);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('❌ No streams found from any addon');\n\t\t\t\t\tconsole.log('💡 This could be because:');\n\t\t\t\t\tconsole.log('   - Content is too new or unavailable');\n\t\t\t\t\tconsole.log('   - Real-Debrid subscription issues');\n\t\t\t\t\tconsole.log('   - Content ID format not supported');\n\t\t\t\t\tconsole.log('   - Geographic restrictions');\n\t\t\t\t\terror = `No streams available for \"${meta?.name || 'this content'}\". This could be due to:\n\t\t\t\t\n• Content is too new or not yet available\n• Real-Debrid subscription issues  \n• Geographic restrictions\n• Content not supported by current addons\n\nTry with older, popular content or check your Real-Debrid subscription.`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\terror = 'Content not found';\n\t\t\t}\n\t\t} catch (err) {\n\t\t\terror = 'Failed to load content';\n\t\t\tconsole.error('Error loading watch data:', err);\n\t\t} finally {\n\t\t\tloading = false;\n\t\t}\n\t});\n\n\tfunction handleStreamSelect(stream: StremioStream) {\n\t\tselectedStream = stream;\n\t\tshowStreamSelector = false;\n\t\tconsole.log(`✅ User selected stream: ${stream.title || stream.name}`);\n\t}\n\n\tfunction handleStreamSelectorCancel() {\n\t\t// Go back to the previous page\n\t\thistory.back();\n\t}\n\n\tfunction showStreamSelectorAgain() {\n\t\tshowStreamSelector = true;\n\t\tselectedStream = null;\n\t}\n</script>\n\n<svelte:head>\n\t<title>{meta?.name || 'Watch'} - HighSeas</title>\n</svelte:head>\n\n<div class=\"min-h-screen bg-black\">\n\t{#if loading}\n\t\t<div class=\"flex min-h-screen items-center justify-center bg-black\">\n\t\t\t<div class=\"text-center\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"mb-4 inline-block h-12 w-12 animate-spin rounded-full border-b-2 border-red-600\"\n\t\t\t\t></div>\n\t\t\t\t<div class=\"mb-2 text-xl text-white\">Discovering Streams</div>\n\t\t\t\t<div class=\"text-sm text-gray-400\">Searching for available streaming sources...</div>\n\t\t\t</div>\n\t\t</div>\n\t{:else if showStreamSelector && meta && streams.length > 0}\n\t\t<!-- Stream Selection Screen -->\n\t\t<StreamSelector \n\t\t\t{streams} \n\t\t\t{meta} \n\t\t\tonStreamSelect={handleStreamSelect}\n\t\t\tonCancel={handleStreamSelectorCancel}\n\t\t/>\n\t{:else if error}\n\t\t<div class=\"flex min-h-screen items-center justify-center bg-black\">\n\t\t\t<div class=\"max-w-lg px-4 text-center\">\n\t\t\t\t<div class=\"mb-6 text-6xl opacity-50\">⚠️</div>\n\t\t\t\t<h2 class=\"mb-4 text-xl font-bold text-white sm:text-2xl\">Playback Error</h2>\n\t\t\t\t<div class=\"mb-6 text-sm leading-relaxed whitespace-pre-line text-gray-400 sm:text-base\">\n\t\t\t\t\t{error}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"flex flex-col space-y-3 sm:flex-row sm:justify-center sm:space-y-0 sm:space-x-4\"\n\t\t\t\t>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"rounded bg-red-600 px-6 py-3 text-sm font-medium text-white transition-colors hover:bg-red-700 focus:ring-2 focus:ring-red-600 focus:ring-offset-2 focus:ring-offset-black\"\n\t\t\t\t\t\tonclick={() => window.location.reload()}\n\t\t\t\t\t>\n\t\t\t\t\t\tTry Again\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"rounded bg-gray-600 px-6 py-3 text-sm font-medium text-white transition-colors hover:bg-gray-700 focus:ring-2 focus:ring-gray-600 focus:ring-offset-2 focus:ring-offset-black\"\n\t\t\t\t\t\tonclick={() => history.back()}\n\t\t\t\t\t>\n\t\t\t\t\t\tGo Back\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t{:else if selectedStream && meta}\n\t\t<!-- Video Player -->\n\t\t<div class=\"relative\">\n\t\t\t<BufferedPlayer\n\t\t\t\tsrc={selectedStream.url}\n\t\t\t\tposter={meta.background || meta.poster}\n\t\t\t\ttitle={meta.name}\n\t\t\t/>\n\t\t</div>\n\n\t\t<!-- Content Info -->\n\t\t<div class=\"mx-auto max-w-4xl p-4 sm:p-6\">\n\t\t\t<!-- Change Stream Button -->\n\t\t\t<div class=\"mb-6 flex justify-center\">\n\t\t\t\t<button\n\t\t\t\t\tclass=\"flex items-center gap-2 rounded-lg border border-gray-600 bg-gray-800/50 px-4 py-2 text-sm font-medium text-white transition-colors hover:border-red-500 hover:bg-gray-700\"\n\t\t\t\t\tonclick={showStreamSelectorAgain}\n\t\t\t\t>\n\t\t\t\t\t<svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n\t\t\t\t\t</svg>\n\t\t\t\t\tChange Stream Quality\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t\t<div class=\"flex flex-col gap-4 sm:gap-6 md:flex-row\">\n\t\t\t\t<!-- Poster -->\n\t\t\t\t<div class=\"flex flex-shrink-0 justify-center md:justify-start\">\n\t\t\t\t\t{#if meta.poster}\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={meta.poster}\n\t\t\t\t\t\t\talt={meta.name}\n\t\t\t\t\t\t\tclass=\"h-64 w-44 rounded-lg object-cover sm:h-72 sm:w-48\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Details -->\n\t\t\t\t<div class=\"flex-1 text-white\">\n\t\t\t\t\t<h1 class=\"mb-2 text-xl font-bold sm:text-2xl md:text-3xl\">{meta.name}</h1>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"mb-4 flex flex-wrap items-center gap-3 text-sm text-gray-400 sm:gap-4 sm:text-base\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{#if meta.year}<span>{meta.year}</span>{/if}\n\t\t\t\t\t\t{#if meta.runtime}<span>{meta.runtime}</span>{/if}\n\t\t\t\t\t\t{#if meta.imdbRating}<span>★ {meta.imdbRating}/10</span>{/if}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{#if meta.genre && meta.genre.length > 0}\n\t\t\t\t\t\t<div class=\"mb-4 flex flex-wrap gap-2\">\n\t\t\t\t\t\t\t{#each meta.genre as genre}\n\t\t\t\t\t\t\t\t<span class=\"rounded-full bg-gray-700 px-2 py-1 text-xs sm:px-3 sm:text-sm\"\n\t\t\t\t\t\t\t\t\t>{genre}</span\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\n\t\t\t\t\t{#if meta.description}\n\t\t\t\t\t\t<p class=\"mb-4 text-sm leading-relaxed text-gray-300 sm:text-base\">\n\t\t\t\t\t\t\t{meta.description}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t{/if}\n\n\t\t\t\t\t{#if meta.cast && meta.cast.length > 0}\n\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t<h3 class=\"mb-2 text-sm font-semibold sm:text-base\">Cast</h3>\n\t\t\t\t\t\t\t<p class=\"text-sm text-gray-400 sm:text-base\">{meta.cast.join(', ')}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\n\t\t\t\t\t{#if meta.director && meta.director.length > 0}\n\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t<h3 class=\"mb-2 text-sm font-semibold sm:text-base\">Director</h3>\n\t\t\t\t\t\t\t<p class=\"text-sm text-gray-400 sm:text-base\">{meta.director.join(', ')}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Current Stream Info -->\n\t\t\t<div class=\"mt-6 sm:mt-8\">\n\t\t\t\t<h3 class=\"mb-3 text-base font-semibold text-white sm:mb-4 sm:text-lg\">Current Stream</h3>\n\t\t\t\t{#if selectedStream}\n\t\t\t\t\t<div class=\"rounded-lg bg-gray-800/50 p-4\">\n\t\t\t\t\t\t<div class=\"space-y-2 text-sm text-gray-300\">\n\t\t\t\t\t\t\t<div class=\"flex flex-col gap-1 sm:flex-row sm:gap-2\">\n\t\t\t\t\t\t\t\t<span class=\"font-medium text-gray-400\">Source:</span>\n\t\t\t\t\t\t\t\t<span class=\"break-words\">\n\t\t\t\t\t\t\t\t\t{(selectedStream.title || selectedStream.name || 'Unknown').length > 80\n\t\t\t\t\t\t\t\t\t\t? (selectedStream.title || selectedStream.name || 'Unknown').substring(0, 80) + '...'\n\t\t\t\t\t\t\t\t\t\t: selectedStream.title || selectedStream.name || 'Unknown'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{#if selectedStream.description}\n\t\t\t\t\t\t\t\t<div class=\"flex flex-col gap-1 sm:flex-row sm:gap-2\">\n\t\t\t\t\t\t\t\t\t<span class=\"font-medium text-gray-400\">Quality:</span>\n\t\t\t\t\t\t\t\t\t<span>{selectedStream.description}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t<div class=\"border-t border-gray-700 pt-2 text-xs text-gray-500\">\n\t\t\t\t\t\t\t\t{streams.length} stream{streams.length === 1 ? '' : 's'} available • Click \"Change Stream Quality\" to select different source\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\t{:else}\n\t\t<div class=\"flex min-h-screen items-center justify-center bg-black\">\n\t\t\t<div class=\"max-w-lg px-4 text-center\">\n\t\t\t\t<div class=\"mb-6 text-6xl opacity-50\">🚫</div>\n\t\t\t\t<h2 class=\"mb-4 text-xl font-bold text-white sm:text-2xl\">No Streams Available</h2>\n\t\t\t\t<p class=\"mb-6 text-sm leading-relaxed text-gray-400 sm:text-base\">\n\t\t\t\t\tNo streaming sources were found for this content. This could be because:\n\t\t\t\t</p>\n\t\t\t\t<ul class=\"mb-6 space-y-2 text-left text-sm text-gray-400 sm:text-base\">\n\t\t\t\t\t<li>• The content is not available on configured addons</li>\n\t\t\t\t\t<li>• Additional streaming addons need to be configured</li>\n\t\t\t\t\t<li>• The content ID format is not supported</li>\n\t\t\t\t</ul>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"flex flex-col space-y-3 sm:flex-row sm:justify-center sm:space-y-0 sm:space-x-4\"\n\t\t\t\t>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"rounded bg-red-600 px-6 py-3 text-sm font-medium text-white transition-colors hover:bg-red-700 focus:ring-2 focus:ring-red-600 focus:ring-offset-2 focus:ring-offset-black\"\n\t\t\t\t\t\tonclick={() => window.location.reload()}\n\t\t\t\t\t>\n\t\t\t\t\t\tTry Again\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"rounded bg-gray-600 px-6 py-3 text-sm font-medium text-white transition-colors hover:bg-gray-700 focus:ring-2 focus:ring-gray-600 focus:ring-offset-2 focus:ring-offset-black\"\n\t\t\t\t\t\tonclick={() => history.back()}\n\t\t\t\t\t>\n\t\t\t\t\t\tGo Back\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<p class=\"mt-4 text-xs text-gray-500\">\n\t\t\t\t\tCheck the browser console for detailed addon information.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n</div>\n"],"names":["StreamProxyService","__publicField","originalUrl","proxyUrl","stream","streams","url","urlObj","domain","forceProxy","streamProxyService","videoElement","bufferProgress","loadProgress","isBuffering","bufferHealth","playerState","$.tag_proxy","proxiedSrc","$.tag","$.derived","bufferMonitorInterval","loadTimeout","retryCount","maxRetries","loadTimeoutMs","onMount","StreamingError","logger","$$props","initializePlayer","error","handleStreamingError","onDestroy","cleanup","$.get","setupEventListeners","setupBufferMonitoring","handleLoadStart","handleLoadedMetadata","handleLoadedData","handleCanPlay","handleCanPlayThrough","handleProgress","handleWaiting","handlePlaying","handlePause","handleTimeUpdate","handleDurationChange","handleVolumeChange","handleRateChange","handleError","handleAbort","handleStalled","handleSuspend","name","handler","eventName","updatePlayerState","updateBufferInfo","currentTime","duration","bufferedEnd","bufferedStart","i","start","end","bufferAhead","bufferBehind","$.set","totalBuffered","bufferInfo","streamingError","retryError","buffered","event","mediaError","errorMessage","errorCategory","ErrorCategory","ErrorSeverity","$.strict_equals","$.set_text","text","$$render","consequent","$.bind_this","video","$$value","consequent_1","on_click","_","parsed","parseStreams","title","description","provider","type","streamUrl","quality","confidence","qualityPatterns","pattern","q","c","size","sizeMatch","seeders","seedersMatch","a","typeOrder","parsedStreams","groupedStreams","groups","getProviderIcon","HardDrive","Wifi","Monitor","getQualityColor","getTypeColor","consequent_2","consequent_3","consequent_4","$.index","$$anchor","$$item","providerName","$$array","providerStreams","Icon","$.each","div_13","$.template_effect","text_8","consequent_6","text_9","consequent_7","text_7","consequent_5","alternate","text_11","$0","$1","showStreamSelectorAgain","showStreamSelector","selectedStream","on_click_1","on_click_3","meta","$.state","$.proxy","loading","id","$page","$.track_reactivity_loss","stremioService","actualId","movieMeta","seriesMeta","handleStreamSelect","handleStreamSelectorCancel","$.set_attribute","img","text_2","text_3","text_4","genre","text_6","consequent_8","consequent_9","consequent_10","text_10","consequent_11","consequent_12","text_1","consequent_13","alternate_1","alternate_2","alternate_3"],"mappings":"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"}
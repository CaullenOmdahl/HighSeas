{"version":3,"file":"6.y3IxIHUB.js","sources":["../../../../../../src/routes/series/[id]/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { page } from '$app/stores';\n\timport { onMount } from 'svelte';\n\timport { Play, Info, Star } from 'lucide-svelte';\n\timport { stremioService } from '$lib/services/stremio';\n\timport type { StremioMeta } from '$lib/services/stremio';\n\n\tlet seriesData = $state<StremioMeta | null>(null);\n\tlet loading = $state(true);\n\tlet selectedSeason = $state(1);\n\tlet seasons = $state<{\n\t\t[key: number]: Array<{\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\tepisode: number;\n\t\t\tseason: number;\n\t\t\treleased?: string;\n\t\t}>;\n\t}>({});\n\n\tconst seriesId = $derived($page.params.id);\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tawait stremioService.initialize();\n\t\t\tif (seriesId) {\n\t\t\t\tseriesData = await stremioService.getMeta('series', seriesId);\n\t\t\t}\n\n\t\t\tconsole.log('Series data:', seriesData);\n\n\t\t\tif (seriesData?.videos) {\n\t\t\t\tconsole.log('Available videos:', seriesData.videos);\n\n\t\t\t\t// Group episodes by season\n\t\t\t\tseriesData.videos.forEach((video) => {\n\t\t\t\t\tconst season = video.season || 1;\n\t\t\t\t\tconst episode = video.episode || 1;\n\t\t\t\t\tif (!seasons[season]) {\n\t\t\t\t\t\tseasons[season] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Debug episode data\n\t\t\t\t\tconsole.log(`Episode S${season}E${episode}:`, {\n\t\t\t\t\t\tid: video.id,\n\t\t\t\t\t\ttitle: video.title,\n\t\t\t\t\t\tname: video.name,\n\t\t\t\t\t\toverview: video.overview,\n\t\t\t\t\t\tdescription: video.description\n\t\t\t\t\t});\n\n\t\t\t\t\tseasons[season].push({\n\t\t\t\t\t\t...video,\n\t\t\t\t\t\tseason,\n\t\t\t\t\t\tepisode,\n\t\t\t\t\t\t// Ensure we have a title - try multiple fields\n\t\t\t\t\t\ttitle: video.title || video.name || video.overview || `Episode ${episode}`\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// Sort episodes within each season\n\t\t\t\tObject.keys(seasons).forEach((seasonKey) => {\n\t\t\t\t\tconst season = parseInt(seasonKey);\n\t\t\t\t\tseasons[season].sort((a, b) => (a.episode || 0) - (b.episode || 0));\n\t\t\t\t});\n\n\t\t\t\tconsole.log('Organized seasons:', seasons);\n\t\t\t} else {\n\t\t\t\tconsole.log('No videos found in series data');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load series data:', error);\n\t\t} finally {\n\t\t\tloading = false;\n\t\t}\n\t});\n\n\tconst availableSeasons = $derived(\n\t\tObject.keys(seasons)\n\t\t\t.map(Number)\n\t\t\t.sort((a, b) => a - b)\n\t);\n\tconst currentSeasonEpisodes = $derived(seasons[selectedSeason] || []);\n\n\tfunction playEpisode(episodeId: string) {\n\t\twindow.location.href = `/watch/${episodeId}`;\n\t}\n</script>\n\n<svelte:head>\n\t<title>{seriesData?.name || 'Series'} - HighSeas</title>\n</svelte:head>\n\n<div class=\"min-h-screen bg-black text-white\">\n\t{#if loading}\n\t\t<div class=\"flex min-h-screen items-center justify-center bg-black\">\n\t\t\t<div class=\"text-center\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"mb-4 inline-block h-12 w-12 animate-spin rounded-full border-b-2 border-red-600\"\n\t\t\t\t></div>\n\t\t\t\t<div class=\"mb-2 text-xl text-white\">Loading Series</div>\n\t\t\t\t<div class=\"text-sm text-gray-400\">Fetching episodes and metadata...</div>\n\t\t\t</div>\n\t\t</div>\n\t{:else if seriesData}\n\t\t<!-- Hero Section -->\n\t\t<section class=\"relative h-96 md:h-screen\">\n\t\t\t<div\n\t\t\t\tclass=\"absolute inset-0 bg-cover bg-center\"\n\t\t\t\tstyle=\"background-image: url('{seriesData.background || seriesData.poster}');\"\n\t\t\t></div>\n\t\t\t<div class=\"absolute inset-0 bg-gradient-to-r from-black via-black/70 to-transparent\"></div>\n\n\t\t\t<div class=\"relative z-10 flex h-full max-w-4xl items-center px-4 sm:px-6\">\n\t\t\t\t<div>\n\t\t\t\t\t<h1 class=\"mb-4 text-2xl font-bold sm:text-3xl md:text-4xl lg:text-6xl\">\n\t\t\t\t\t\t{seriesData.name}\n\t\t\t\t\t</h1>\n\t\t\t\t\t<div class=\"mb-4 flex flex-wrap items-center gap-3 sm:mb-6 sm:gap-4\">\n\t\t\t\t\t\t{#if seriesData.year}\n\t\t\t\t\t\t\t<span class=\"text-lg\">{seriesData.year}</span>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#if seriesData.imdbRating}\n\t\t\t\t\t\t\t<span class=\"flex items-center space-x-1\">\n\t\t\t\t\t\t\t\t<Star class=\"h-4 w-4 fill-yellow-400 text-yellow-400\" />\n\t\t\t\t\t\t\t\t<span>{seriesData.imdbRating}</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#if seriesData.genre && seriesData.genre.length > 0}\n\t\t\t\t\t\t\t<span class=\"text-gray-300\">{seriesData.genre.slice(0, 3).join(' â€¢ ')}</span>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t{#if seriesData.description}\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tclass=\"mb-6 max-w-xl text-sm leading-relaxed text-gray-300 sm:mb-8 sm:max-w-2xl sm:text-base md:text-lg\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{seriesData.description}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t{/if}\n\t\t\t\t\t<div class=\"flex flex-col space-y-3 sm:flex-row sm:space-y-0 sm:space-x-4\">\n\t\t\t\t\t\t{#if currentSeasonEpisodes.length > 0}\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"flex items-center justify-center space-x-2 rounded bg-white px-6 py-3 font-semibold text-black transition-colors hover:bg-gray-200 sm:px-8\"\n\t\t\t\t\t\t\t\tonclick={() => playEpisode(currentSeasonEpisodes[0].id)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Play class=\"h-5 w-5\" fill=\"currentColor\" />\n\t\t\t\t\t\t\t\t<span>Play S{selectedSeason}E1</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"flex items-center justify-center space-x-2 rounded bg-gray-600/50 px-6 py-3 font-semibold text-white transition-colors hover:bg-gray-600/70 sm:px-8\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Info class=\"h-5 w-5\" />\n\t\t\t\t\t\t\t<span>More Info</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\n\t\t<!-- Episodes Section -->\n\t\t<div class=\"px-4 py-6 sm:px-6 sm:py-8\">\n\t\t\t<!-- Season Selector -->\n\t\t\t{#if availableSeasons.length > 1}\n\t\t\t\t<div class=\"mb-6\">\n\t\t\t\t\t<h2 class=\"mb-4 text-2xl font-bold\">Episodes</h2>\n\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tbind:value={selectedSeason}\n\t\t\t\t\t\t\tclass=\"rounded-md border border-gray-700 bg-gray-800 px-4 py-2 text-lg font-medium text-white focus:border-red-600 focus:ring-2 focus:ring-red-600\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{#each availableSeasons as season}\n\t\t\t\t\t\t\t\t<option value={season}>Season {season}</option>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\n\t\t\t<!-- Episodes Grid -->\n\t\t\t{#if currentSeasonEpisodes.length > 0}\n\t\t\t\t<div class=\"mb-6\">\n\t\t\t\t\t<h3 class=\"mb-4 text-xl font-semibold\">Season {selectedSeason} Episodes</h3>\n\t\t\t\t\t<div class=\"grid grid-cols-1 gap-3 sm:grid-cols-2 md:gap-4 lg:grid-cols-3\">\n\t\t\t\t\t\t{#each currentSeasonEpisodes as episode}\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"w-full cursor-pointer overflow-hidden rounded-lg bg-gray-900 text-left transition-colors hover:bg-gray-800\"\n\t\t\t\t\t\t\t\tonclick={() => playEpisode(episode.id)}\n\t\t\t\t\t\t\t\taria-label=\"Play {episode.title || `Episode ${episode.episode}`}\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div class=\"p-4\">\n\t\t\t\t\t\t\t\t\t<div class=\"mb-2 flex items-center justify-between\">\n\t\t\t\t\t\t\t\t\t\t<h4 class=\"font-semibold\">Episode {episode.episode || 'TBD'}</h4>\n\t\t\t\t\t\t\t\t\t\t<Play class=\"h-5 w-5 text-gray-400\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<p class=\"mb-2 text-sm font-medium text-gray-300\">\n\t\t\t\t\t\t\t\t\t\t{episode.title || `Episode ${episode.episode || 'Unknown'}`}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t{#if episode.released}\n\t\t\t\t\t\t\t\t\t\t<p class=\"text-xs text-gray-500\">\n\t\t\t\t\t\t\t\t\t\t\t{new Date(episode.released).toLocaleDateString()}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t<div class=\"mt-2 text-xs text-gray-600\">\n\t\t\t\t\t\t\t\t\t\tID: {episode.id}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{:else}\n\t\t\t\t<div class=\"py-12 text-center\">\n\t\t\t\t\t<p class=\"text-gray-400\">No episodes available for Season {selectedSeason}</p>\n\t\t\t\t</div>\n\t\t\t{/if}\n\n\t\t\t<!-- Cast and Crew -->\n\t\t\t{#if seriesData.cast || seriesData.director}\n\t\t\t\t<div class=\"mt-12\">\n\t\t\t\t\t<h3 class=\"mb-4 text-xl font-semibold\">Cast & Crew</h3>\n\t\t\t\t\t<div class=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n\t\t\t\t\t\t{#if seriesData.cast && seriesData.cast.length > 0}\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h4 class=\"mb-2 font-medium\">Cast</h4>\n\t\t\t\t\t\t\t\t<p class=\"text-gray-300\">{seriesData.cast.slice(0, 5).join(', ')}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#if seriesData.director && seriesData.director.length > 0}\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h4 class=\"mb-2 font-medium\">Director</h4>\n\t\t\t\t\t\t\t\t<p class=\"text-gray-300\">{seriesData.director.join(', ')}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t{:else}\n\t\t<div class=\"flex min-h-screen items-center justify-center bg-black\">\n\t\t\t<div class=\"max-w-md px-4 text-center\">\n\t\t\t\t<div class=\"mb-6 text-6xl opacity-50\">ðŸ“º</div>\n\t\t\t\t<h2 class=\"mb-4 text-xl font-bold text-white sm:text-2xl\">Series Not Found</h2>\n\t\t\t\t<p class=\"mb-6 text-sm leading-relaxed text-gray-400 sm:text-base\">\n\t\t\t\t\tUnable to load series information. The content may not be available or there might be a\n\t\t\t\t\tconnection issue.\n\t\t\t\t</p>\n\t\t\t\t<button\n\t\t\t\t\tclass=\"rounded bg-red-600 px-6 py-3 text-sm font-medium text-white transition-colors hover:bg-red-700 focus:ring-2 focus:ring-red-600 focus:ring-offset-2 focus:ring-offset-black\"\n\t\t\t\t\tonclick={() => history.back()}\n\t\t\t\t>\n\t\t\t\t\tGo Back\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n</div>\n"],"names":["on_click","_","playEpisode","currentSeasonEpisodes","$.get","episode","on_click_2","seriesData","loading","selectedSeason","seasons","$.tag_proxy","$.proxy","seriesId","$.tag","$.derived","$page","onMount","$.track_reactivity_loss","stremioService","$.set","video","season","seasonKey","a","b","availableSeasons","episodeId","$.template_effect","$.set_text","text_1","$$render","consequent_1","text_2","consequent_2","consequent_3","text_4","consequent_4","consequent_5","$.each","select","$.bind_select_value","$$value","consequent_6","div_11","$0","text_10","consequent_7","$.set_attribute","button_2","text_9","text_11","consequent_8","alternate","consequent_9","text_14","consequent_10","consequent_11","$.set_style","div_2","text","consequent_12","alternate_1","consequent","alternate_2"],"mappings":"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"}
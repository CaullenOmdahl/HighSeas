{"version":3,"file":"BTEk0YJV.js","sources":["../../../../../../node_modules/@sveltejs/kit/src/runtime/app/environment/index.js","../../../../../../src/lib/config.ts","../../../../../../src/lib/types/errors.ts","../../../../../../src/lib/utils/logger.ts","../../../../../../src/lib/utils/cache.ts","../../../../../../src/lib/services/stremio.ts"],"sourcesContent":["import { BROWSER, DEV } from 'esm-env';\nexport { building, version } from '__sveltekit/environment';\n\nexport const browser = BROWSER;\n\nexport const dev = DEV;\n","/**\n * Client-side configuration - PUBLIC DATA ONLY\n * 🚨 SECURITY WARNING: Never include sensitive tokens, API keys, or secrets in this file\n * This configuration is accessible to all client-side code and can be seen in browser\n * For sensitive data, use server-side configuration with environment variables\n */\n\nimport { browser } from '$app/environment';\n\n// Torrentio configuration with specified providers\nconst TORRENTIO_CONFIG = {\n\tbaseUrl: 'torrentio.strem.fun',\n\t// Exclude low quality streams - only allow high quality\n\tqualityFilter: ['brremux', 'threed', '480p', 'other', 'scr', 'cam', 'unknown'],\n\t// Use exclusion filter instead\n\texcludeQuality: ['brremux', 'threed', '480p', 'other', 'scr', 'cam', 'unknown'],\n\tdebridOptions: ['nodownloadlinks', 'nocatalog'],\n\t// Updated providers list as requested\n\tproviders: ['yts', 'eztv', 'rarbg', 'horriblesubs', 'nyaasi'],\n\t// Token is handled server-side via environment variables for security\n\t// Never include sensitive tokens in client-side code\n\trealDebridToken: ''\n};\n\n// Build the Torrentio URL dynamically with specified providers and quality exclusions\n// NOTE: This builds a URL template - actual token substitution happens server-side\nfunction buildTorrentioUrl(): string {\n\t// Use exclusion filter to block low quality streams\n\tconst qualityFilter = `qualityfilter=${TORRENTIO_CONFIG.excludeQuality.join(',')}`;\n\tconst debridOptions = `debridoptions=${TORRENTIO_CONFIG.debridOptions.join(',')}`;\n\tconst providers = `providers=${TORRENTIO_CONFIG.providers.join(',')}`;\n\t// Token placeholder - will be replaced server-side with actual token\n\tconst realDebrid = `realdebrid={REAL_DEBRID_TOKEN}`;\n\n\t// Join with pipe character directly (will be encoded automatically when needed)\n\tconst params = [qualityFilter, providers, debridOptions, realDebrid].join('|');\n\n\treturn `stremio://${TORRENTIO_CONFIG.baseUrl}/${params}/manifest.json`;\n}\n\nexport const config = {\n\t// Pre-installed Stremio addons for basic functionality\n\tpreInstalledAddons: [\n\t\t'https://v3-cinemeta.strem.io/manifest.json', // TMDB catalog (metadata only)\n\t\t'https://watchhub.strem.io/manifest.json', // WatchHub (streams)\n\t\t// Popular streaming addons that provide actual streams\n\t\tbuildTorrentioUrl(), // Torrentio with Real-Debrid\n\t\t'https://torrentio.strem.fun/manifest.json' // Torrentio without debrid (fallback)\n\t],\n\n\t// No longer using env vars for addons\n\tdefaultAddons: [] as string[],\n\n\t// Quality filtering configuration\n\tqualityFilter: {\n\t\texcluded: TORRENTIO_CONFIG.excludeQuality,\n\t\tallowed: ['1080p', '2160p', '4k', 'uhd', 'hdr', 'dolby', 'atmos'] // High quality indicators\n\t},\n\n\t// App settings\n\tapp: {\n\t\tname: 'HighSeas',\n\t\tversion: '1.0.0'\n\t}\n};\n\n// Stream quality filtering utility\nexport function filterStreamsByQuality(streams: any[]): any[] {\n\tif (!streams || streams.length === 0) return streams;\n\n\treturn streams.filter((stream) => {\n\t\tconst title = (stream.title || stream.name || '').toLowerCase();\n\t\tconst description = (stream.description || '').toLowerCase();\n\t\tconst streamText = `${title} ${description}`;\n\n\t\t// Check if stream contains any excluded quality indicators\n\t\tconst hasExcludedQuality = config.qualityFilter.excluded.some((quality) =>\n\t\t\tstreamText.includes(quality.toLowerCase())\n\t\t);\n\n\t\t// If it has excluded quality, filter it out\n\t\tif (hasExcludedQuality) {\n\t\t\tconsole.log(`🚫 Filtering out low quality stream: ${stream.title || stream.name}`);\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check for high quality indicators (optional - keep streams without explicit quality markers)\n\t\tconst hasHighQuality = config.qualityFilter.allowed.some((quality) =>\n\t\t\tstreamText.includes(quality.toLowerCase())\n\t\t);\n\n\t\t// Allow streams with high quality indicators or streams without explicit quality markers\n\t\t// (some streams don't specify quality in title but are still good quality)\n\t\tif (hasHighQuality || !hasAnyQualityMarker(streamText)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If no high quality indicator and has some quality marker, might be medium quality - allow it\n\t\treturn true;\n\t});\n}\n\n// Helper function to detect if stream has any quality markers\nfunction hasAnyQualityMarker(text: string): boolean {\n\tconst qualityMarkers = [\n\t\t...config.qualityFilter.excluded,\n\t\t...config.qualityFilter.allowed,\n\t\t'720p',\n\t\t'hd',\n\t\t'bluray',\n\t\t'webrip',\n\t\t'webdl',\n\t\t'dvdrip'\n\t];\n\n\treturn qualityMarkers.some((marker) => text.includes(marker.toLowerCase()));\n}\n\n// Server-side config (for API routes)\nexport const serverConfig = {\n\t// TMDB API key for fetching movie metadata (server only)\n\ttmdbApiKey: 'your_tmdb_key_here',\n\n\t// No longer using env vars\n\tdefaultAddons: [] as string[]\n};\n","/**\n * Comprehensive error handling system for streaming application\n */\n\nexport enum ErrorCategory {\n\tNETWORK = 'NETWORK',\n\tSTREAM = 'STREAM',\n\tPLAYER = 'PLAYER',\n\tADDON = 'ADDON',\n\tPERMISSION = 'PERMISSION',\n\tVALIDATION = 'VALIDATION',\n\tUNKNOWN = 'UNKNOWN'\n}\n\nexport enum ErrorSeverity {\n\tLOW = 'LOW',\n\tMEDIUM = 'MEDIUM',\n\tHIGH = 'HIGH',\n\tCRITICAL = 'CRITICAL'\n}\n\nexport interface ErrorContext {\n\ttimestamp: number;\n\tuserAgent?: string;\n\turl?: string;\n\tuserId?: string;\n\tsessionId?: string;\n\tmetadata?: Record<string, unknown>;\n}\n\nexport interface StreamingErrorOptions {\n\tcategory: ErrorCategory;\n\tseverity: ErrorSeverity;\n\tmessage: string;\n\toriginalError?: Error;\n\tcontext?: Partial<ErrorContext>;\n\trecoverable: boolean;\n\tuserMessage?: string;\n\tactionable?: boolean;\n\tretryable?: boolean;\n}\n\nexport class StreamingError extends Error {\n\tpublic readonly category: ErrorCategory;\n\tpublic readonly severity: ErrorSeverity;\n\tpublic readonly originalError?: Error;\n\tpublic readonly context: ErrorContext;\n\tpublic readonly recoverable: boolean;\n\tpublic readonly userMessage: string;\n\tpublic readonly actionable: boolean;\n\tpublic readonly retryable: boolean;\n\tpublic readonly errorId: string;\n\n\tconstructor(options: StreamingErrorOptions) {\n\t\tsuper(options.message);\n\t\tthis.name = 'StreamingError';\n\n\t\tthis.category = options.category;\n\t\tthis.severity = options.severity;\n\t\tthis.originalError = options.originalError;\n\t\tthis.recoverable = options.recoverable;\n\t\tthis.actionable = options.actionable ?? true;\n\t\tthis.retryable = options.retryable ?? false;\n\n\t\tthis.context = {\n\t\t\ttimestamp: Date.now(),\n\t\t\tuserAgent: typeof navigator !== 'undefined' ? navigator.userAgent : undefined,\n\t\t\turl: typeof window !== 'undefined' ? window.location.href : undefined,\n\t\t\t...options.context\n\t\t};\n\n\t\tthis.userMessage = options.userMessage || this.getDefaultUserMessage();\n\t\tthis.errorId = this.generateErrorId();\n\n\t\t// Maintain stack trace\n\t\tif (Error.captureStackTrace) {\n\t\t\tError.captureStackTrace(this, StreamingError);\n\t\t}\n\t}\n\n\tprivate getDefaultUserMessage(): string {\n\t\tswitch (this.category) {\n\t\t\tcase ErrorCategory.NETWORK:\n\t\t\t\treturn 'Network connection issues detected. Please check your internet connection and try again.';\n\t\t\tcase ErrorCategory.STREAM:\n\t\t\t\treturn 'Unable to load the video stream. The content may be temporarily unavailable.';\n\t\t\tcase ErrorCategory.PLAYER:\n\t\t\t\treturn 'Video player encountered an error. Try refreshing the page or using a different browser.';\n\t\t\tcase ErrorCategory.ADDON:\n\t\t\t\treturn 'Content source is currently unavailable. Please try again later.';\n\t\t\tcase ErrorCategory.PERMISSION:\n\t\t\t\treturn 'Access denied. You may not have permission to view this content.';\n\t\t\tcase ErrorCategory.VALIDATION:\n\t\t\t\treturn 'Invalid request. Please check your input and try again.';\n\t\t\tdefault:\n\t\t\t\treturn 'An unexpected error occurred. Please try again.';\n\t\t}\n\t}\n\n\tprivate generateErrorId(): string {\n\t\treturn `${this.category}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\terrorId: this.errorId,\n\t\t\tname: this.name,\n\t\t\tmessage: this.message,\n\t\t\tuserMessage: this.userMessage,\n\t\t\tcategory: this.category,\n\t\t\tseverity: this.severity,\n\t\t\trecoverable: this.recoverable,\n\t\t\tactionable: this.actionable,\n\t\t\tretryable: this.retryable,\n\t\t\tcontext: this.context,\n\t\t\tstack: this.stack,\n\t\t\toriginalError: this.originalError\n\t\t\t\t? {\n\t\t\t\t\t\tname: this.originalError.name,\n\t\t\t\t\t\tmessage: this.originalError.message,\n\t\t\t\t\t\tstack: this.originalError.stack\n\t\t\t\t\t}\n\t\t\t\t: undefined\n\t\t};\n\t}\n\n\tpublic static createNetworkError(\n\t\tmessage: string,\n\t\toriginalError?: Error,\n\t\tcontext?: Partial<ErrorContext>\n\t): StreamingError {\n\t\treturn new StreamingError({\n\t\t\tcategory: ErrorCategory.NETWORK,\n\t\t\tseverity: ErrorSeverity.HIGH,\n\t\t\tmessage,\n\t\t\toriginalError,\n\t\t\tcontext,\n\t\t\trecoverable: true,\n\t\t\tretryable: true,\n\t\t\tuserMessage: 'Network connection failed. Please check your internet connection and try again.'\n\t\t});\n\t}\n\n\tpublic static createStreamError(\n\t\tmessage: string,\n\t\toriginalError?: Error,\n\t\tcontext?: Partial<ErrorContext>\n\t): StreamingError {\n\t\treturn new StreamingError({\n\t\t\tcategory: ErrorCategory.STREAM,\n\t\t\tseverity: ErrorSeverity.HIGH,\n\t\t\tmessage,\n\t\t\toriginalError,\n\t\t\tcontext,\n\t\t\trecoverable: true,\n\t\t\tretryable: true,\n\t\t\tuserMessage: 'Failed to load video stream. The content may be temporarily unavailable.'\n\t\t});\n\t}\n\n\tpublic static createPlayerError(\n\t\tmessage: string,\n\t\toriginalError?: Error,\n\t\tcontext?: Partial<ErrorContext>\n\t): StreamingError {\n\t\treturn new StreamingError({\n\t\t\tcategory: ErrorCategory.PLAYER,\n\t\t\tseverity: ErrorSeverity.MEDIUM,\n\t\t\tmessage,\n\t\t\toriginalError,\n\t\t\tcontext,\n\t\t\trecoverable: true,\n\t\t\tretryable: false,\n\t\t\tuserMessage: 'Video player error. Try refreshing the page or using a different browser.'\n\t\t});\n\t}\n\n\tpublic static createAddonError(\n\t\tmessage: string,\n\t\toriginalError?: Error,\n\t\tcontext?: Partial<ErrorContext>\n\t): StreamingError {\n\t\treturn new StreamingError({\n\t\t\tcategory: ErrorCategory.ADDON,\n\t\t\tseverity: ErrorSeverity.MEDIUM,\n\t\t\tmessage,\n\t\t\toriginalError,\n\t\t\tcontext,\n\t\t\trecoverable: true,\n\t\t\tretryable: true,\n\t\t\tuserMessage: 'Content source temporarily unavailable. Please try again later.'\n\t\t});\n\t}\n\n\tpublic static createValidationError(\n\t\tmessage: string,\n\t\tcontext?: Partial<ErrorContext>\n\t): StreamingError {\n\t\treturn new StreamingError({\n\t\t\tcategory: ErrorCategory.VALIDATION,\n\t\t\tseverity: ErrorSeverity.LOW,\n\t\t\tmessage,\n\t\t\tcontext,\n\t\t\trecoverable: false,\n\t\t\tretryable: false,\n\t\t\tuserMessage: 'Invalid request. Please check your input and try again.'\n\t\t});\n\t}\n\n\tpublic static createPermissionError(\n\t\tmessage: string,\n\t\tcontext?: Partial<ErrorContext>\n\t): StreamingError {\n\t\treturn new StreamingError({\n\t\t\tcategory: ErrorCategory.PERMISSION,\n\t\t\tseverity: ErrorSeverity.HIGH,\n\t\t\tmessage,\n\t\t\tcontext,\n\t\t\trecoverable: false,\n\t\t\tretryable: false,\n\t\t\tuserMessage: 'Access denied. You may not have permission to view this content.'\n\t\t});\n\t}\n}\n\nexport type ErrorHandler = (error: StreamingError) => void;\nexport type ErrorRecoveryHandler = (error: StreamingError) => Promise<boolean>;\n","/**\n * Enhanced logging system for production-ready streaming application\n */\n\nimport type { LogEntry } from '$lib/types/api';\nimport { browser } from '$app/environment';\n\nexport enum LogLevel {\n\tDEBUG = 0,\n\tINFO = 1,\n\tWARN = 2,\n\tERROR = 3\n}\n\nexport interface LoggerOptions {\n\tlevel: LogLevel;\n\tenableConsole: boolean;\n\tenableRemote: boolean;\n\tremoteEndpoint?: string;\n\tbufferSize: number;\n\tflushInterval: number;\n\tsessionId?: string;\n\tuserId?: string;\n}\n\nexport class Logger {\n\tprivate options: LoggerOptions;\n\tprivate buffer: LogEntry[] = [];\n\tprivate flushTimer: ReturnType<typeof setInterval> | null = null;\n\tprivate sessionId: string;\n\n\tconstructor(options: Partial<LoggerOptions> = {}) {\n\t\tthis.options = {\n\t\t\tlevel: LogLevel.INFO,\n\t\t\tenableConsole: true,\n\t\t\tenableRemote: false,\n\t\t\tbufferSize: 100,\n\t\t\tflushInterval: 30000, // 30 seconds\n\t\t\t...options\n\t\t};\n\n\t\tthis.sessionId = options.sessionId || this.generateSessionId();\n\n\t\tif (this.options.enableRemote && browser) {\n\t\t\tthis.startFlushTimer();\n\t\t}\n\n\t\t// Capture unhandled errors\n\t\tif (browser) {\n\t\t\twindow.addEventListener('error', (event) => {\n\t\t\t\tthis.error('Unhandled error', {\n\t\t\t\t\tmessage: event.message,\n\t\t\t\t\tfilename: event.filename,\n\t\t\t\t\tlineno: event.lineno,\n\t\t\t\t\tcolno: event.colno,\n\t\t\t\t\terror: event.error?.stack\n\t\t\t\t});\n\t\t\t});\n\n\t\t\twindow.addEventListener('unhandledrejection', (event) => {\n\t\t\t\tthis.error('Unhandled promise rejection', {\n\t\t\t\t\treason: event.reason,\n\t\t\t\t\tpromise: event.promise\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate generateSessionId(): string {\n\t\treturn `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\t}\n\n\tprivate shouldLog(level: LogLevel): boolean {\n\t\treturn level >= this.options.level;\n\t}\n\n\tprivate createLogEntry(\n\t\tlevel: 'debug' | 'info' | 'warn' | 'error',\n\t\tmessage: string,\n\t\tcategory: string,\n\t\tmetadata?: Record<string, unknown>\n\t): LogEntry {\n\t\treturn {\n\t\t\tlevel,\n\t\t\tmessage,\n\t\t\ttimestamp: Date.now(),\n\t\t\tcategory,\n\t\t\tmetadata,\n\t\t\tuserId: this.options.userId,\n\t\t\tsessionId: this.sessionId\n\t\t};\n\t}\n\n\tprivate addToBuffer(entry: LogEntry): void {\n\t\tthis.buffer.push(entry);\n\n\t\tif (this.buffer.length >= this.options.bufferSize) {\n\t\t\tthis.flush();\n\t\t}\n\t}\n\n\tprivate async flush(): Promise<void> {\n\t\tif (this.buffer.length === 0 || !this.options.enableRemote || !this.options.remoteEndpoint) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst logsToSend = [...this.buffer];\n\t\tthis.buffer = [];\n\n\t\ttry {\n\t\t\tawait fetch(this.options.remoteEndpoint, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ logs: logsToSend })\n\t\t\t});\n\t\t} catch (error) {\n\t\t\t// Silently fail remote logging to avoid infinite loops\n\t\t\tif (this.options.enableConsole) {\n\t\t\t\tconsole.warn('Failed to send logs to remote endpoint:', error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate startFlushTimer(): void {\n\t\tthis.flushTimer = setInterval(() => {\n\t\t\tthis.flush();\n\t\t}, this.options.flushInterval);\n\t}\n\n\tprivate log(\n\t\tlevel: LogLevel,\n\t\tlevelName: 'debug' | 'info' | 'warn' | 'error',\n\t\tmessage: string,\n\t\tcategory: string,\n\t\tmetadata?: Record<string, unknown>\n\t): void {\n\t\tif (!this.shouldLog(level)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst entry = this.createLogEntry(levelName, message, category, metadata);\n\n\t\t// Console logging\n\t\tif (this.options.enableConsole && browser) {\n\t\t\tconst consoleMethod = console[levelName] || console.log;\n\t\t\tconst timestamp = new Date(entry.timestamp).toISOString();\n\t\t\tconst prefix = `[${timestamp}] [${levelName.toUpperCase()}] [${category}]`;\n\n\t\t\tif (metadata && Object.keys(metadata).length > 0) {\n\t\t\t\tconsoleMethod(`${prefix} ${message}`, metadata);\n\t\t\t} else {\n\t\t\t\tconsoleMethod(`${prefix} ${message}`);\n\t\t\t}\n\t\t}\n\n\t\t// Remote logging\n\t\tif (this.options.enableRemote) {\n\t\t\tthis.addToBuffer(entry);\n\t\t}\n\t}\n\n\tpublic debug(message: string, metadata?: Record<string, unknown>, category = 'APP'): void {\n\t\tthis.log(LogLevel.DEBUG, 'debug', message, category, metadata);\n\t}\n\n\tpublic info(message: string, metadata?: Record<string, unknown>, category = 'APP'): void {\n\t\tthis.log(LogLevel.INFO, 'info', message, category, metadata);\n\t}\n\n\tpublic warn(message: string, metadata?: Record<string, unknown>, category = 'APP'): void {\n\t\tthis.log(LogLevel.WARN, 'warn', message, category, metadata);\n\t}\n\n\tpublic error(message: string, metadata?: Record<string, unknown>, category = 'APP'): void {\n\t\tthis.log(LogLevel.ERROR, 'error', message, category, metadata);\n\t}\n\n\t// Category-specific logging methods\n\tpublic player(\n\t\tlevel: 'debug' | 'info' | 'warn' | 'error',\n\t\tmessage: string,\n\t\tmetadata?: Record<string, unknown>\n\t): void {\n\t\tthis[level](message, metadata, 'PLAYER');\n\t}\n\n\tpublic stream(\n\t\tlevel: 'debug' | 'info' | 'warn' | 'error',\n\t\tmessage: string,\n\t\tmetadata?: Record<string, unknown>\n\t): void {\n\t\tthis[level](message, metadata, 'STREAM');\n\t}\n\n\tpublic addon(\n\t\tlevel: 'debug' | 'info' | 'warn' | 'error',\n\t\tmessage: string,\n\t\tmetadata?: Record<string, unknown>\n\t): void {\n\t\tthis[level](message, metadata, 'ADDON');\n\t}\n\n\tpublic network(\n\t\tlevel: 'debug' | 'info' | 'warn' | 'error',\n\t\tmessage: string,\n\t\tmetadata?: Record<string, unknown>\n\t): void {\n\t\tthis[level](message, metadata, 'NETWORK');\n\t}\n\n\tpublic ui(\n\t\tlevel: 'debug' | 'info' | 'warn' | 'error',\n\t\tmessage: string,\n\t\tmetadata?: Record<string, unknown>\n\t): void {\n\t\tthis[level](message, metadata, 'UI');\n\t}\n\n\tpublic performance(\n\t\tlevel: 'debug' | 'info' | 'warn' | 'error',\n\t\tmessage: string,\n\t\tmetadata?: Record<string, unknown>\n\t): void {\n\t\tthis[level](message, metadata, 'PERFORMANCE');\n\t}\n\n\t// Utility methods\n\tpublic setLevel(level: LogLevel): void {\n\t\tthis.options.level = level;\n\t}\n\n\tpublic setUserId(userId: string): void {\n\t\tthis.options.userId = userId;\n\t}\n\n\tpublic getSessionId(): string {\n\t\treturn this.sessionId;\n\t}\n\n\tpublic async forceFlush(): Promise<void> {\n\t\tawait this.flush();\n\t}\n\n\tpublic destroy(): void {\n\t\tif (this.flushTimer) {\n\t\t\tclearInterval(this.flushTimer);\n\t\t\tthis.flushTimer = null;\n\t\t}\n\t\tthis.flush(); // Final flush\n\t}\n\n\t// Performance timing helpers\n\tpublic time(label: string): void {\n\t\tif (this.shouldLog(LogLevel.DEBUG)) {\n\t\t\tif (browser && console.time) {\n\t\t\t\tconsole.time(label);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic timeEnd(label: string, metadata?: Record<string, unknown>): void {\n\t\tif (this.shouldLog(LogLevel.DEBUG)) {\n\t\t\tif (browser && console.timeEnd) {\n\t\t\t\tconsole.timeEnd(label);\n\t\t\t}\n\t\t\tthis.debug(`Timer '${label}' finished`, metadata, 'PERFORMANCE');\n\t\t}\n\t}\n\n\t// Group logging for related operations\n\tpublic group(label: string): void {\n\t\tif (this.options.enableConsole && browser && console.group) {\n\t\t\tconsole.group(label);\n\t\t}\n\t\tthis.debug(`Started group: ${label}`, undefined, 'GROUP');\n\t}\n\n\tpublic groupEnd(label?: string): void {\n\t\tif (this.options.enableConsole && browser && console.groupEnd) {\n\t\t\tconsole.groupEnd();\n\t\t}\n\t\tif (label) {\n\t\t\tthis.debug(`Ended group: ${label}`, undefined, 'GROUP');\n\t\t}\n\t}\n}\n\n// Create default logger instance\nconst isDevelopment = import.meta.env?.DEV || false;\n\nexport const logger = new Logger({\n\tlevel: isDevelopment ? LogLevel.DEBUG : LogLevel.INFO,\n\tenableConsole: true,\n\tenableRemote: false, // Enable when you have a logging endpoint\n\tbufferSize: 50,\n\tflushInterval: 30000\n});\n\n// Convenience exports for direct use\nexport const debug = (message: string, metadata?: Record<string, unknown>, category?: string) =>\n\tlogger.debug(message, metadata, category);\nexport const info = (message: string, metadata?: Record<string, unknown>, category?: string) =>\n\tlogger.info(message, metadata, category);\nexport const warn = (message: string, metadata?: Record<string, unknown>, category?: string) =>\n\tlogger.warn(message, metadata, category);\nexport const error = (message: string, metadata?: Record<string, unknown>, category?: string) =>\n\tlogger.error(message, metadata, category);\n\n// Performance helpers\nexport const time = (label: string) => logger.time(label);\nexport const timeEnd = (label: string, metadata?: Record<string, unknown>) =>\n\tlogger.timeEnd(label, metadata);\n\n// Clean up on page unload\nif (browser) {\n\twindow.addEventListener('beforeunload', () => {\n\t\tlogger.destroy();\n\t});\n}\n","/**\n * Advanced caching system for API responses and data\n */\n\nimport type { CacheEntry, CacheOptions } from '$lib/types/api';\nimport { logger } from './logger';\n\nexport class Cache<T = unknown> {\n\tprivate cache = new Map<string, CacheEntry<T>>();\n\tprivate options: Required<CacheOptions>;\n\tprivate cleanupTimer: ReturnType<typeof setInterval> | null = null;\n\n\tconstructor(options: CacheOptions = {}) {\n\t\tthis.options = {\n\t\t\tttl: 5 * 60 * 1000, // 5 minutes default\n\t\t\tmaxSize: 50 * 1024 * 1024, // 50MB default\n\t\t\tmaxEntries: 1000,\n\t\t\tonEvict: () => {},\n\t\t\t...options\n\t\t};\n\n\t\t// Start cleanup timer\n\t\tthis.startCleanupTimer();\n\n\t\tlogger.debug(\n\t\t\t'Cache initialized',\n\t\t\t{\n\t\t\t\tttl: this.options.ttl,\n\t\t\t\tmaxSize: this.options.maxSize,\n\t\t\t\tmaxEntries: this.options.maxEntries\n\t\t\t},\n\t\t\t'CACHE'\n\t\t);\n\t}\n\n\tprivate startCleanupTimer(): void {\n\t\t// Clean up expired entries every 5 minutes\n\t\tthis.cleanupTimer = setInterval(\n\t\t\t() => {\n\t\t\t\tthis.cleanup();\n\t\t\t},\n\t\t\t5 * 60 * 1000\n\t\t);\n\t}\n\n\tprivate cleanup(): void {\n\t\tconst now = Date.now();\n\t\tlet removedCount = 0;\n\n\t\tfor (const [key, entry] of this.cache.entries()) {\n\t\t\tif (this.isExpired(entry, now)) {\n\t\t\t\tthis.options.onEvict(key, entry.data);\n\t\t\t\tthis.cache.delete(key);\n\t\t\t\tremovedCount++;\n\t\t\t}\n\t\t}\n\n\t\tif (removedCount > 0) {\n\t\t\tlogger.debug(`Cleaned up ${removedCount} expired cache entries`, undefined, 'CACHE');\n\t\t}\n\t}\n\n\tprivate isExpired(entry: CacheEntry<T>, now = Date.now()): boolean {\n\t\treturn now > entry.timestamp + entry.ttl;\n\t}\n\n\tprivate enforceLimit(): void {\n\t\t// Remove oldest entries if we exceed max entries\n\t\twhile (this.cache.size > this.options.maxEntries) {\n\t\t\tconst oldestKey = this.cache.keys().next().value;\n\t\t\tif (oldestKey) {\n\t\t\t\tconst entry = this.cache.get(oldestKey);\n\t\t\t\tif (entry) {\n\t\t\t\t\tthis.options.onEvict(oldestKey, entry.data);\n\t\t\t\t}\n\t\t\t\tthis.cache.delete(oldestKey);\n\t\t\t}\n\t\t}\n\n\t\t// Check total size if size tracking is enabled\n\t\tif (this.getTotalSize() > this.options.maxSize) {\n\t\t\tthis.evictLRU();\n\t\t}\n\t}\n\n\tprivate getTotalSize(): number {\n\t\tlet totalSize = 0;\n\t\tfor (const entry of this.cache.values()) {\n\t\t\ttotalSize += entry.size || 0;\n\t\t}\n\t\treturn totalSize;\n\t}\n\n\tprivate evictLRU(): void {\n\t\t// Simple LRU: remove oldest entries until under size limit\n\t\tconst entries = Array.from(this.cache.entries()).sort(\n\t\t\t(a, b) => a[1].timestamp - b[1].timestamp\n\t\t);\n\n\t\tfor (const [key, entry] of entries) {\n\t\t\tthis.options.onEvict(key, entry.data);\n\t\t\tthis.cache.delete(key);\n\n\t\t\tif (this.getTotalSize() <= this.options.maxSize) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate calculateSize(data: T): number {\n\t\ttry {\n\t\t\treturn JSON.stringify(data).length * 2; // Rough estimate (UTF-16)\n\t\t} catch {\n\t\t\treturn 1024; // Default 1KB for non-serializable objects\n\t\t}\n\t}\n\n\tpublic set(key: string, data: T, customTtl?: number): void {\n\t\tconst ttl = customTtl || this.options.ttl;\n\t\tconst size = this.calculateSize(data);\n\n\t\tconst entry: CacheEntry<T> = {\n\t\t\tkey,\n\t\t\tdata,\n\t\t\ttimestamp: Date.now(),\n\t\t\tttl,\n\t\t\tsize\n\t\t};\n\n\t\t// Remove existing entry if it exists\n\t\tif (this.cache.has(key)) {\n\t\t\tconst oldEntry = this.cache.get(key);\n\t\t\tif (oldEntry) {\n\t\t\t\tthis.options.onEvict(key, oldEntry.data);\n\t\t\t}\n\t\t}\n\n\t\tthis.cache.set(key, entry);\n\t\tthis.enforceLimit();\n\n\t\tlogger.debug(\n\t\t\t`Cached data for key: ${key}`,\n\t\t\t{\n\t\t\t\tsize,\n\t\t\t\tttl,\n\t\t\t\ttotalEntries: this.cache.size\n\t\t\t},\n\t\t\t'CACHE'\n\t\t);\n\t}\n\n\tpublic get(key: string): T | null {\n\t\tconst entry = this.cache.get(key);\n\n\t\tif (!entry) {\n\t\t\tlogger.debug(`Cache miss for key: ${key}`, undefined, 'CACHE');\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.isExpired(entry)) {\n\t\t\tthis.options.onEvict(key, entry.data);\n\t\t\tthis.cache.delete(key);\n\t\t\tlogger.debug(`Cache expired for key: ${key}`, undefined, 'CACHE');\n\t\t\treturn null;\n\t\t}\n\n\t\t// Update timestamp for LRU\n\t\tentry.timestamp = Date.now();\n\n\t\tlogger.debug(`Cache hit for key: ${key}`, undefined, 'CACHE');\n\t\treturn entry.data;\n\t}\n\n\tpublic has(key: string): boolean {\n\t\tconst entry = this.cache.get(key);\n\t\tif (!entry) return false;\n\n\t\tif (this.isExpired(entry)) {\n\t\t\tthis.options.onEvict(key, entry.data);\n\t\t\tthis.cache.delete(key);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic delete(key: string): boolean {\n\t\tconst entry = this.cache.get(key);\n\t\tif (entry) {\n\t\t\tthis.options.onEvict(key, entry.data);\n\t\t}\n\t\treturn this.cache.delete(key);\n\t}\n\n\tpublic clear(): void {\n\t\tfor (const [key, entry] of this.cache.entries()) {\n\t\t\tthis.options.onEvict(key, entry.data);\n\t\t}\n\t\tthis.cache.clear();\n\t\tlogger.info('Cache cleared', undefined, 'CACHE');\n\t}\n\n\tpublic getStats() {\n\t\tconst now = Date.now();\n\t\tlet expiredCount = 0;\n\t\tlet totalSize = 0;\n\n\t\tfor (const entry of this.cache.values()) {\n\t\t\tif (this.isExpired(entry, now)) {\n\t\t\t\texpiredCount++;\n\t\t\t}\n\t\t\ttotalSize += entry.size || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttotalEntries: this.cache.size,\n\t\t\texpiredEntries: expiredCount,\n\t\t\tactiveEntries: this.cache.size - expiredCount,\n\t\t\ttotalSize,\n\t\t\tmaxSize: this.options.maxSize,\n\t\t\tmaxEntries: this.options.maxEntries,\n\t\t\tutilizationPercent: (totalSize / this.options.maxSize) * 100\n\t\t};\n\t}\n\n\tpublic destroy(): void {\n\t\tif (this.cleanupTimer) {\n\t\t\tclearInterval(this.cleanupTimer);\n\t\t\tthis.cleanupTimer = null;\n\t\t}\n\t\tthis.clear();\n\t\tlogger.debug('Cache destroyed', undefined, 'CACHE');\n\t}\n}\n\n// Cache implementations for different data types\nexport class RequestCache extends Cache<unknown> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tttl: 5 * 60 * 1000, // 5 minutes for API requests\n\t\t\tmaxEntries: 500,\n\t\t\tmaxSize: 25 * 1024 * 1024 // 25MB\n\t\t});\n\t}\n\n\tpublic cacheRequest(\n\t\turl: string,\n\t\tparams: Record<string, unknown>,\n\t\tresponse: unknown,\n\t\tttl?: number\n\t): void {\n\t\tconst key = this.createRequestKey(url, params);\n\t\tthis.set(key, response, ttl);\n\t}\n\n\tpublic getRequest(url: string, params: Record<string, unknown>): unknown | null {\n\t\tconst key = this.createRequestKey(url, params);\n\t\treturn this.get(key);\n\t}\n\n\tprivate createRequestKey(url: string, params: Record<string, unknown>): string {\n\t\tconst sortedParams = Object.keys(params)\n\t\t\t.sort()\n\t\t\t.reduce(\n\t\t\t\t(result, key) => {\n\t\t\t\t\tresult[key] = params[key];\n\t\t\t\t\treturn result;\n\t\t\t\t},\n\t\t\t\t{} as Record<string, unknown>\n\t\t\t);\n\n\t\treturn `${url}:${JSON.stringify(sortedParams)}`;\n\t}\n}\n\nexport class MetadataCache extends Cache<unknown> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tttl: 30 * 60 * 1000, // 30 minutes for metadata\n\t\t\tmaxEntries: 1000,\n\t\t\tmaxSize: 50 * 1024 * 1024 // 50MB\n\t\t});\n\t}\n}\n\nexport class StreamCache extends Cache<unknown> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tttl: 10 * 60 * 1000, // 10 minutes for stream data\n\t\t\tmaxEntries: 200,\n\t\t\tmaxSize: 10 * 1024 * 1024 // 10MB\n\t\t});\n\t}\n}\n\n// Global cache instances\nexport const requestCache = new RequestCache();\nexport const metadataCache = new MetadataCache();\nexport const streamCache = new StreamCache();\n\n// Utility functions\nexport function createCacheKey(...parts: (string | number | boolean)[]): string {\n\treturn parts.map((part) => String(part)).join(':');\n}\n\nexport async function withCache<T>(\n\tcache: Cache<T>,\n\tkey: string,\n\tfetcher: () => Promise<T>,\n\tttl?: number\n): Promise<T> {\n\t// Try to get from cache first\n\tconst cached = cache.get(key);\n\tif (cached !== null) {\n\t\treturn cached;\n\t}\n\n\t// Fetch and cache\n\tlogger.debug(`Fetching data for cache key: ${key}`, undefined, 'CACHE');\n\tconst data = await fetcher();\n\tcache.set(key, data, ttl);\n\treturn data;\n}\n\n// Clean up caches on page unload\nif (typeof window !== 'undefined') {\n\twindow.addEventListener('beforeunload', () => {\n\t\trequestCache.destroy();\n\t\tmetadataCache.destroy();\n\t\tstreamCache.destroy();\n\t});\n}\n","import { browser } from '$app/environment';\nimport { config, filterStreamsByQuality } from '$lib/config';\nimport { StreamingError, ErrorCategory } from '$lib/types/errors';\nimport { logger } from '$lib/utils/logger';\nimport {\n\trequestCache,\n\tmetadataCache,\n\tstreamCache,\n\twithCache,\n\tcreateCacheKey\n} from '$lib/utils/cache';\n\nexport interface StremioManifest {\n\tid: string;\n\tname: string;\n\tdescription: string;\n\tversion: string;\n\tresources: (string | { name: string; types?: string[]; idPrefixes?: string[] })[];\n\ttypes: string[];\n\tcatalogs?: Array<{\n\t\ttype: string;\n\t\tid: string;\n\t\tname: string;\n\t}>;\n\tidPrefixes?: string[];\n}\n\nexport interface StremioMetaPreview {\n\tid: string;\n\ttype: string;\n\tname: string;\n\tposter?: string;\n\tbackground?: string;\n\tlogo?: string;\n\tdescription?: string;\n\tgenre?: string[];\n\tyear?: string;\n\timdbRating?: string;\n\timdb_id?: string;\n\tmoviedb_id?: number;\n\truntime?: string;\n\tcountry?: string;\n\treleased?: string;\n\tcast?: string[];\n\tdirector?: string[];\n}\n\nexport interface StremioMeta extends StremioMetaPreview {\n\tvideos?: Array<{\n\t\tid: string;\n\t\ttitle: string;\n\t\treleased: string;\n\t\tseason?: number;\n\t\tepisode?: number;\n\t}>;\n\tdirector?: string[];\n\tcast?: string[];\n\truntime?: string;\n\tcountry?: string;\n\tlanguage?: string;\n}\n\nexport interface StremioStream {\n\turl: string;\n\ttitle?: string;\n\tname?: string;\n\tdescription?: string;\n\tsubtitles?: Array<{\n\t\tid: string;\n\t\turl: string;\n\t\tlang: string;\n\t}>;\n}\n\nexport interface StremioAddon {\n\tmanifest: StremioManifest;\n\tbaseUrl: string;\n}\n\nexport class StremioService {\n\tprivate addons: StremioAddon[] = [];\n\tprivate initialized = false;\n\tprivate readonly requestTimeout = 10000; // 10 seconds\n\tprivate readonly maxRetries = 3;\n\n\tasync addAddon(manifestUrl: string): Promise<void> {\n\t\ttry {\n\t\t\t// Convert stremio:// URLs to https://\n\t\t\tlet httpUrl = manifestUrl.replace('stremio://', 'https://');\n\n\t\t\t// Decode URL-encoded characters to prevent routing issues\n\t\t\thttpUrl = decodeURIComponent(httpUrl);\n\n\t\t\tlogger.addon('info', `Fetching addon manifest from: ${httpUrl}`);\n\n\t\t\t// Use cache for manifest requests\n\t\t\tconst cacheKey = createCacheKey('manifest', httpUrl);\n\t\t\tconst manifest = await withCache(\n\t\t\t\tmetadataCache,\n\t\t\t\tcacheKey,\n\t\t\t\t() => this.fetchWithTimeout(httpUrl),\n\t\t\t\t30 * 60 * 1000 // 30 minutes cache\n\t\t\t);\n\n\t\t\tlogger.addon('debug', `Manifest for ${httpUrl}`, { manifest });\n\t\t\tconst baseUrl = httpUrl.replace('/manifest.json', '');\n\n\t\t\tthis.addons.push({ manifest, baseUrl });\n\t\t\tlogger.addon('info', `Added addon: ${manifest.name} (${manifest.id})`, {\n\t\t\t\tbaseUrl,\n\t\t\t\ttypes: manifest.types,\n\t\t\t\tcatalogCount: manifest.catalogs?.length || 0\n\t\t\t});\n\n\t\t\t// Check for URL encoding issues in baseUrl\n\t\t\tif (baseUrl.includes('%') || baseUrl.includes('|')) {\n\t\t\t\tlogger.addon('warn', `BaseURL contains special characters: ${baseUrl}`, { baseUrl });\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconst streamingError = StreamingError.createAddonError(\n\t\t\t\t`Failed to add addon from ${manifestUrl}`,\n\t\t\t\terror instanceof Error ? error : new Error(String(error)),\n\t\t\t\t{ metadata: { manifestUrl } }\n\t\t\t);\n\t\t\tlogger.addon('error', streamingError.message, { errorId: streamingError.errorId });\n\t\t\tthrow streamingError;\n\t\t}\n\t}\n\n\tprivate async fetchWithTimeout(url: string, timeout = this.requestTimeout): Promise<any> {\n\t\tconst controller = new AbortController();\n\t\tconst timeoutId = setTimeout(() => controller.abort(), timeout);\n\n\t\ttry {\n\t\t\tconst response = await fetch(url, {\n\t\t\t\tsignal: controller.signal,\n\t\t\t\theaders: {\n\t\t\t\t\t'User-Agent': 'HighSeas/1.0',\n\t\t\t\t\tAccept: 'application/json'\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tclearTimeout(timeoutId);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow StreamingError.createNetworkError(\n\t\t\t\t\t`HTTP ${response.status}: ${response.statusText}`,\n\t\t\t\t\tundefined,\n\t\t\t\t\t{ metadata: { url, status: response.status, statusText: response.statusText } }\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn await response.json();\n\t\t} catch (error) {\n\t\t\tclearTimeout(timeoutId);\n\n\t\t\tif (error instanceof Error && error.name === 'AbortError') {\n\t\t\t\tthrow StreamingError.createNetworkError(`Request timeout after ${timeout}ms`, error, {\n\t\t\t\t\tmetadata: { url, timeout }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async retryRequest<T>(\n\t\toperation: () => Promise<T>,\n\t\tretries = this.maxRetries\n\t): Promise<T> {\n\t\tlet lastError: Error = new Error('No attempts made');\n\n\t\tfor (let attempt = 1; attempt <= retries; attempt++) {\n\t\t\ttry {\n\t\t\t\treturn await operation();\n\t\t\t} catch (error) {\n\t\t\t\tlastError = error instanceof Error ? error : new Error(String(error));\n\n\t\t\t\tif (attempt === retries) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Exponential backoff\n\t\t\t\tconst delay = Math.min(1000 * Math.pow(2, attempt - 1), 10000);\n\t\t\t\tlogger.addon(\n\t\t\t\t\t'warn',\n\t\t\t\t\t`Request failed, retrying in ${delay}ms (attempt ${attempt}/${retries})`,\n\t\t\t\t\t{\n\t\t\t\t\t\terror: lastError.message\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tawait new Promise((resolve) => setTimeout(resolve, delay));\n\t\t\t}\n\t\t}\n\n\t\tthrow lastError;\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tif (this.initialized) return;\n\n\t\tconsole.log('Initializing Stremio service...');\n\t\tconsole.log('Pre-installed addons:', config.preInstalledAddons);\n\t\tconsole.log('Additional addons:', config.defaultAddons);\n\n\t\t// Debug: Check for URL encoding issues in addon URLs\n\t\tconfig.preInstalledAddons.forEach((url, i) => {\n\t\t\tif (url.includes('%')) {\n\t\t\t\tconsole.log(`📡 Addon ${i} has encoded chars: ${url}`);\n\t\t\t}\n\t\t});\n\n\t\t// Load pre-installed addons first\n\t\tfor (const addonUrl of config.preInstalledAddons) {\n\t\t\ttry {\n\t\t\t\tawait this.addAddon(addonUrl);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn(`Failed to load pre-installed addon ${addonUrl}:`, error);\n\t\t\t}\n\t\t}\n\n\t\t// Load additional addons from configuration\n\t\tfor (const addonUrl of config.defaultAddons) {\n\t\t\ttry {\n\t\t\t\tawait this.addAddon(addonUrl);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn(`Failed to load configured addon ${addonUrl}:`, error);\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(`Initialized with ${this.addons.length} addons`);\n\t\tthis.initialized = true;\n\t}\n\n\tgetAddons(): StremioAddon[] {\n\t\treturn this.addons;\n\t}\n\n\tasync getCatalog(\n\t\ttype: string,\n\t\tid: string,\n\t\textra?: Record<string, string>\n\t): Promise<StremioMetaPreview[]> {\n\t\tconst results: StremioMetaPreview[] = [];\n\n\t\tfor (const addon of this.addons) {\n\t\t\t// Check if addon provides catalogs (handle both string and object resources)\n\t\t\tconst hasCatalogResource = addon.manifest.resources.some((r) =>\n\t\t\t\ttypeof r === 'string' ? r === 'catalog' : r.name === 'catalog'\n\t\t\t);\n\t\t\tif (!hasCatalogResource) continue;\n\t\t\tif (!addon.manifest.types.includes(type)) continue;\n\n\t\t\tconst catalogExists = addon.manifest.catalogs?.some(\n\t\t\t\t(cat) => cat.type === type && cat.id === id\n\t\t\t);\n\t\t\tif (!catalogExists) {\n\t\t\t\tconsole.log(`   ⏭️ ${addon.manifest.name} doesn't have catalog ${type}/${id}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tlet url = `${addon.baseUrl}/catalog/${type}/${id}.json`;\n\n\t\t\t\tif (extra && Object.keys(extra).length > 0) {\n\t\t\t\t\tconst params = new URLSearchParams(extra);\n\t\t\t\t\turl += `?${params.toString()}`;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(`📡 Fetching catalog from ${addon.manifest.name}: ${url}`);\n\t\t\t\tconst response = await fetch(url);\n\t\t\t\tif (!response.ok) continue;\n\n\t\t\t\tconst data = await response.json();\n\t\t\t\tconsole.log(`📦 ${addon.manifest.name} returned ${data.metas?.length || 0} items`);\n\t\t\t\tif (data.metas && Array.isArray(data.metas)) {\n\t\t\t\t\t// Transform the data to ensure consistent id field\n\t\t\t\t\tconst transformedMetas = data.metas\n\t\t\t\t\t\t.map((meta: any) => ({\n\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\tid: meta.id || meta.imdb_id || meta.moviedb_id?.toString() || 'unknown'\n\t\t\t\t\t\t}))\n\t\t\t\t\t\t.filter((meta: any) => {\n\t\t\t\t\t\t\t// Filter out invalid IDs\n\t\t\t\t\t\t\tconst id = meta.id;\n\t\t\t\t\t\t\tif (!id || id === 'unknown') return false;\n\t\t\t\t\t\t\tif (id.includes('%') || id.includes('|') || id.includes('/')) {\n\t\t\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\t\t`🚫 ${addon.manifest.name} returned content with invalid ID: ${id} - ${meta.name}`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconsole.warn(`   Full meta object:`, meta);\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (id.length > 50) {\n\t\t\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\t\t`🚫 ${addon.manifest.name} returned content with suspiciously long ID: ${id} - ${meta.name}`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconsole.warn(`   Full meta object:`, meta);\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tresults.push(...transformedMetas);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(`Failed to fetch catalog from ${addon.manifest.name}:`, error);\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n\n\tasync getMeta(type: string, id: string): Promise<StremioMeta | null> {\n\t\tconsole.log(`🔍 Searching for metadata for ${type}/${id}`);\n\n\t\tfor (const addon of this.addons) {\n\t\t\tif (!addon.manifest.resources.includes('meta')) continue;\n\t\t\tif (!addon.manifest.types.includes(type)) continue;\n\n\t\t\t// Check ID prefixes if specified\n\t\t\tif (addon.manifest.idPrefixes && addon.manifest.idPrefixes.length > 0) {\n\t\t\t\tconst hasValidPrefix = addon.manifest.idPrefixes.some((prefix) => id.startsWith(prefix));\n\t\t\t\tif (!hasValidPrefix) continue;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst metaUrl = `${addon.baseUrl}/meta/${type}/${id}.json`;\n\t\t\t\tconsole.log(`🌐 Fetching meta from ${addon.manifest.name}: ${metaUrl}`);\n\n\t\t\t\tconst response = await fetch(metaUrl);\n\t\t\t\tif (!response.ok) continue;\n\n\t\t\t\tconst data = await response.json();\n\t\t\t\tif (data.meta) {\n\t\t\t\t\tconsole.log(`✅ Found metadata from ${addon.manifest.name}:`, data.meta);\n\t\t\t\t\treturn data.meta;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(`Failed to fetch meta from ${addon.manifest.name}:`, error);\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(`❌ No metadata found for ${type}/${id}`);\n\t\treturn null;\n\t}\n\n\tasync getStreams(type: string, id: string): Promise<StremioStream[]> {\n\t\tconst results: StremioStream[] = [];\n\n\t\tconsole.log(`🔍 Searching for streams for ${type}/${id}`);\n\t\tconsole.log(`📦 Available addons: ${this.addons.length}`);\n\n\t\t// Debug: Show all addon details\n\t\tthis.addons.forEach((addon) => {\n\t\t\tconsole.log(`  📱 ${addon.manifest.name}:`);\n\n\t\t\t// Handle both string array and object array for resources\n\t\t\tconst resources = addon.manifest.resources.map((r) =>\n\t\t\t\ttypeof r === 'string' ? r : r.name || 'unknown'\n\t\t\t);\n\t\t\tconsole.log(`     - Resources: ${resources.join(', ')}`);\n\t\t\tconsole.log(`     - Types: ${addon.manifest.types.join(', ')}`);\n\t\t\tconsole.log(`     - ID Prefixes: ${addon.manifest.idPrefixes?.join(', ') || 'none'}`);\n\t\t\tconsole.log(`     - BaseURL: ${addon.baseUrl}`);\n\t\t});\n\n\t\tfor (const addon of this.addons) {\n\t\t\tconsole.log(`\\n🔌 Checking addon: ${addon.manifest.name}`);\n\n\t\t\t// Handle both string array and object array for resources\n\t\t\tconst resources = addon.manifest.resources.map((r) =>\n\t\t\t\ttypeof r === 'string' ? r : r.name || 'unknown'\n\t\t\t);\n\t\t\tconsole.log(`   - Resources: ${resources.join(', ')}`);\n\t\t\tconsole.log(`   - Types: ${addon.manifest.types.join(', ')}`);\n\t\t\tconsole.log(`   - ID Prefixes: ${addon.manifest.idPrefixes?.join(', ') || 'none'}`);\n\n\t\t\t// Check if addon provides streams (handle both string and object resources)\n\t\t\tconst hasStreamResource = addon.manifest.resources.some((r) =>\n\t\t\t\ttypeof r === 'string' ? r === 'stream' : r.name === 'stream'\n\t\t\t);\n\n\t\t\tif (!hasStreamResource) {\n\t\t\t\tconsole.log(`   ❌ Addon doesn't provide streams`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!addon.manifest.types.includes(type)) {\n\t\t\t\tconsole.log(`   ❌ Addon doesn't support type: ${type}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check ID prefixes - check both manifest level and resource level\n\t\t\tlet idPrefixes = addon.manifest.idPrefixes || [];\n\n\t\t\t// Also check if the stream resource has its own idPrefixes\n\t\t\tconst streamResource = addon.manifest.resources.find(\n\t\t\t\t(r) => typeof r === 'object' && r.name === 'stream'\n\t\t\t);\n\t\t\tif (streamResource && typeof streamResource === 'object' && streamResource.idPrefixes) {\n\t\t\t\tidPrefixes = [...idPrefixes, ...streamResource.idPrefixes];\n\t\t\t}\n\n\t\t\tif (idPrefixes.length > 0) {\n\t\t\t\tconst hasValidPrefix = idPrefixes.some((prefix) => id.startsWith(prefix));\n\t\t\t\tif (!hasValidPrefix) {\n\t\t\t\t\tconsole.log(`   ❌ ID ${id} doesn't match required prefixes: ${idPrefixes.join(', ')}`);\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(`   ✅ ID ${id} matches prefix requirements`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst streamUrl = `${addon.baseUrl}/stream/${type}/${id}.json`;\n\t\t\t\tconsole.log(`   🌐 Fetching: ${streamUrl}`);\n\n\t\t\t\tconst response = await fetch(streamUrl);\n\t\t\t\tconsole.log(`   📡 Response status: ${response.status} ${response.statusText}`);\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tconsole.log(`   ❌ Failed with status ${response.status}`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\t\t\t\tconsole.log(`   📄 Response data:`, data);\n\n\t\t\t\tif (data.streams && Array.isArray(data.streams)) {\n\t\t\t\t\tconsole.log(`   ✅ Found ${data.streams.length} streams`);\n\t\t\t\t\t// Filter streams by quality before adding to results\n\t\t\t\t\tconst filteredStreams = filterStreamsByQuality(data.streams);\n\t\t\t\t\tconsole.log(`   🎯 After quality filtering: ${filteredStreams.length} streams`);\n\n\t\t\t\t\tresults.push(...filteredStreams);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(`   ❌ No streams in response`);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(`   💥 Error fetching streams from ${addon.manifest.name}:`, error);\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(`\\n🎯 Total streams found: ${results.length}`);\n\t\treturn results;\n\t}\n\n\tasync search(query: string, type?: string): Promise<StremioMetaPreview[]> {\n\t\tconst results: StremioMetaPreview[] = [];\n\t\tconst seen = new Set<string>(); // Deduplicate results\n\n\t\tconsole.log(`🔍 Searching for: \"${query}\"${type ? ` (type: ${type})` : ''}`);\n\t\tconsole.log(`📦 Available addons: ${this.addons.length}`);\n\n\t\tfor (const addon of this.addons) {\n\t\t\t// Check if addon supports catalog resource (handle both string and object format)\n\t\t\tconst hasCatalogResource = addon.manifest.resources.some((r) =>\n\t\t\t\ttypeof r === 'string' ? r === 'catalog' : r.name === 'catalog'\n\t\t\t);\n\n\t\t\tif (!hasCatalogResource) {\n\t\t\t\tconsole.log(`⏭️ ${addon.manifest.name} doesn't support catalog search`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst searchableCatalogs = addon.manifest.catalogs?.filter(\n\t\t\t\t(cat) => !type || cat.type === type\n\t\t\t);\n\n\t\t\tif (!searchableCatalogs?.length) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t`⏭️ ${addon.manifest.name} has no searchable catalogs${type ? ` for type ${type}` : ''}`\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconsole.log(`🔍 Searching ${addon.manifest.name} (${searchableCatalogs.length} catalogs)`);\n\n\t\t\tfor (const catalog of searchableCatalogs) {\n\t\t\t\ttry {\n\t\t\t\t\tconst searchUrl = `${addon.baseUrl}/catalog/${catalog.type}/${catalog.id}.json?search=${encodeURIComponent(query)}`;\n\t\t\t\t\tconsole.log(`   📡 ${catalog.name}: ${searchUrl}`);\n\n\t\t\t\t\tconst response = await fetch(searchUrl);\n\n\t\t\t\t\tif (!response.ok) {\n\t\t\t\t\t\tconsole.log(`   ❌ ${catalog.name}: HTTP ${response.status}`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst data = await response.json();\n\n\t\t\t\t\tif (data.metas && Array.isArray(data.metas)) {\n\t\t\t\t\t\tconsole.log(`   ✅ ${catalog.name}: Found ${data.metas.length} results`);\n\n\t\t\t\t\t\t// Filter and deduplicate results\n\t\t\t\t\t\tconst newResults = data.metas\n\t\t\t\t\t\t\t.map((meta: any) => ({\n\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\tid: meta.id || meta.imdb_id || meta.moviedb_id?.toString() || 'unknown'\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t.filter((meta: any) => {\n\t\t\t\t\t\t\t\t// Skip if already seen\n\t\t\t\t\t\t\t\tif (seen.has(meta.id)) return false;\n\n\t\t\t\t\t\t\t\t// Skip invalid IDs\n\t\t\t\t\t\t\t\tif (!meta.id || meta.id === 'unknown') return false;\n\n\t\t\t\t\t\t\t\t// Skip malformed IDs\n\t\t\t\t\t\t\t\tif (meta.id.includes('%') || meta.id.includes('|') || meta.id.length > 50) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tseen.add(meta.id);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\tresults.push(...newResults);\n\t\t\t\t\t\tconsole.log(`   📝 Added ${newResults.length} unique results`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(`   ❌ ${catalog.name}: No metas in response`);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(`   💥 ${catalog.name}: Search failed`, error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(`🎯 Search complete: ${results.length} total results for \"${query}\"`);\n\t\treturn results;\n\t}\n}\n\n// Global service instance\nexport const stremioService = new StremioService();\n"],"names":["browser","BROWSER","TORRENTIO_CONFIG","buildTorrentioUrl","qualityFilter","debridOptions","providers","params","config","filterStreamsByQuality","streams","stream","title","description","streamText","quality","hasAnyQualityMarker","text","marker","ErrorCategory","ErrorSeverity","StreamingError","options","__publicField","message","originalError","context","Logger","event","level","category","metadata","entry","logsToSend","levelName","consoleMethod","prefix","userId","label","logger","Cache","now","removedCount","key","oldestKey","totalSize","entries","a","b","data","customTtl","ttl","size","oldEntry","expiredCount","RequestCache","url","response","sortedParams","result","MetadataCache","StreamCache","requestCache","metadataCache","streamCache","createCacheKey","parts","part","withCache","cache","fetcher","cached","StremioService","manifestUrl","httpUrl","cacheKey","manifest","baseUrl","error","streamingError","timeout","controller","timeoutId","operation","retries","lastError","attempt","delay","resolve","i","addonUrl","type","id","extra","results","addon","r","cat","transformedMetas","meta","metaUrl","idPrefixes","streamResource","streamUrl","filteredStreams","query","seen","searchableCatalogs","catalog","searchUrl","newResults","stremioService"],"mappings":"sMAGO,MAAMA,EAAUC,ECOjBC,EAAmB,CACxB,QAAS,sBAIT,eAAgB,CAAC,UAAW,SAAU,OAAQ,QAAS,MAAO,MAAO,SAAS,EAC9E,cAAe,CAAC,kBAAmB,WAAW,EAE9C,UAAW,CAAC,MAAO,OAAQ,QAAS,eAAgB,QAAQ,CAI7D,EAIA,SAASC,GAA4B,CAEpC,MAAMC,EAAgB,iBAAiBF,EAAiB,eAAe,KAAK,GAAG,CAAC,GAC1EG,EAAgB,iBAAiBH,EAAiB,cAAc,KAAK,GAAG,CAAC,GACzEI,EAAY,aAAaJ,EAAiB,UAAU,KAAK,GAAG,CAAC,GAK7DK,EAAS,CAACH,EAAeE,EAAWD,EAHvB,gCAGgD,EAAE,KAAK,GAAG,EAE7E,MAAO,aAAaH,EAAiB,OAAO,IAAIK,CAAM,gBACvD,CAEO,MAAMC,EAAS,CAErB,mBAAoB,CACnB,6CACA,0CAEAL,EAAA,EACA,2CAAA,EAID,cAAe,CAAA,EAGf,cAAe,CACd,SAAUD,EAAiB,eAC3B,QAAS,CAAC,QAAS,QAAS,KAAM,MAAO,MAAO,QAAS,OAAO,CAAA,CAQlE,EAGO,SAASO,EAAuBC,EAAuB,CAC7D,MAAI,CAACA,GAAWA,EAAQ,SAAW,EAAUA,EAEtCA,EAAQ,OAAQC,GAAW,CACjC,MAAMC,GAASD,EAAO,OAASA,EAAO,MAAQ,IAAI,YAAA,EAC5CE,GAAeF,EAAO,aAAe,IAAI,YAAA,EACzCG,EAAa,GAAGF,CAAK,IAAIC,CAAW,GAQ1C,OAL2BL,EAAO,cAAc,SAAS,KAAMO,GAC9DD,EAAW,SAASC,EAAQ,aAAa,CAAA,EAMlC,IAIeP,EAAO,cAAc,QAAQ,KAAMO,GACzDD,EAAW,SAASC,EAAQ,aAAa,CAAA,GAKpB,CAACC,EAAoBF,CAAU,EAC7C,GAKT,CAAC,CACF,CAGA,SAASE,EAAoBC,EAAuB,CAYnD,MAXuB,CACtB,GAAGT,EAAO,cAAc,SACxB,GAAGA,EAAO,cAAc,QACxB,OACA,KACA,SACA,SACA,QACA,QAAA,EAGqB,KAAMU,GAAWD,EAAK,SAASC,EAAO,YAAA,CAAa,CAAC,CAC3E,CChHO,IAAKC,GAAAA,IACXA,EAAA,QAAU,UACVA,EAAA,OAAS,SACTA,EAAA,OAAS,SACTA,EAAA,MAAQ,QACRA,EAAA,WAAa,aACbA,EAAA,WAAa,aACbA,EAAA,QAAU,UAPCA,IAAAA,GAAA,CAAA,CAAA,EAUAC,GAAAA,IACXA,EAAA,IAAM,MACNA,EAAA,OAAS,SACTA,EAAA,KAAO,OACPA,EAAA,SAAW,WAJAA,IAAAA,GAAA,CAAA,CAAA,EA4BL,MAAMC,UAAuB,KAAM,CAWzC,YAAYC,EAAgC,CAC3C,MAAMA,EAAQ,OAAO,EAXNC,EAAA,iBACAA,EAAA,iBACAA,EAAA,sBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,gBAIf,KAAK,KAAO,iBAEZ,KAAK,SAAWD,EAAQ,SACxB,KAAK,SAAWA,EAAQ,SACxB,KAAK,cAAgBA,EAAQ,cAC7B,KAAK,YAAcA,EAAQ,YAC3B,KAAK,WAAaA,EAAQ,YAAc,GACxC,KAAK,UAAYA,EAAQ,WAAa,GAEtC,KAAK,QAAU,CACd,UAAW,KAAK,IAAA,EAChB,UAAW,OAAO,UAAc,IAAc,UAAU,UAAY,OACpE,IAAK,OAAO,OAAW,IAAc,OAAO,SAAS,KAAO,OAC5D,GAAGA,EAAQ,OAAA,EAGZ,KAAK,YAAcA,EAAQ,aAAe,KAAK,sBAAA,EAC/C,KAAK,QAAU,KAAK,gBAAA,EAGhB,MAAM,mBACT,MAAM,kBAAkB,KAAMD,CAAc,CAE9C,CAEQ,uBAAgC,CACvC,OAAQ,KAAK,SAAA,CACZ,IAAK,UACJ,MAAO,2FACR,IAAK,SACJ,MAAO,+EACR,IAAK,SACJ,MAAO,2FACR,IAAK,QACJ,MAAO,mEACR,IAAK,aACJ,MAAO,mEACR,IAAK,aACJ,MAAO,0DACR,QACC,MAAO,iDAAA,CAEV,CAEQ,iBAA0B,CACjC,MAAO,GAAG,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAAC,EACjF,CAEO,QAAS,CACf,MAAO,CACN,QAAS,KAAK,QACd,KAAM,KAAK,KACX,QAAS,KAAK,QACd,YAAa,KAAK,YAClB,SAAU,KAAK,SACf,SAAU,KAAK,SACf,YAAa,KAAK,YAClB,WAAY,KAAK,WACjB,UAAW,KAAK,UAChB,QAAS,KAAK,QACd,MAAO,KAAK,MACZ,cAAe,KAAK,cACjB,CACA,KAAM,KAAK,cAAc,KACzB,QAAS,KAAK,cAAc,QAC5B,MAAO,KAAK,cAAc,KAAA,EAE1B,MAAA,CAEL,CAEA,OAAc,mBACbG,EACAC,EACAC,EACiB,CACjB,OAAO,IAAIL,EAAe,CACzB,SAAU,UACV,SAAU,OACV,QAAAG,EACA,cAAAC,EACA,QAAAC,EACA,YAAa,GACb,UAAW,GACX,YAAa,iFAAA,CACb,CACF,CAEA,OAAc,kBACbF,EACAC,EACAC,EACiB,CACjB,OAAO,IAAIL,EAAe,CACzB,SAAU,SACV,SAAU,OACV,QAAAG,EACA,cAAAC,EACA,QAAAC,EACA,YAAa,GACb,UAAW,GACX,YAAa,0EAAA,CACb,CACF,CAEA,OAAc,kBACbF,EACAC,EACAC,EACiB,CACjB,OAAO,IAAIL,EAAe,CACzB,SAAU,SACV,SAAU,SACV,QAAAG,EACA,cAAAC,EACA,QAAAC,EACA,YAAa,GACb,UAAW,GACX,YAAa,2EAAA,CACb,CACF,CAEA,OAAc,iBACbF,EACAC,EACAC,EACiB,CACjB,OAAO,IAAIL,EAAe,CACzB,SAAU,QACV,SAAU,SACV,QAAAG,EACA,cAAAC,EACA,QAAAC,EACA,YAAa,GACb,UAAW,GACX,YAAa,iEAAA,CACb,CACF,CAEA,OAAc,sBACbF,EACAE,EACiB,CACjB,OAAO,IAAIL,EAAe,CACzB,SAAU,aACV,SAAU,MACV,QAAAG,EACA,QAAAE,EACA,YAAa,GACb,UAAW,GACX,YAAa,yDAAA,CACb,CACF,CAEA,OAAc,sBACbF,EACAE,EACiB,CACjB,OAAO,IAAIL,EAAe,CACzB,SAAU,aACV,SAAU,OACV,QAAAG,EACA,QAAAE,EACA,YAAa,GACb,UAAW,GACX,YAAa,kEAAA,CACb,CACF,CACD,CCtMO,MAAMC,CAAO,CAMnB,YAAYL,EAAkC,GAAI,CAL1CC,EAAA,gBACAA,EAAA,cAAqB,CAAA,GACrBA,EAAA,kBAAoD,MACpDA,EAAA,kBAGP,KAAK,QAAU,CACd,MAAO,EACP,cAAe,GACf,aAAc,GACd,WAAY,IACZ,cAAe,IACf,GAAGD,CAAA,EAGJ,KAAK,UAAYA,EAAQ,WAAa,KAAK,kBAAA,EAEvC,KAAK,QAAQ,cAAgBtB,GAChC,KAAK,gBAAA,EAKL,OAAO,iBAAiB,QAAU4B,GAAU,CAC3C,KAAK,MAAM,kBAAmB,CAC7B,QAASA,EAAM,QACf,SAAUA,EAAM,SAChB,OAAQA,EAAM,OACd,MAAOA,EAAM,MACb,MAAOA,EAAM,OAAO,KAAA,CACpB,CACF,CAAC,EAED,OAAO,iBAAiB,qBAAuBA,GAAU,CACxD,KAAK,MAAM,8BAA+B,CACzC,OAAQA,EAAM,OACd,QAASA,EAAM,OAAA,CACf,CACF,CAAC,CAEH,CAEQ,mBAA4B,CACnC,MAAO,WAAW,KAAK,IAAA,CAAK,IAAI,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAAC,EACxE,CAEQ,UAAUC,EAA0B,CAC3C,OAAOA,GAAS,KAAK,QAAQ,KAC9B,CAEQ,eACPA,EACAL,EACAM,EACAC,EACW,CACX,MAAO,CACN,MAAAF,EACA,QAAAL,EACA,UAAW,KAAK,IAAA,EAChB,SAAAM,EACA,SAAAC,EACA,OAAQ,KAAK,QAAQ,OACrB,UAAW,KAAK,SAAA,CAElB,CAEQ,YAAYC,EAAuB,CAC1C,KAAK,OAAO,KAAKA,CAAK,EAElB,KAAK,OAAO,QAAU,KAAK,QAAQ,YACtC,KAAK,MAAA,CAEP,CAEA,MAAc,OAAuB,CACpC,GAAI,KAAK,OAAO,SAAW,GAAK,CAAC,KAAK,QAAQ,cAAgB,CAAC,KAAK,QAAQ,eAC3E,OAGD,MAAMC,EAAa,CAAC,GAAG,KAAK,MAAM,EAClC,KAAK,OAAS,CAAA,EAEd,GAAI,CACH,MAAM,MAAM,KAAK,QAAQ,eAAgB,CACxC,OAAQ,OACR,QAAS,CACR,eAAgB,kBAAA,EAEjB,KAAM,KAAK,UAAU,CAAE,KAAMA,EAAY,CAAA,CACzC,CACF,MAAgB,CAEX,KAAK,QAAQ,aAGlB,CACD,CAEQ,iBAAwB,CAC/B,KAAK,WAAa,YAAY,IAAM,CACnC,KAAK,MAAA,CACN,EAAG,KAAK,QAAQ,aAAa,CAC9B,CAEQ,IACPJ,EACAK,EACAV,EACAM,EACAC,EACO,CACP,GAAI,CAAC,KAAK,UAAUF,CAAK,EACxB,OAGD,MAAMG,EAAQ,KAAK,eAAeE,EAAWV,EAASM,EAAUC,CAAQ,EAGxE,GAAI,KAAK,QAAQ,eAAiB/B,EAAS,CAC1C,MAAMmC,EAAgB,QAAQD,CAAS,GAAK,QAAQ,IAE9CE,EAAS,IADG,IAAI,KAAKJ,EAAM,SAAS,EAAE,YAAA,CAChB,MAAME,EAAU,aAAa,MAAMJ,CAAQ,IAEnEC,GAAY,OAAO,KAAKA,CAAQ,EAAE,OAAS,EAC9CI,EAAc,GAAGC,CAAM,IAAIZ,CAAO,GAAIO,CAAQ,EAE9CI,EAAc,GAAGC,CAAM,IAAIZ,CAAO,EAAE,CAEtC,CAGI,KAAK,QAAQ,cAChB,KAAK,YAAYQ,CAAK,CAExB,CAEO,MAAMR,EAAiBO,EAAoCD,EAAW,MAAa,CACzF,KAAK,IAAI,EAAgB,QAASN,EAASM,EAAUC,CAAQ,CAC9D,CAEO,KAAKP,EAAiBO,EAAoCD,EAAW,MAAa,CACxF,KAAK,IAAI,EAAe,OAAQN,EAASM,EAAUC,CAAQ,CAC5D,CAEO,KAAKP,EAAiBO,EAAoCD,EAAW,MAAa,CACxF,KAAK,IAAI,EAAe,OAAQN,EAASM,EAAUC,CAAQ,CAC5D,CAEO,MAAMP,EAAiBO,EAAoCD,EAAW,MAAa,CACzF,KAAK,IAAI,EAAgB,QAASN,EAASM,EAAUC,CAAQ,CAC9D,CAGO,OACNF,EACAL,EACAO,EACO,CACP,KAAKF,CAAK,EAAEL,EAASO,EAAU,QAAQ,CACxC,CAEO,OACNF,EACAL,EACAO,EACO,CACP,KAAKF,CAAK,EAAEL,EAASO,EAAU,QAAQ,CACxC,CAEO,MACNF,EACAL,EACAO,EACO,CACP,KAAKF,CAAK,EAAEL,EAASO,EAAU,OAAO,CACvC,CAEO,QACNF,EACAL,EACAO,EACO,CACP,KAAKF,CAAK,EAAEL,EAASO,EAAU,SAAS,CACzC,CAEO,GACNF,EACAL,EACAO,EACO,CACP,KAAKF,CAAK,EAAEL,EAASO,EAAU,IAAI,CACpC,CAEO,YACNF,EACAL,EACAO,EACO,CACP,KAAKF,CAAK,EAAEL,EAASO,EAAU,aAAa,CAC7C,CAGO,SAASF,EAAuB,CACtC,KAAK,QAAQ,MAAQA,CACtB,CAEO,UAAUQ,EAAsB,CACtC,KAAK,QAAQ,OAASA,CACvB,CAEO,cAAuB,CAC7B,OAAO,KAAK,SACb,CAEA,MAAa,YAA4B,CACxC,MAAM,KAAK,MAAA,CACZ,CAEO,SAAgB,CAClB,KAAK,aACR,cAAc,KAAK,UAAU,EAC7B,KAAK,WAAa,MAEnB,KAAK,MAAA,CACN,CAGO,KAAKC,EAAqB,CAC5B,KAAK,UAAU,CAAA,CAKpB,CAEO,QAAQA,EAAeP,EAA0C,CACnE,KAAK,UAAU,CAAA,GAIlB,KAAK,MAAM,UAAUO,CAAK,aAAcP,EAAU,aAAa,CAEjE,CAGO,MAAMO,EAAqB,CAC7B,KAAK,QAAQ,cAGjB,KAAK,MAAM,kBAAkBA,CAAK,GAAI,OAAW,OAAO,CACzD,CAEO,SAASA,EAAsB,CACjC,KAAK,QAAQ,cAGbA,GACH,KAAK,MAAM,gBAAgBA,CAAK,GAAI,OAAW,OAAO,CAExD,CACD,CAKO,MAAMC,EAAS,IAAIZ,EAAO,CAChC,MAAuB,EACvB,cAAe,GACf,aAAc,GACd,WAAY,GACZ,cAAe,GAChB,CAAC,EAmBA,OAAO,iBAAiB,eAAgB,IAAM,CAC7CY,EAAO,QAAA,CACR,CAAC,ECxTK,MAAMC,CAAmB,CAK/B,YAAYlB,EAAwB,GAAI,CAJhCC,EAAA,iBAAY,KACZA,EAAA,gBACAA,EAAA,oBAAsD,MAG7D,KAAK,QAAU,CACd,IAAK,IAAS,IACd,QAAS,GAAK,KAAO,KACrB,WAAY,IACZ,QAAS,IAAM,CAAC,EAChB,GAAGD,CAAA,EAIJ,KAAK,kBAAA,EAELiB,EAAO,MACN,oBACA,CACC,IAAK,KAAK,QAAQ,IAClB,QAAS,KAAK,QAAQ,QACtB,WAAY,KAAK,QAAQ,UAAA,EAE1B,OAAA,CAEF,CAEQ,mBAA0B,CAEjC,KAAK,aAAe,YACnB,IAAM,CACL,KAAK,QAAA,CACN,EACA,IAAS,GAAA,CAEX,CAEQ,SAAgB,CACvB,MAAME,EAAM,KAAK,IAAA,EACjB,IAAIC,EAAe,EAEnB,SAAW,CAACC,EAAKX,CAAK,IAAK,KAAK,MAAM,UACjC,KAAK,UAAUA,EAAOS,CAAG,IAC5B,KAAK,QAAQ,QAAQE,EAAKX,EAAM,IAAI,EACpC,KAAK,MAAM,OAAOW,CAAG,EACrBD,KAIEA,EAAe,GAClBH,EAAO,MAAM,cAAcG,CAAY,yBAA0B,OAAW,OAAO,CAErF,CAEQ,UAAUV,EAAsBS,EAAM,KAAK,MAAgB,CAClE,OAAOA,EAAMT,EAAM,UAAYA,EAAM,GACtC,CAEQ,cAAqB,CAE5B,KAAO,KAAK,MAAM,KAAO,KAAK,QAAQ,YAAY,CACjD,MAAMY,EAAY,KAAK,MAAM,KAAA,EAAO,OAAO,MAC3C,GAAIA,EAAW,CACd,MAAMZ,EAAQ,KAAK,MAAM,IAAIY,CAAS,EAClCZ,GACH,KAAK,QAAQ,QAAQY,EAAWZ,EAAM,IAAI,EAE3C,KAAK,MAAM,OAAOY,CAAS,CAC5B,CACD,CAGI,KAAK,aAAA,EAAiB,KAAK,QAAQ,SACtC,KAAK,SAAA,CAEP,CAEQ,cAAuB,CAC9B,IAAIC,EAAY,EAChB,UAAWb,KAAS,KAAK,MAAM,OAAA,EAC9Ba,GAAab,EAAM,MAAQ,EAE5B,OAAOa,CACR,CAEQ,UAAiB,CAExB,MAAMC,EAAU,MAAM,KAAK,KAAK,MAAM,QAAA,CAAS,EAAE,KAChD,CAACC,EAAGC,IAAMD,EAAE,CAAC,EAAE,UAAYC,EAAE,CAAC,EAAE,SAAA,EAGjC,SAAW,CAACL,EAAKX,CAAK,IAAKc,EAI1B,GAHA,KAAK,QAAQ,QAAQH,EAAKX,EAAM,IAAI,EACpC,KAAK,MAAM,OAAOW,CAAG,EAEjB,KAAK,aAAA,GAAkB,KAAK,QAAQ,QACvC,KAGH,CAEQ,cAAcM,EAAiB,CACtC,GAAI,CACH,OAAO,KAAK,UAAUA,CAAI,EAAE,OAAS,CACtC,MAAQ,CACP,MAAO,KACR,CACD,CAEO,IAAIN,EAAaM,EAASC,EAA0B,CAC1D,MAAMC,EAAMD,GAAa,KAAK,QAAQ,IAChCE,EAAO,KAAK,cAAcH,CAAI,EAE9BjB,EAAuB,CAC5B,IAAAW,EACA,KAAAM,EACA,UAAW,KAAK,IAAA,EAChB,IAAAE,EACA,KAAAC,CAAA,EAID,GAAI,KAAK,MAAM,IAAIT,CAAG,EAAG,CACxB,MAAMU,EAAW,KAAK,MAAM,IAAIV,CAAG,EAC/BU,GACH,KAAK,QAAQ,QAAQV,EAAKU,EAAS,IAAI,CAEzC,CAEA,KAAK,MAAM,IAAIV,EAAKX,CAAK,EACzB,KAAK,aAAA,EAELO,EAAO,MACN,wBAAwBI,CAAG,GAC3B,CACC,KAAAS,EACA,IAAAD,EACA,aAAc,KAAK,MAAM,IAAA,EAE1B,OAAA,CAEF,CAEO,IAAIR,EAAuB,CACjC,MAAMX,EAAQ,KAAK,MAAM,IAAIW,CAAG,EAEhC,OAAKX,EAKD,KAAK,UAAUA,CAAK,GACvB,KAAK,QAAQ,QAAQW,EAAKX,EAAM,IAAI,EACpC,KAAK,MAAM,OAAOW,CAAG,EACrBJ,EAAO,MAAM,0BAA0BI,CAAG,GAAI,OAAW,OAAO,EACzD,OAIRX,EAAM,UAAY,KAAK,IAAA,EAEvBO,EAAO,MAAM,sBAAsBI,CAAG,GAAI,OAAW,OAAO,EACrDX,EAAM,OAfZO,EAAO,MAAM,uBAAuBI,CAAG,GAAI,OAAW,OAAO,EACtD,KAeT,CAEO,IAAIA,EAAsB,CAChC,MAAMX,EAAQ,KAAK,MAAM,IAAIW,CAAG,EAChC,OAAKX,EAED,KAAK,UAAUA,CAAK,GACvB,KAAK,QAAQ,QAAQW,EAAKX,EAAM,IAAI,EACpC,KAAK,MAAM,OAAOW,CAAG,EACd,IAGD,GARY,EASpB,CAEO,OAAOA,EAAsB,CACnC,MAAMX,EAAQ,KAAK,MAAM,IAAIW,CAAG,EAChC,OAAIX,GACH,KAAK,QAAQ,QAAQW,EAAKX,EAAM,IAAI,EAE9B,KAAK,MAAM,OAAOW,CAAG,CAC7B,CAEO,OAAc,CACpB,SAAW,CAACA,EAAKX,CAAK,IAAK,KAAK,MAAM,UACrC,KAAK,QAAQ,QAAQW,EAAKX,EAAM,IAAI,EAErC,KAAK,MAAM,MAAA,EACXO,EAAO,KAAK,gBAAiB,OAAW,OAAO,CAChD,CAEO,UAAW,CACjB,MAAME,EAAM,KAAK,IAAA,EACjB,IAAIa,EAAe,EACfT,EAAY,EAEhB,UAAWb,KAAS,KAAK,MAAM,OAAA,EAC1B,KAAK,UAAUA,EAAOS,CAAG,GAC5Ba,IAEDT,GAAab,EAAM,MAAQ,EAG5B,MAAO,CACN,aAAc,KAAK,MAAM,KACzB,eAAgBsB,EAChB,cAAe,KAAK,MAAM,KAAOA,EACjC,UAAAT,EACA,QAAS,KAAK,QAAQ,QACtB,WAAY,KAAK,QAAQ,WACzB,mBAAqBA,EAAY,KAAK,QAAQ,QAAW,GAAA,CAE3D,CAEO,SAAgB,CAClB,KAAK,eACR,cAAc,KAAK,YAAY,EAC/B,KAAK,aAAe,MAErB,KAAK,MAAA,EACLN,EAAO,MAAM,kBAAmB,OAAW,OAAO,CACnD,CACD,CAGO,MAAMgB,UAAqBf,CAAe,CAChD,aAAc,CACb,MAAM,CACL,IAAK,IAAS,IACd,WAAY,IACZ,QAAS,GAAK,KAAO,IAAA,CACrB,CACF,CAEO,aACNgB,EACAjD,EACAkD,EACAN,EACO,CACP,MAAMR,EAAM,KAAK,iBAAiBa,EAAKjD,CAAM,EAC7C,KAAK,IAAIoC,EAAKc,EAAUN,CAAG,CAC5B,CAEO,WAAWK,EAAajD,EAAiD,CAC/E,MAAMoC,EAAM,KAAK,iBAAiBa,EAAKjD,CAAM,EAC7C,OAAO,KAAK,IAAIoC,CAAG,CACpB,CAEQ,iBAAiBa,EAAajD,EAAyC,CAC9E,MAAMmD,EAAe,OAAO,KAAKnD,CAAM,EACrC,OACA,OACA,CAACoD,EAAQhB,KACRgB,EAAOhB,CAAG,EAAIpC,EAAOoC,CAAG,EACjBgB,GAER,CAAA,CAAC,EAGH,MAAO,GAAGH,CAAG,IAAI,KAAK,UAAUE,CAAY,CAAC,EAC9C,CACD,CAEO,MAAME,UAAsBpB,CAAe,CACjD,aAAc,CACb,MAAM,CACL,IAAK,KAAU,IACf,WAAY,IACZ,QAAS,GAAK,KAAO,IAAA,CACrB,CACF,CACD,CAEO,MAAMqB,UAAoBrB,CAAe,CAC/C,aAAc,CACb,MAAM,CACL,IAAK,IAAU,IACf,WAAY,IACZ,QAAS,GAAK,KAAO,IAAA,CACrB,CACF,CACD,CAGO,MAAMsB,EAAe,IAAIP,EACnBQ,EAAgB,IAAIH,EACpBI,EAAc,IAAIH,EAGxB,SAASI,KAAkBC,EAA8C,CAC/E,OAAOA,EAAM,IAAKC,GAAS,OAAOA,CAAI,CAAC,EAAE,KAAK,GAAG,CAClD,CAEA,eAAsBC,EACrBC,EACA1B,EACA2B,EACAnB,EACa,CAEb,MAAMoB,EAASF,EAAM,IAAI1B,CAAG,EAC5B,GAAI4B,IAAW,KACd,OAAOA,EAIRhC,EAAO,MAAM,gCAAgCI,CAAG,GAAI,OAAW,OAAO,EACtE,MAAMM,EAAO,MAAMqB,EAAA,EACnB,OAAAD,EAAM,IAAI1B,EAAKM,EAAME,CAAG,EACjBF,CACR,CAGI,OAAO,OAAW,KACrB,OAAO,iBAAiB,eAAgB,IAAM,CAC7Ca,EAAa,QAAA,EACbC,EAAc,QAAA,EACdC,EAAY,QAAA,CACb,CAAC,EC3PK,MAAMQ,CAAe,CAArB,cACEjD,EAAA,cAAyB,CAAA,GACzBA,EAAA,mBAAc,IACLA,EAAA,sBAAiB,KACjBA,EAAA,kBAAa,GAE9B,MAAM,SAASkD,EAAoC,CAClD,GAAI,CAEH,IAAIC,EAAUD,EAAY,QAAQ,aAAc,UAAU,EAG1DC,EAAU,mBAAmBA,CAAO,EAEpCnC,EAAO,MAAM,OAAQ,iCAAiCmC,CAAO,EAAE,EAG/D,MAAMC,EAAWV,EAAe,WAAYS,CAAO,EAC7CE,EAAW,MAAMR,EACtBL,EACAY,EACA,IAAM,KAAK,iBAAiBD,CAAO,EACnC,KAAU,GAAA,EAGXnC,EAAO,MAAM,QAAS,gBAAgBmC,CAAO,GAAI,CAAE,SAAAE,EAAU,EAC7D,MAAMC,EAAUH,EAAQ,QAAQ,iBAAkB,EAAE,EAEpD,KAAK,OAAO,KAAK,CAAE,SAAAE,EAAU,QAAAC,EAAS,EACtCtC,EAAO,MAAM,OAAQ,gBAAgBqC,EAAS,IAAI,KAAKA,EAAS,EAAE,IAAK,CACtE,QAAAC,EACA,MAAOD,EAAS,MAChB,aAAcA,EAAS,UAAU,QAAU,CAAA,CAC3C,GAGGC,EAAQ,SAAS,GAAG,GAAKA,EAAQ,SAAS,GAAG,IAChDtC,EAAO,MAAM,OAAQ,wCAAwCsC,CAAO,GAAI,CAAE,QAAAA,EAAS,CAErF,OAASC,EAAO,CACf,MAAMC,EAAiB1D,EAAe,iBACrC,4BAA4BoD,CAAW,GACvCK,aAAiB,MAAQA,EAAQ,IAAI,MAAM,OAAOA,CAAK,CAAC,EACxD,CAAE,SAAU,CAAE,YAAAL,CAAA,CAAY,CAAE,EAE7B,MAAAlC,EAAO,MAAM,QAASwC,EAAe,QAAS,CAAE,QAASA,EAAe,QAAS,EAC3EA,CACP,CACD,CAEA,MAAc,iBAAiBvB,EAAawB,EAAU,KAAK,eAA8B,CACxF,MAAMC,EAAa,IAAI,gBACjBC,EAAY,WAAW,IAAMD,EAAW,MAAA,EAASD,CAAO,EAE9D,GAAI,CACH,MAAMvB,EAAW,MAAM,MAAMD,EAAK,CACjC,OAAQyB,EAAW,OACnB,QAAS,CACR,aAAc,eACd,OAAQ,kBAAA,CACT,CACA,EAID,GAFA,aAAaC,CAAS,EAElB,CAACzB,EAAS,GACb,MAAMpC,EAAe,mBACpB,QAAQoC,EAAS,MAAM,KAAKA,EAAS,UAAU,GAC/C,OACA,CAAE,SAAU,CAAE,IAAAD,EAAK,OAAQC,EAAS,OAAQ,WAAYA,EAAS,UAAA,CAAW,CAAE,EAIhF,OAAO,MAAMA,EAAS,KAAA,CACvB,OAASqB,EAAO,CAGf,MAFA,aAAaI,CAAS,EAElBJ,aAAiB,OAASA,EAAM,OAAS,aACtCzD,EAAe,mBAAmB,yBAAyB2D,CAAO,KAAMF,EAAO,CACpF,SAAU,CAAE,IAAAtB,EAAK,QAAAwB,CAAA,CAAQ,CACzB,EAGIF,CACP,CACD,CAEA,MAAc,aACbK,EACAC,EAAU,KAAK,WACF,CACb,IAAIC,EAAmB,IAAI,MAAM,kBAAkB,EAEnD,QAASC,EAAU,EAAGA,GAAWF,EAASE,IACzC,GAAI,CACH,OAAO,MAAMH,EAAA,CACd,OAASL,EAAO,CAGf,GAFAO,EAAYP,aAAiB,MAAQA,EAAQ,IAAI,MAAM,OAAOA,CAAK,CAAC,EAEhEQ,IAAYF,EACf,MAID,MAAMG,EAAQ,KAAK,IAAI,IAAO,KAAK,IAAI,EAAGD,EAAU,CAAC,EAAG,GAAK,EAC7D/C,EAAO,MACN,OACA,+BAA+BgD,CAAK,eAAeD,CAAO,IAAIF,CAAO,IACrE,CACC,MAAOC,EAAU,OAAA,CAClB,EAGD,MAAM,IAAI,QAASG,GAAY,WAAWA,EAASD,CAAK,CAAC,CAC1D,CAGD,MAAMF,CACP,CAEA,MAAM,YAA4B,CACjC,GAAI,MAAK,YAOT,CAAA7E,EAAO,mBAAmB,QAAQ,CAACgD,EAAKiC,IAAM,CACzCjC,EAAI,SAAS,GAAG,CAGrB,CAAC,EAGD,UAAWkC,KAAYlF,EAAO,mBAC7B,GAAI,CACH,MAAM,KAAK,SAASkF,CAAQ,CAC7B,MAAgB,CAEhB,CAID,UAAWA,KAAYlF,EAAO,cAC7B,GAAI,CACH,MAAM,KAAK,SAASkF,CAAQ,CAC7B,MAAgB,CAEhB,CAID,KAAK,YAAc,GACpB,CAEA,WAA4B,CAC3B,OAAO,KAAK,MACb,CAEA,MAAM,WACLC,EACAC,EACAC,EACgC,CAChC,MAAMC,EAAgC,CAAA,EAEtC,UAAWC,KAAS,KAAK,OAWxB,GANI,GAHuBA,EAAM,SAAS,UAAU,KAAMC,GACzD,OAAOA,GAAM,SAAWA,IAAM,UAAYA,EAAE,OAAS,SAAA,GAGlD,CAACD,EAAM,SAAS,MAAM,SAASJ,CAAI,GAKnC,CAHkBI,EAAM,SAAS,UAAU,KAC7CE,GAAQA,EAAI,OAASN,GAAQM,EAAI,KAAOL,CAAA,GAO1C,GAAI,CACH,IAAIpC,EAAM,GAAGuC,EAAM,OAAO,YAAYJ,CAAI,IAAIC,CAAE,QAEhD,GAAIC,GAAS,OAAO,KAAKA,CAAK,EAAE,OAAS,EAAG,CAC3C,MAAMtF,EAAS,IAAI,gBAAgBsF,CAAK,EACxCrC,GAAO,IAAIjD,EAAO,SAAA,CAAU,EAC7B,CAGA,MAAMkD,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GAAI,SAElB,MAAMR,EAAO,MAAMQ,EAAS,KAAA,EAE5B,GAAIR,EAAK,OAAS,MAAM,QAAQA,EAAK,KAAK,EAAG,CAE5C,MAAMiD,EAAmBjD,EAAK,MAC5B,IAAKkD,IAAe,CACpB,GAAGA,EACH,GAAIA,EAAK,IAAMA,EAAK,SAAWA,EAAK,YAAY,YAAc,SAAA,EAC7D,EACD,OAAQA,GAAc,CAEtB,MAAMP,EAAKO,EAAK,GAShB,MARI,GAACP,GAAMA,IAAO,WACdA,EAAG,SAAS,GAAG,GAAKA,EAAG,SAAS,GAAG,GAAKA,EAAG,SAAS,GAAG,GAOvDA,EAAG,OAAS,GAQjB,CAAC,EACFE,EAAQ,KAAK,GAAGI,CAAgB,CACjC,CACD,MAAgB,CAEhB,CAGD,OAAOJ,CACR,CAEA,MAAM,QAAQH,EAAcC,EAAyC,CAGpE,UAAWG,KAAS,KAAK,OACxB,GAAKA,EAAM,SAAS,UAAU,SAAS,MAAM,GACxCA,EAAM,SAAS,MAAM,SAASJ,CAAI,GAGnC,EAAAI,EAAM,SAAS,YAAcA,EAAM,SAAS,WAAW,OAAS,GAE/D,CADmBA,EAAM,SAAS,WAAW,KAAM3D,GAAWwD,EAAG,WAAWxD,CAAM,CAAC,GAIxF,GAAI,CACH,MAAMgE,EAAU,GAAGL,EAAM,OAAO,SAASJ,CAAI,IAAIC,CAAE,QAG7CnC,EAAW,MAAM,MAAM2C,CAAO,EACpC,GAAI,CAAC3C,EAAS,GAAI,SAElB,MAAMR,EAAO,MAAMQ,EAAS,KAAA,EAC5B,GAAIR,EAAK,KAER,OAAOA,EAAK,IAEd,MAAgB,CAEhB,CAID,OAAO,IACR,CAEA,MAAM,WAAW0C,EAAcC,EAAsC,CACpE,MAAME,EAA2B,CAAA,EAMjC,KAAK,OAAO,QAASC,GAAU,CAIZA,EAAM,SAAS,UAAU,IAAKC,GAC/C,OAAOA,GAAM,SAAWA,EAAIA,EAAE,MAAQ,SAAA,CAMxC,CAAC,EAED,UAAWD,KAAS,KAAK,OAAQ,CAqBhC,GAjBkBA,EAAM,SAAS,UAAU,IAAKC,GAC/C,OAAOA,GAAM,SAAWA,EAAIA,EAAE,MAAQ,SAAA,EAWnC,CAJsBD,EAAM,SAAS,UAAU,KAAMC,GACxD,OAAOA,GAAM,SAAWA,IAAM,SAAWA,EAAE,OAAS,QAAA,GAQjD,CAACD,EAAM,SAAS,MAAM,SAASJ,CAAI,EAEtC,SAID,IAAIU,EAAaN,EAAM,SAAS,YAAc,CAAA,EAG9C,MAAMO,EAAiBP,EAAM,SAAS,UAAU,KAC9CC,GAAM,OAAOA,GAAM,UAAYA,EAAE,OAAS,QAAA,EAM5C,GAJIM,GAAkB,OAAOA,GAAmB,UAAYA,EAAe,aAC1ED,EAAa,CAAC,GAAGA,EAAY,GAAGC,EAAe,UAAU,GAGtD,EAAAD,EAAW,OAAS,GAEnB,CADmBA,EAAW,KAAMjE,GAAWwD,EAAG,WAAWxD,CAAM,CAAC,GASzE,GAAI,CACH,MAAMmE,EAAY,GAAGR,EAAM,OAAO,WAAWJ,CAAI,IAAIC,CAAE,QAGjDnC,EAAW,MAAM,MAAM8C,CAAS,EAGtC,GAAI,CAAC9C,EAAS,GAEb,SAGD,MAAMR,EAAO,MAAMQ,EAAS,KAAA,EAG5B,GAAIR,EAAK,SAAW,MAAM,QAAQA,EAAK,OAAO,EAAG,CAGhD,MAAMuD,EAAkB/F,EAAuBwC,EAAK,OAAO,EAG3D6C,EAAQ,KAAK,GAAGU,CAAe,CAChC,CAGD,MAAgB,CAEhB,CACD,CAGA,OAAOV,CACR,CAEA,MAAM,OAAOW,EAAed,EAA8C,CACzE,MAAMG,EAAgC,CAAA,EAChCY,MAAW,IAKjB,UAAWX,KAAS,KAAK,OAAQ,CAMhC,GAAI,CAJuBA,EAAM,SAAS,UAAU,KAAMC,GACzD,OAAOA,GAAM,SAAWA,IAAM,UAAYA,EAAE,OAAS,SAAA,EAKrD,SAGD,MAAMW,EAAqBZ,EAAM,SAAS,UAAU,OAClDE,GAAQ,CAACN,GAAQM,EAAI,OAASN,CAAA,EAGhC,GAAKgB,GAAoB,OASzB,UAAWC,KAAWD,EACrB,GAAI,CACH,MAAME,EAAY,GAAGd,EAAM,OAAO,YAAYa,EAAQ,IAAI,IAAIA,EAAQ,EAAE,gBAAgB,mBAAmBH,CAAK,CAAC,GAG3GhD,EAAW,MAAM,MAAMoD,CAAS,EAEtC,GAAI,CAACpD,EAAS,GAEb,SAGD,MAAMR,EAAO,MAAMQ,EAAS,KAAA,EAE5B,GAAIR,EAAK,OAAS,MAAM,QAAQA,EAAK,KAAK,EAAG,CAI5C,MAAM6D,EAAa7D,EAAK,MACtB,IAAKkD,IAAe,CACpB,GAAGA,EACH,GAAIA,EAAK,IAAMA,EAAK,SAAWA,EAAK,YAAY,YAAc,SAAA,EAC7D,EACD,OAAQA,GAEJO,EAAK,IAAIP,EAAK,EAAE,GAGhB,CAACA,EAAK,IAAMA,EAAK,KAAO,WAGxBA,EAAK,GAAG,SAAS,GAAG,GAAKA,EAAK,GAAG,SAAS,GAAG,GAAKA,EAAK,GAAG,OAAS,GAC/D,IAGRO,EAAK,IAAIP,EAAK,EAAE,EACT,GACP,EAEFL,EAAQ,KAAK,GAAGgB,CAAU,CAE3B,CAGD,MAAgB,CAEhB,CAEF,CAGA,OAAOhB,CACR,CACD,CAGO,MAAMiB,EAAiB,IAAIvC","x_google_ignoreList":[0]}
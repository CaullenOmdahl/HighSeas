{"version":3,"file":"DFVVn2C0.js","sources":["../../../../../../src/lib/utils/intersection.ts","../../../../../../src/lib/performance/monitor.ts","../../../../../../src/lib/components/LazyImage.svelte","../../../../../../src/lib/actions/tv-navigation.ts","../../../../../../src/lib/components/MovieCard.svelte"],"sourcesContent":["interface LazyLoadOptions {\n\troot?: Element | null;\n\trootMargin?: string;\n\tthreshold?: number | number[];\n\tonEnter?: (entry: IntersectionObserverEntry) => void;\n\tonExit?: (entry: IntersectionObserverEntry) => void;\n\tonce?: boolean;\n}\n\nclass IntersectionManager {\n\tprivate observers: Map<string, IntersectionObserver> = new Map();\n\tprivate elements: Map<Element, string> = new Map();\n\n\tcreateObserver(options: LazyLoadOptions): string {\n\t\tconst observerId = `observer-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\n\t\tconst observer = new IntersectionObserver(\n\t\t\t(entries) => {\n\t\t\t\tentries.forEach((entry) => {\n\t\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\t\toptions.onEnter?.(entry);\n\n\t\t\t\t\t\tif (options.once) {\n\t\t\t\t\t\t\tobserver.unobserve(entry.target);\n\t\t\t\t\t\t\tthis.elements.delete(entry.target);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.onExit?.(entry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t{\n\t\t\t\troot: options.root,\n\t\t\t\trootMargin: options.rootMargin || '50px',\n\t\t\t\tthreshold: options.threshold || 0.1\n\t\t\t}\n\t\t);\n\n\t\tthis.observers.set(observerId, observer);\n\t\treturn observerId;\n\t}\n\n\tobserve(observerId: string, element: Element) {\n\t\tconst observer = this.observers.get(observerId);\n\t\tif (observer) {\n\t\t\tobserver.observe(element);\n\t\t\tthis.elements.set(element, observerId);\n\t\t}\n\t}\n\n\tunobserve(element: Element) {\n\t\tconst observerId = this.elements.get(element);\n\t\tif (observerId) {\n\t\t\tconst observer = this.observers.get(observerId);\n\t\t\tobserver?.unobserve(element);\n\t\t\tthis.elements.delete(element);\n\t\t}\n\t}\n\n\tdisconnect(observerId: string) {\n\t\tconst observer = this.observers.get(observerId);\n\t\tif (observer) {\n\t\t\tobserver.disconnect();\n\t\t\tthis.observers.delete(observerId);\n\t\t}\n\t}\n\n\tdisconnectAll() {\n\t\tthis.observers.forEach((observer) => observer.disconnect());\n\t\tthis.observers.clear();\n\t\tthis.elements.clear();\n\t}\n}\n\n// Singleton instance\nexport const intersectionManager = new IntersectionManager();\n\n// Convenience function for lazy loading images\nexport function setupImageLazyLoading(\n\timageElement: HTMLImageElement,\n\tsrc: string,\n\tplaceholder?: string\n) {\n\t// Set up placeholder\n\tif (placeholder) {\n\t\timageElement.src = placeholder;\n\t}\n\n\tconst observerId = intersectionManager.createObserver({\n\t\trootMargin: '100px',\n\t\tthreshold: 0.1,\n\t\tonce: true,\n\t\tonEnter: () => {\n\t\t\t// Create a new image to preload\n\t\t\tconst tempImage = new Image();\n\t\t\ttempImage.onload = () => {\n\t\t\t\timageElement.src = src;\n\t\t\t\timageElement.classList.add('loaded');\n\t\t\t};\n\t\t\ttempImage.onerror = () => {\n\t\t\t\timageElement.classList.add('error');\n\t\t\t};\n\t\t\ttempImage.src = src;\n\t\t}\n\t});\n\n\tintersectionManager.observe(observerId, imageElement);\n\n\t// Return cleanup function\n\treturn () => {\n\t\tintersectionManager.unobserve(imageElement);\n\t\tintersectionManager.disconnect(observerId);\n\t};\n}\n\n// Svelte action for lazy loading\nexport function lazyLoad(node: HTMLElement, options: LazyLoadOptions & { src?: string }) {\n\tlet cleanup: (() => void) | null = null;\n\n\tif (node instanceof HTMLImageElement && options.src) {\n\t\tcleanup = setupImageLazyLoading(node, options.src);\n\t} else {\n\t\tconst observerId = intersectionManager.createObserver(options);\n\t\tintersectionManager.observe(observerId, node);\n\t\tcleanup = () => {\n\t\t\tintersectionManager.unobserve(node);\n\t\t\tintersectionManager.disconnect(observerId);\n\t\t};\n\t}\n\n\treturn {\n\t\tdestroy() {\n\t\t\tcleanup?.();\n\t\t}\n\t};\n}\n","interface PerformanceMetric {\n\tname: string;\n\tvalue: number;\n\ttimestamp: number;\n}\n\ninterface PerformanceThresholds {\n\tfcp: number; // First Contentful Paint\n\tlcp: number; // Largest Contentful Paint\n\tfid: number; // First Input Delay\n\tcls: number; // Cumulative Layout Shift\n}\n\nclass PerformanceMonitor {\n\tprivate metrics: PerformanceMetric[] = [];\n\tprivate thresholds: PerformanceThresholds = {\n\t\tfcp: 1500, // 1.5 seconds\n\t\tlcp: 2500, // 2.5 seconds\n\t\tfid: 100, // 100ms\n\t\tcls: 0.1 // 0.1 CLS score\n\t};\n\n\tconstructor() {\n\t\tif (typeof window !== 'undefined') {\n\t\t\tthis.initializeObservers();\n\t\t}\n\t}\n\n\tprivate initializeObservers() {\n\t\t// Observe Core Web Vitals\n\t\tif ('PerformanceObserver' in window) {\n\t\t\t// First Contentful Paint\n\t\t\tthis.observeMetric('first-contentful-paint', 'paint');\n\n\t\t\t// Largest Contentful Paint\n\t\t\tthis.observeMetric('largest-contentful-paint', 'largest-contentful-paint');\n\n\t\t\t// First Input Delay\n\t\t\tthis.observeMetric('first-input-delay', 'first-input');\n\n\t\t\t// Cumulative Layout Shift\n\t\t\tthis.observeMetric('cumulative-layout-shift', 'layout-shift');\n\t\t}\n\t}\n\n\tprivate observeMetric(metricName: string, entryType: string) {\n\t\ttry {\n\t\t\tconst observer = new PerformanceObserver((list) => {\n\t\t\t\tfor (const entry of list.getEntries()) {\n\t\t\t\t\tlet value = 0;\n\n\t\t\t\t\tswitch (entryType) {\n\t\t\t\t\t\tcase 'paint':\n\t\t\t\t\t\t\tvalue = entry.startTime;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'largest-contentful-paint':\n\t\t\t\t\t\t\tvalue = entry.startTime;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'first-input':\n\t\t\t\t\t\t\tvalue = (entry as any).processingStart - entry.startTime;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'layout-shift':\n\t\t\t\t\t\t\tvalue = (entry as any).value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.recordMetric(metricName, value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tobserver.observe({ entryTypes: [entryType] });\n\t\t} catch (error) {\n\t\t\tconsole.warn(`Failed to observe ${metricName}:`, error);\n\t\t}\n\t}\n\n\trecordMetric(name: string, value: number) {\n\t\tconst metric: PerformanceMetric = {\n\t\t\tname,\n\t\t\tvalue,\n\t\t\ttimestamp: Date.now()\n\t\t};\n\n\t\tthis.metrics.push(metric);\n\n\t\t// Check thresholds\n\t\tthis.checkThreshold(name, value);\n\n\t\t// Limit stored metrics to prevent memory issues\n\t\tif (this.metrics.length > 100) {\n\t\t\tthis.metrics = this.metrics.slice(-50);\n\t\t}\n\t}\n\n\tprivate checkThreshold(name: string, value: number) {\n\t\tlet threshold = 0;\n\t\tlet unit = 'ms';\n\n\t\tswitch (name) {\n\t\t\tcase 'first-contentful-paint':\n\t\t\t\tthreshold = this.thresholds.fcp;\n\t\t\t\tbreak;\n\t\t\tcase 'largest-contentful-paint':\n\t\t\t\tthreshold = this.thresholds.lcp;\n\t\t\t\tbreak;\n\t\t\tcase 'first-input-delay':\n\t\t\t\tthreshold = this.thresholds.fid;\n\t\t\t\tbreak;\n\t\t\tcase 'cumulative-layout-shift':\n\t\t\t\tthreshold = this.thresholds.cls;\n\t\t\t\tunit = 'score';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (threshold > 0 && value > threshold) {\n\t\t\tconsole.warn(\n\t\t\t\t`Performance threshold exceeded for ${name}: ${value}${unit} > ${threshold}${unit}`\n\t\t\t);\n\t\t}\n\t}\n\n\t// Mark custom performance points\n\tmark(name: string) {\n\t\tif ('performance' in window && 'mark' in performance) {\n\t\t\tperformance.mark(name);\n\t\t}\n\t}\n\n\t// Measure time between marks\n\tmeasure(name: string, startMark: string, endMark: string) {\n\t\tif ('performance' in window && 'measure' in performance) {\n\t\t\ttry {\n\t\t\t\tperformance.measure(name, startMark, endMark);\n\t\t\t\tconst measure = performance.getEntriesByName(name, 'measure')[0];\n\t\t\t\tthis.recordMetric(name, measure.duration);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn(`Failed to measure ${name}:`, error);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetMetrics(): PerformanceMetric[] {\n\t\treturn [...this.metrics];\n\t}\n\n\tgetMetricsByName(name: string): PerformanceMetric[] {\n\t\treturn this.metrics.filter((metric) => metric.name === name);\n\t}\n\n\t// Get bundle size information\n\tgetBundleInfo() {\n\t\tif ('performance' in window) {\n\t\t\tconst navigationEntries = performance.getEntriesByType('navigation');\n\t\t\tconst resourceEntries = performance.getEntriesByType('resource');\n\n\t\t\treturn {\n\t\t\t\tnavigation: navigationEntries,\n\t\t\t\tresources: resourceEntries.map((entry) => ({\n\t\t\t\t\tname: entry.name,\n\t\t\t\t\tsize: (entry as any).transferSize || 0,\n\t\t\t\t\tduration: entry.duration\n\t\t\t\t}))\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n}\n\n// Singleton instance\nexport const performanceMonitor = new PerformanceMonitor();\n\n// Utility functions for component performance tracking\nexport function trackComponentMount(componentName: string) {\n\tperformanceMonitor.mark(`${componentName}-mount-start`);\n}\n\nexport function trackComponentMountComplete(componentName: string) {\n\tperformanceMonitor.mark(`${componentName}-mount-end`);\n\tperformanceMonitor.measure(\n\t\t`${componentName}-mount-duration`,\n\t\t`${componentName}-mount-start`,\n\t\t`${componentName}-mount-end`\n\t);\n}\n\n// Track image loading performance\nexport function trackImageLoad(imageSrc: string, startTime: number) {\n\tconst duration = performance.now() - startTime;\n\tperformanceMonitor.recordMetric('image-load-time', duration);\n}\n","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { lazyLoad } from '$lib/utils/intersection';\n\timport { trackImageLoad } from '$lib/performance/monitor';\n\n\texport let src: string;\n\texport let alt: string = '';\n\texport let placeholder: string = '';\n\texport let webpSrc: string = '';\n\texport let width: number | string = 'auto';\n\texport let height: number | string = 'auto';\n\texport let loading: 'lazy' | 'eager' = 'lazy';\n\texport let sizes: string = '';\n\texport let srcset: string = '';\n\texport let className: string = '';\n\n\tlet imageElement: HTMLImageElement;\n\tlet isLoaded = false;\n\tlet hasError = false;\n\tlet isIntersecting = false;\n\tlet loadStartTime = 0;\n\n\t// Generate responsive srcset if not provided\n\t$: responsiveSrcset = srcset || generateResponsiveSrcset(src);\n\n\t// Generate WebP srcset\n\t$: webpSrcset = webpSrc ? generateResponsiveSrcset(webpSrc) : '';\n\n\tonMount(() => {\n\t\tif (loading === 'eager') {\n\t\t\tloadImage();\n\t\t}\n\t});\n\n\tfunction generateResponsiveSrcset(baseSrc: string): string {\n\t\tif (!baseSrc) return '';\n\n\t\tconst widths = [320, 640, 960, 1280, 1920];\n\t\treturn widths.map((w) => `${baseSrc}?w=${w} ${w}w`).join(', ');\n\t}\n\n\tfunction loadImage() {\n\t\tif (isLoaded || hasError) return;\n\n\t\tloadStartTime = performance.now();\n\t\tisIntersecting = true;\n\t}\n\n\tfunction handleLoad() {\n\t\tisLoaded = true;\n\t\tif (loadStartTime > 0) {\n\t\t\ttrackImageLoad(src, loadStartTime);\n\t\t}\n\t}\n\n\tfunction handleError() {\n\t\thasError = true;\n\t\tconsole.warn(`Failed to load image: ${src}`);\n\t}\n\n\tfunction handleIntersection() {\n\t\tif (!isIntersecting && loading === 'lazy') {\n\t\t\tloadImage();\n\t\t}\n\t}\n</script>\n\n<div\n\tclass=\"lazy-image-container {className}\"\n\tstyle=\"width: {typeof width === 'number' ? width + 'px' : width}; height: {typeof height ===\n\t'number'\n\t\t? height + 'px'\n\t\t: height};\"\n\tuse:lazyLoad={{ onEnter: handleIntersection, rootMargin: '100px', once: true }}\n>\n\t{#if !isIntersecting && loading === 'lazy'}\n\t\t<div class=\"image-placeholder\">\n\t\t\t{#if placeholder}\n\t\t\t\t<img src={placeholder} {alt} class=\"placeholder-img\" />\n\t\t\t{:else}\n\t\t\t\t<div class=\"placeholder-skeleton\"></div>\n\t\t\t{/if}\n\t\t</div>\n\t{:else if hasError}\n\t\t<div class=\"image-error\">\n\t\t\t<div class=\"error-icon\">🖼️</div>\n\t\t\t<span>Image failed to load</span>\n\t\t</div>\n\t{:else}\n\t\t<picture>\n\t\t\t{#if webpSrcset}\n\t\t\t\t<source srcset={webpSrcset} sizes={sizes || '100vw'} type=\"image/webp\" />\n\t\t\t{/if}\n\t\t\t<img\n\t\t\t\tbind:this={imageElement}\n\t\t\t\t{src}\n\t\t\t\tsrcset={responsiveSrcset}\n\t\t\t\tsizes={sizes || '100vw'}\n\t\t\t\t{alt}\n\t\t\t\tclass=\"lazy-image {isLoaded ? 'loaded' : ''}\"\n\t\t\t\ton:load={handleLoad}\n\t\t\t\ton:error={handleError}\n\t\t\t\tdecoding=\"async\"\n\t\t\t\t{loading}\n\t\t\t/>\n\t\t</picture>\n\t{/if}\n</div>\n\n<style>\n\t.lazy-image-container {\n\t\tposition: relative;\n\t\toverflow: hidden;\n\t\tbackground: #1a1a1a;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tborder-radius: 8px;\n\t}\n\n\t.lazy-image {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n\t\ttransition: opacity 0.3s ease;\n\t\topacity: 0;\n\t}\n\n\t.lazy-image.loaded {\n\t\topacity: 1;\n\t}\n\n\t.image-placeholder {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\t.placeholder-img {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n\t\tfilter: blur(5px);\n\t\ttransform: scale(1.1);\n\t}\n\n\t.placeholder-skeleton {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: linear-gradient(90deg, #2a2a2a 25%, #3a3a3a 50%, #2a2a2a 75%);\n\t\tbackground-size: 200% 100%;\n\t\tanimation: loading 1.5s infinite;\n\t}\n\n\t@keyframes loading {\n\t\t0% {\n\t\t\tbackground-position: 200% 0;\n\t\t}\n\t\t100% {\n\t\t\tbackground-position: -200% 0;\n\t\t}\n\t}\n\n\t.image-error {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tcolor: #666;\n\t\tfont-size: 0.875rem;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tmin-height: 100px;\n\t}\n\n\t.error-icon {\n\t\tfont-size: 2rem;\n\t\tmargin-bottom: 0.5rem;\n\t\topacity: 0.5;\n\t}\n</style>\n","/**\n * Svelte action for TV navigation\n * Makes any element focusable and navigable with D-pad\n */\n\nimport { getTVNavigation } from '$lib/utils/tv-navigation';\nimport { getIsAndroidTV } from '$lib/utils/tv-detection';\n\ninterface TVNavigationOptions {\n\trow: number;\n\tcolumn: number;\n\tid?: string;\n\tdisabled?: boolean;\n\tonSelect?: () => void;\n\tfocusOnMount?: boolean;\n}\n\n/**\n * Svelte action to make an element TV navigable\n * \n * Usage:\n * <button use:tvNavigable={{ row: 0, column: 0, onSelect: handleClick }}>\n *   Click me\n * </button>\n */\nexport function tvNavigable(element: HTMLElement, options: TVNavigationOptions) {\n\t// Only enable on Android TV\n\tif (!getIsAndroidTV()) {\n\t\treturn {\n\t\t\tdestroy() {}\n\t\t};\n\t}\n\n\tconst navigation = getTVNavigation();\n\t\n\t// Register the element\n\tnavigation.registerElement(element, options.row, options.column, {\n\t\tid: options.id,\n\t\tonSelect: options.onSelect,\n\t\tdisabled: options.disabled\n\t});\n\n\t// Focus on mount if requested\n\tif (options.focusOnMount) {\n\t\tsetTimeout(() => {\n\t\t\telement.focus();\n\t\t}, 100);\n\t}\n\n\treturn {\n\t\tupdate(newOptions: TVNavigationOptions) {\n\t\t\t// Unregister and re-register with new options\n\t\t\tnavigation.unregisterElement(element);\n\t\t\tnavigation.registerElement(element, newOptions.row, newOptions.column, {\n\t\t\t\tid: newOptions.id,\n\t\t\t\tonSelect: newOptions.onSelect,\n\t\t\t\tdisabled: newOptions.disabled\n\t\t\t});\n\t\t},\n\t\t\n\t\tdestroy() {\n\t\t\tnavigation.unregisterElement(element);\n\t\t}\n\t};\n}\n\n/**\n * Svelte action to create a TV navigation grid\n * Automatically assigns row/column positions to child elements\n * \n * Usage:\n * <div use:tvGrid={{ columns: 4, startRow: 0 }}>\n *   <button>Item 1</button>\n *   <button>Item 2</button>\n *   <button>Item 3</button>\n * </div>\n */\nexport function tvGrid(element: HTMLElement, options: { columns: number; startRow?: number; selector?: string }) {\n\tif (!getIsAndroidTV()) {\n\t\treturn { destroy() {} };\n\t}\n\n\tconst navigation = getTVNavigation();\n\tconst { columns, startRow = 0, selector = 'button, [data-tv-navigable]' } = options;\n\t\n\tfunction setupGrid() {\n\t\tconst children = element.querySelectorAll(selector) as NodeListOf<HTMLElement>;\n\t\t\n\t\tchildren.forEach((child, index) => {\n\t\t\tconst row = startRow + Math.floor(index / columns);\n\t\t\tconst column = index % columns;\n\t\t\t\n\t\t\tnavigation.registerElement(child, row, column, {\n\t\t\t\tid: `grid-${startRow}-${index}`\n\t\t\t});\n\t\t});\n\t}\n\n\t// Initial setup\n\tsetupGrid();\n\n\t// Observer for dynamic content\n\tconst observer = new MutationObserver(() => {\n\t\t// Clear existing registrations for this grid\n\t\tconst children = element.querySelectorAll(selector) as NodeListOf<HTMLElement>;\n\t\tchildren.forEach(child => navigation.unregisterElement(child));\n\t\t\n\t\t// Re-setup grid\n\t\tsetupGrid();\n\t});\n\n\tobserver.observe(element, { childList: true, subtree: true });\n\n\treturn {\n\t\tupdate(newOptions: { columns: number; startRow?: number; selector?: string }) {\n\t\t\t// Clear existing registrations\n\t\t\tconst children = element.querySelectorAll(selector) as NodeListOf<HTMLElement>;\n\t\t\tchildren.forEach(child => navigation.unregisterElement(child));\n\t\t\t\n\t\t\t// Setup with new options\n\t\t\tObject.assign(options, newOptions);\n\t\t\tsetupGrid();\n\t\t},\n\t\t\n\t\tdestroy() {\n\t\t\tobserver.disconnect();\n\t\t\tconst children = element.querySelectorAll(selector) as NodeListOf<HTMLElement>;\n\t\t\tchildren.forEach(child => navigation.unregisterElement(child));\n\t\t}\n\t};\n}\n\n/**\n * Svelte action for TV focus management\n * Handles focus within a container\n */\nexport function tvFocusContainer(element: HTMLElement, options: { trapFocus?: boolean; initialFocus?: string } = {}) {\n\tif (!getIsAndroidTV()) {\n\t\treturn { destroy() {} };\n\t}\n\n\tconst navigation = getTVNavigation();\n\n\t// Set initial focus if specified\n\tif (options.initialFocus) {\n\t\tsetTimeout(() => {\n\t\t\tnavigation.focusById(options.initialFocus!);\n\t\t}, 100);\n\t}\n\n\t// Trap focus within container if enabled\n\tif (options.trapFocus) {\n\t\tconst handleKeyDown = (event: KeyboardEvent) => {\n\t\t\tif (event.key === 'Tab') {\n\t\t\t\tevent.preventDefault();\n\t\t\t\t// Handle tab navigation within container\n\t\t\t}\n\t\t};\n\n\t\telement.addEventListener('keydown', handleKeyDown);\n\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\telement.removeEventListener('keydown', handleKeyDown);\n\t\t\t}\n\t\t};\n\t}\n\n\treturn { destroy() {} };\n}","<script lang=\"ts\">\n\timport { Play } from 'lucide-svelte';\n\timport { goto } from '$app/navigation';\n\timport LazyImage from './LazyImage.svelte';\n\timport { trackComponentMount, trackComponentMountComplete } from '$lib/performance/monitor';\n\timport { tvNavigable } from '$lib/actions/tv-navigation';\n\timport { onMount } from 'svelte';\n\n\tinterface Props {\n\t\titem: {\n\t\t\tid: string;\n\t\t\tname: string;\n\t\t\tposter?: string;\n\t\t\ttype: string;\n\t\t\tyear?: string;\n\t\t\timdbRating?: string;\n\t\t\tgenre?: string[];\n\t\t};\n\t\tsize?: 'small' | 'medium' | 'large';\n\t\trow?: number;\n\t\tcolumn?: number;\n\t}\n\n\tlet { item, size = 'medium', row = 0, column = 0 }: Props = $props();\n\n\tonMount(() => {\n\t\ttrackComponentMount('MovieCard');\n\t\treturn () => trackComponentMountComplete('MovieCard');\n\t});\n\n\tconst sizeClasses = {\n\t\tsmall: 'w-32 h-44 sm:w-36 sm:h-52 md:w-40 md:h-56',\n\t\tmedium: 'w-36 h-52 sm:w-44 sm:h-64 md:w-48 md:h-72',\n\t\tlarge: 'w-44 h-64 sm:w-52 sm:h-76 md:w-56 md:h-80'\n\t};\n\n\t// Generate WebP poster URL if available\n\tconst webpPoster = $derived(\n\t\titem.poster ? item.poster.replace(/\\.(jpg|jpeg|png)$/i, '.webp') : ''\n\t);\n\n\t// Navigation handler for TV\n\tfunction handleNavigation() {\n\t\tconsole.log(`🎬 Navigating to content: ${item.name} (${item.id})`);\n\t\tconst url = item.type === 'series' ? `/series/${item.id}` : `/watch/${item.id}`;\n\t\tconsole.log(`🔗 Target URL: ${url}`);\n\t\tgoto(url);\n\t}\n</script>\n\n<button\n\tclass=\"movie-card group relative w-full cursor-pointer text-left\"\n\tdata-movie-card\n\tdata-tv-navigable\n\ttabindex=\"0\"\n\taria-label={item.name}\n\tuse:tvNavigable={{ row, column, id: `movie-${item.id}`, onSelect: handleNavigation }}\n\tonclick={handleNavigation}\n>\n\t<div class=\"relative\">\n\t\t<div\n\t\t\tclass=\"{sizeClasses[\n\t\t\t\tsize\n\t\t\t]} card-image relative overflow-hidden rounded-md bg-gray-900 shadow-lg transition-all duration-300\"\n\t\t>\n\t\t\t{#if item.poster}\n\t\t\t\t<LazyImage\n\t\t\t\t\tsrc={item.poster}\n\t\t\t\t\twebpSrc={webpPoster}\n\t\t\t\t\talt={item.name}\n\t\t\t\t\tsizes=\"(max-width: 768px) 150px, (max-width: 1200px) 200px, 250px\"\n\t\t\t\t\tclassName=\"h-full w-full object-cover\"\n\t\t\t\t/>\n\t\t\t{:else}\n\t\t\t\t<div\n\t\t\t\t\tclass=\"flex h-full w-full items-center justify-center bg-gradient-to-br from-gray-800 to-gray-900 text-gray-400\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t<div class=\"mb-2 text-3xl\">🎬</div>\n\t\t\t\t\t\t<div class=\"px-3 text-xs font-medium\">{item.name}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\n\t\t\t<!-- Gradient overlay -->\n\t\t\t<div\n\t\t\t\tclass=\"card-overlay absolute inset-0 bg-gradient-to-t from-black/80 via-transparent to-transparent opacity-0 transition-opacity duration-300\"\n\t\t\t></div>\n\n\t\t\t<!-- Hover controls -->\n\t\t\t<div\n\t\t\t\tclass=\"card-controls pointer-events-none absolute inset-0 flex items-center justify-center opacity-0 transition-opacity duration-300\"\n\t\t\t>\n\t\t\t\t<div class=\"rounded-full bg-white p-2 shadow-lg transition-all sm:p-3\">\n\t\t\t\t\t<Play class=\"h-4 w-4 text-black sm:h-5 sm:w-5 md:h-6 md:w-6\" fill=\"currentColor\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Bottom info on hover -->\n\t\t\t<div\n\t\t\t\tclass=\"card-info absolute right-0 bottom-0 left-0 p-2 text-white opacity-0 transition-opacity duration-300 sm:p-3\"\n\t\t\t>\n\t\t\t\t<h3 class=\"mb-1 text-xs leading-tight font-bold sm:text-sm\">{item.name}</h3>\n\t\t\t\t<div class=\"flex items-center space-x-1 text-xs sm:space-x-2\">\n\t\t\t\t\t{#if item.year}\n\t\t\t\t\t\t<span class=\"text-gray-300\">{item.year}</span>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#if item.imdbRating}\n\t\t\t\t\t\t<div class=\"flex items-center space-x-1\">\n\t\t\t\t\t\t\t<span class=\"text-yellow-400\">★</span>\n\t\t\t\t\t\t\t<span>{item.imdbRating}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t\t{#if item.genre && item.genre.length > 0}\n\t\t\t\t\t<div class=\"mt-1\">\n\t\t\t\t\t\t<span class=\"rounded bg-red-600 px-1 py-0.5 text-xs font-medium sm:px-1.5\">\n\t\t\t\t\t\t\t{item.genre[0]}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\n\t\t\t<!-- Title overlay for non-hover state -->\n\t\t\t<div class=\"card-title absolute bottom-0 left-0 right-0 p-2 text-white transition-opacity duration-300 sm:p-3\">\n\t\t\t\t<div class=\"absolute inset-0 bg-gradient-to-t from-black/90 via-black/50 to-transparent\"></div>\n\t\t\t\t<div class=\"relative z-10\">\n\t\t\t\t\t<h3 class=\"line-clamp-2 text-xs font-bold leading-tight sm:text-sm\">{item.name}</h3>\n\t\t\t\t\t{#if item.year}\n\t\t\t\t\t\t<p class=\"mt-1 text-xs text-gray-300\">{item.year}</p>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</button>\n\n<style>\n\t.movie-card:hover .card-image,\n\t.movie-card:focus .card-image {\n\t\ttransform: scale(1.1);\n\t\tbox-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.8);\n\t\tz-index: 50;\n\t\ttransition:\n\t\t\ttransform 0.3s ease-out,\n\t\t\tbox-shadow 0.3s ease-out;\n\t}\n\n\t.card-image {\n\t\ttransition:\n\t\t\ttransform 0.3s ease-out,\n\t\t\tbox-shadow 0.3s ease-out;\n\t}\n\n\t/* Enhanced keyboard focus styles */\n\t.movie-card:focus {\n\t\toutline: none;\n\t}\n\n\t.movie-card:focus .card-image {\n\t\toutline: 3px solid #dc2626;\n\t\toutline-offset: 4px;\n\t}\n\n\t.movie-card:hover .card-overlay,\n\t.movie-card:focus .card-overlay {\n\t\topacity: 1;\n\t}\n\n\t.movie-card:hover .card-controls,\n\t.movie-card:focus .card-controls {\n\t\topacity: 1;\n\t\ttransform: scale(1);\n\t}\n\n\t.movie-card:hover .card-info,\n\t.movie-card:focus .card-info {\n\t\topacity: 1;\n\t\ttransform: translateY(0);\n\t}\n\n\t.movie-card:hover .card-title,\n\t.movie-card:focus .card-title {\n\t\topacity: 0;\n\t\ttransform: translateY(10px);\n\t}\n\n\t.card-controls {\n\t\ttransform: scale(0.8);\n\t\ttransition:\n\t\t\topacity 0.3s ease-out,\n\t\t\ttransform 0.3s ease-out;\n\t}\n\n\t.card-info {\n\t\ttransform: translateY(10px);\n\t\ttransition:\n\t\t\topacity 0.3s ease-out,\n\t\t\ttransform 0.3s ease-out;\n\t}\n\n\t.card-title {\n\t\ttransition:\n\t\t\topacity 0.3s ease-out,\n\t\t\ttransform 0.3s ease-out;\n\t}\n</style>\n"],"names":["IntersectionManager","__publicField","options","observerId","observer","entries","entry","element","intersectionManager","setupImageLazyLoading","imageElement","src","placeholder","tempImage","lazyLoad","node","cleanup","PerformanceMonitor","metricName","entryType","list","value","name","metric","startMark","endMark","measure","navigationEntries","resourceEntries","performanceMonitor","trackComponentMount","componentName","trackComponentMountComplete","trackImageLoad","imageSrc","startTime","duration","$.prop","$$props","alt","webpSrc","width","height","loading","sizes","srcset","className","$.mutable_source","isLoaded","hasError","isIntersecting","loadStartTime","onMount","loadImage","generateResponsiveSrcset","baseSrc","w","$.get","$.set","handleLoad","handleError","handleIntersection","$.strict_equals","responsiveSrcset","webpSrcset","$$render","consequent","alternate","$.set_attribute","source","consequent_3","$.bind_this","img_1","$$value","consequent_2","alternate_1","consequent_1","alternate_2","$.set_style","div","tvNavigable","getIsAndroidTV","navigation","getTVNavigation","newOptions","size","row","column","sizeClasses","webpPoster","$.tag","handleNavigation","url","goto","$.template_effect","$.set_text","text_4","consequent_4","$.set_class","div_1"],"mappings":"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"}